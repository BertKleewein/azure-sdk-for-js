{
  "digestFormatVersion": 2,
  "dtdlVersions": [
    2,
    3
  ],
  "contexts": {
    "dtmi:dtdl:context;2": {
      "Array": "dtmi:dtdl:class:Array;2",
      "Boolean": "dtmi:dtdl:class:Boolean;2",
      "ComplexSchema": "dtmi:dtdl:class:ComplexSchema;2",
      "Command": "dtmi:dtdl:class:Command;2",
      "CommandPayload": "dtmi:dtdl:class:CommandPayload;2",
      "CommandType": "dtmi:dtdl:class:CommandType;2",
      "Component": "dtmi:dtdl:class:Component;2",
      "Content": "dtmi:dtdl:class:Content;2",
      "Date": "dtmi:dtdl:class:Date;2",
      "DateTime": "dtmi:dtdl:class:DateTime;2",
      "Double": "dtmi:dtdl:class:Double;2",
      "Duration": "dtmi:dtdl:class:Duration;2",
      "Entity": "dtmi:dtdl:class:Entity;2",
      "Enum": "dtmi:dtdl:class:Enum;2",
      "EnumValue": "dtmi:dtdl:class:EnumValue;2",
      "Field": "dtmi:dtdl:class:Field;2",
      "Float": "dtmi:dtdl:class:Float;2",
      "Integer": "dtmi:dtdl:class:Integer;2",
      "Interface": "dtmi:dtdl:class:Interface;2",
      "Long": "dtmi:dtdl:class:Long;2",
      "Map": "dtmi:dtdl:class:Map;2",
      "MapKey": "dtmi:dtdl:class:MapKey;2",
      "MapValue": "dtmi:dtdl:class:MapValue;2",
      "NamedEntity": "dtmi:dtdl:class:NamedEntity;2",
      "NumericSchema": "dtmi:dtdl:class:NumericSchema;2",
      "Object": "dtmi:dtdl:class:Object;2",
      "PrimitiveSchema": "dtmi:dtdl:class:PrimitiveSchema;2",
      "Property": "dtmi:dtdl:class:Property;2",
      "Relationship": "dtmi:dtdl:class:Relationship;2",
      "Schema": "dtmi:dtdl:class:Schema;2",
      "SchemaField": "dtmi:dtdl:class:SchemaField;2",
      "SemanticType": "dtmi:dtdl:class:SemanticType;2",
      "SemanticUnit": "dtmi:dtdl:class:SemanticUnit;2",
      "String": "dtmi:dtdl:class:String;2",
      "Telemetry": "dtmi:dtdl:class:Telemetry;2",
      "TemporalSchema": "dtmi:dtdl:class:TemporalSchema;2",
      "Time": "dtmi:dtdl:class:Time;2",
      "Unit": "dtmi:dtdl:class:Unit;2",
      "UnitAttribute": "dtmi:dtdl:class:UnitAttribute;2",
      "RatioUnit": "dtmi:standard:class:RatioUnit;2",
      "DecimalUnit": "dtmi:standard:class:DecimalUnit;2",
      "DecimalPrefix": "dtmi:standard:class:DecimalPrefix;2",
      "BinaryUnit": "dtmi:standard:class:BinaryUnit;2",
      "BinaryPrefix": "dtmi:standard:class:BinaryPrefix;2",
      "QuantitativeType": "dtmi:standard:class:QuantitativeType;2",
      "Acceleration": "dtmi:standard:class:Acceleration;2",
      "Angle": "dtmi:standard:class:Angle;2",
      "AngularAcceleration": "dtmi:standard:class:AngularAcceleration;2",
      "AngularVelocity": "dtmi:standard:class:AngularVelocity;2",
      "Area": "dtmi:standard:class:Area;2",
      "Capacitance": "dtmi:standard:class:Capacitance;2",
      "Current": "dtmi:standard:class:Current;2",
      "DataRate": "dtmi:standard:class:DataRate;2",
      "DataSize": "dtmi:standard:class:DataSize;2",
      "Density": "dtmi:standard:class:Density;2",
      "Distance": "dtmi:standard:class:Distance;2",
      "ElectricCharge": "dtmi:standard:class:ElectricCharge;2",
      "Energy": "dtmi:standard:class:Energy;2",
      "Force": "dtmi:standard:class:Force;2",
      "Frequency": "dtmi:standard:class:Frequency;2",
      "Humidity": "dtmi:standard:class:Humidity;2",
      "Illuminance": "dtmi:standard:class:Illuminance;2",
      "Inductance": "dtmi:standard:class:Inductance;2",
      "Latitude": "dtmi:standard:class:Latitude;2",
      "Longitude": "dtmi:standard:class:Longitude;2",
      "Length": "dtmi:standard:class:Length;2",
      "Luminance": "dtmi:standard:class:Luminance;2",
      "Luminosity": "dtmi:standard:class:Luminosity;2",
      "LuminousFlux": "dtmi:standard:class:LuminousFlux;2",
      "LuminousIntensity": "dtmi:standard:class:LuminousIntensity;2",
      "MagneticFlux": "dtmi:standard:class:MagneticFlux;2",
      "MagneticInduction": "dtmi:standard:class:MagneticInduction;2",
      "Mass": "dtmi:standard:class:Mass;2",
      "MassFlowRate": "dtmi:standard:class:MassFlowRate;2",
      "Power": "dtmi:standard:class:Power;2",
      "Pressure": "dtmi:standard:class:Pressure;2",
      "RelativeHumidity": "dtmi:standard:class:RelativeHumidity;2",
      "Resistance": "dtmi:standard:class:Resistance;2",
      "SoundPressure": "dtmi:standard:class:SoundPressure;2",
      "Temperature": "dtmi:standard:class:Temperature;2",
      "Thrust": "dtmi:standard:class:Thrust;2",
      "TimeSpan": "dtmi:standard:class:TimeSpan;2",
      "Torque": "dtmi:standard:class:Torque;2",
      "Velocity": "dtmi:standard:class:Velocity;2",
      "Voltage": "dtmi:standard:class:Voltage;2",
      "Volume": "dtmi:standard:class:Volume;2",
      "VolumeFlowRate": "dtmi:standard:class:VolumeFlowRate;2",
      "AccelerationUnit": "dtmi:standard:class:AccelerationUnit;2",
      "AngleUnit": "dtmi:standard:class:AngleUnit;2",
      "AngularAccelerationUnit": "dtmi:standard:class:AngularAccelerationUnit;2",
      "AngularVelocityUnit": "dtmi:standard:class:AngularVelocityUnit;2",
      "AreaUnit": "dtmi:standard:class:AreaUnit;2",
      "CapacitanceUnit": "dtmi:standard:class:CapacitanceUnit;2",
      "ChargeUnit": "dtmi:standard:class:ChargeUnit;2",
      "CurrentUnit": "dtmi:standard:class:CurrentUnit;2",
      "DataRateUnit": "dtmi:standard:class:DataRateUnit;2",
      "DataSizeUnit": "dtmi:standard:class:DataSizeUnit;2",
      "DensityUnit": "dtmi:standard:class:DensityUnit;2",
      "EnergyUnit": "dtmi:standard:class:EnergyUnit;2",
      "ForceUnit": "dtmi:standard:class:ForceUnit;2",
      "FrequencyUnit": "dtmi:standard:class:FrequencyUnit;2",
      "IlluminanceUnit": "dtmi:standard:class:IlluminanceUnit;2",
      "InductanceUnit": "dtmi:standard:class:InductanceUnit;2",
      "LengthUnit": "dtmi:standard:class:LengthUnit;2",
      "LuminanceUnit": "dtmi:standard:class:LuminanceUnit;2",
      "LuminousFluxUnit": "dtmi:standard:class:LuminousFluxUnit;2",
      "LuminousIntensityUnit": "dtmi:standard:class:LuminousIntensityUnit;2",
      "MagneticFluxUnit": "dtmi:standard:class:MagneticFluxUnit;2",
      "MagneticInductionUnit": "dtmi:standard:class:MagneticInductionUnit;2",
      "MassUnit": "dtmi:standard:class:MassUnit;2",
      "MassFlowRateUnit": "dtmi:standard:class:MassFlowRateUnit;2",
      "PowerUnit": "dtmi:standard:class:PowerUnit;2",
      "PressureUnit": "dtmi:standard:class:PressureUnit;2",
      "ResistanceUnit": "dtmi:standard:class:ResistanceUnit;2",
      "SoundPressureUnit": "dtmi:standard:class:SoundPressureUnit;2",
      "TemperatureUnit": "dtmi:standard:class:TemperatureUnit;2",
      "TimeUnit": "dtmi:standard:class:TimeUnit;2",
      "TorqueUnit": "dtmi:standard:class:TorqueUnit;2",
      "Unitless": "dtmi:standard:class:Unitless;2",
      "VelocityUnit": "dtmi:standard:class:VelocityUnit;2",
      "VoltageUnit": "dtmi:standard:class:VoltageUnit;2",
      "VolumeUnit": "dtmi:standard:class:VolumeUnit;2",
      "VolumeFlowRateUnit": "dtmi:standard:class:VolumeFlowRateUnit;2",
      "baseUnit": "dtmi:dtdl:property:baseUnit;2",
      "bottomUnit": "dtmi:dtdl:property:bottomUnit;2",
      "commandType": "dtmi:dtdl:property:commandType;2",
      "comment": "dtmi:dtdl:property:comment;2",
      "contents": "dtmi:dtdl:property:contents;2",
      "description": "dtmi:dtdl:property:description;2",
      "displayName": "dtmi:dtdl:property:displayName;2",
      "elementSchema": "dtmi:dtdl:property:elementSchema;2",
      "enumValue": "dtmi:dtdl:property:enumValue;2",
      "enumValues": "dtmi:dtdl:property:enumValues;2",
      "exponent": "dtmi:dtdl:property:exponent;2",
      "extends": "dtmi:dtdl:property:extends;2",
      "fields": "dtmi:dtdl:property:fields;2",
      "languageVersion": "dtmi:dtdl:property:languageVersion;2",
      "mapKey": "dtmi:dtdl:property:mapKey;2",
      "mapValue": "dtmi:dtdl:property:mapValue;2",
      "maxMultiplicity": "dtmi:dtdl:property:maxMultiplicity;2",
      "minMultiplicity": "dtmi:dtdl:property:minMultiplicity;2",
      "name": "dtmi:dtdl:property:name;2",
      "prefix": "dtmi:dtdl:property:prefix;2",
      "properties": "dtmi:dtdl:property:properties;2",
      "request": "dtmi:dtdl:property:request;2",
      "response": "dtmi:dtdl:property:response;2",
      "schema": "dtmi:dtdl:property:schema;2",
      "schemas": "dtmi:dtdl:property:schemas;2",
      "symbol": "dtmi:dtdl:property:symbol;2",
      "target": "dtmi:dtdl:property:target;2",
      "topUnit": "dtmi:dtdl:property:topUnit;2",
      "unit": "dtmi:dtdl:property:unit;2",
      "valueSchema": "dtmi:dtdl:property:valueSchema;2",
      "writable": "dtmi:dtdl:property:writable;2",
      "asynchronous": "dtmi:dtdl:instance:CommandType:asynchronous;2",
      "synchronous": "dtmi:dtdl:instance:CommandType:synchronous;2",
      "boolean": "dtmi:dtdl:instance:Schema:boolean;2",
      "date": "dtmi:dtdl:instance:Schema:date;2",
      "dateTime": "dtmi:dtdl:instance:Schema:dateTime;2",
      "double": "dtmi:dtdl:instance:Schema:double;2",
      "duration": "dtmi:dtdl:instance:Schema:duration;2",
      "float": "dtmi:dtdl:instance:Schema:float;2",
      "integer": "dtmi:dtdl:instance:Schema:integer;2",
      "long": "dtmi:dtdl:instance:Schema:long;2",
      "string": "dtmi:dtdl:instance:Schema:string;2",
      "time": "dtmi:dtdl:instance:Schema:time;2",
      "deci": "dtmi:standard:unitprefix:deci;2",
      "centi": "dtmi:standard:unitprefix:centi;2",
      "milli": "dtmi:standard:unitprefix:milli;2",
      "micro": "dtmi:standard:unitprefix:micro;2",
      "nano": "dtmi:standard:unitprefix:nano;2",
      "pico": "dtmi:standard:unitprefix:pico;2",
      "femto": "dtmi:standard:unitprefix:femto;2",
      "atto": "dtmi:standard:unitprefix:atto;2",
      "zepto": "dtmi:standard:unitprefix:zepto;2",
      "yocto": "dtmi:standard:unitprefix:yocto;2",
      "deka": "dtmi:standard:unitprefix:deka;2",
      "hecto": "dtmi:standard:unitprefix:hecto;2",
      "kilo": "dtmi:standard:unitprefix:kilo;2",
      "mega": "dtmi:standard:unitprefix:mega;2",
      "giga": "dtmi:standard:unitprefix:giga;2",
      "tera": "dtmi:standard:unitprefix:tera;2",
      "peta": "dtmi:standard:unitprefix:peta;2",
      "exa": "dtmi:standard:unitprefix:exa;2",
      "zetta": "dtmi:standard:unitprefix:zetta;2",
      "yotta": "dtmi:standard:unitprefix:yotta;2",
      "kibi": "dtmi:standard:unitprefix:kibi;2",
      "mebi": "dtmi:standard:unitprefix:mebi;2",
      "gibi": "dtmi:standard:unitprefix:gibi;2",
      "tebi": "dtmi:standard:unitprefix:tebi;2",
      "pebi": "dtmi:standard:unitprefix:pebi;2",
      "exbi": "dtmi:standard:unitprefix:exbi;2",
      "zebi": "dtmi:standard:unitprefix:zebi;2",
      "yobi": "dtmi:standard:unitprefix:yobi;2",
      "metrePerSecondSquared": "dtmi:standard:unit:metrePerSecondSquared;2",
      "centimetrePerSecondSquared": "dtmi:standard:unit:centimetrePerSecondSquared;2",
      "gForce": "dtmi:standard:unit:gForce;2",
      "radian": "dtmi:standard:unit:radian;2",
      "degreeOfArc": "dtmi:standard:unit:degreeOfArc;2",
      "minuteOfArc": "dtmi:standard:unit:minuteOfArc;2",
      "secondOfArc": "dtmi:standard:unit:secondOfArc;2",
      "turn": "dtmi:standard:unit:turn;2",
      "radianPerSecondSquared": "dtmi:standard:unit:radianPerSecondSquared;2",
      "radianPerSecond": "dtmi:standard:unit:radianPerSecond;2",
      "degreePerSecond": "dtmi:standard:unit:degreePerSecond;2",
      "revolutionPerSecond": "dtmi:standard:unit:revolutionPerSecond;2",
      "revolutionPerMinute": "dtmi:standard:unit:revolutionPerMinute;2",
      "squareMetre": "dtmi:standard:unit:squareMetre;2",
      "squareCentimetre": "dtmi:standard:unit:squareCentimetre;2",
      "squareMillimetre": "dtmi:standard:unit:squareMillimetre;2",
      "squareKilometre": "dtmi:standard:unit:squareKilometre;2",
      "hectare": "dtmi:standard:unit:hectare;2",
      "squareFoot": "dtmi:standard:unit:squareFoot;2",
      "squareInch": "dtmi:standard:unit:squareInch;2",
      "acre": "dtmi:standard:unit:acre;2",
      "farad": "dtmi:standard:unit:farad;2",
      "millifarad": "dtmi:standard:unit:millifarad;2",
      "microfarad": "dtmi:standard:unit:microfarad;2",
      "nanofarad": "dtmi:standard:unit:nanofarad;2",
      "picofarad": "dtmi:standard:unit:picofarad;2",
      "coulomb": "dtmi:standard:unit:coulomb;2",
      "ampere": "dtmi:standard:unit:ampere;2",
      "microampere": "dtmi:standard:unit:microampere;2",
      "milliampere": "dtmi:standard:unit:milliampere;2",
      "bitPerSecond": "dtmi:standard:unit:bitPerSecond;2",
      "kibibitPerSecond": "dtmi:standard:unit:kibibitPerSecond;2",
      "mebibitPerSecond": "dtmi:standard:unit:mebibitPerSecond;2",
      "gibibitPerSecond": "dtmi:standard:unit:gibibitPerSecond;2",
      "tebibitPerSecond": "dtmi:standard:unit:tebibitPerSecond;2",
      "exbibitPerSecond": "dtmi:standard:unit:exbibitPerSecond;2",
      "zebibitPerSecond": "dtmi:standard:unit:zebibitPerSecond;2",
      "yobibitPerSecond": "dtmi:standard:unit:yobibitPerSecond;2",
      "bytePerSecond": "dtmi:standard:unit:bytePerSecond;2",
      "kibibytePerSecond": "dtmi:standard:unit:kibibytePerSecond;2",
      "mebibytePerSecond": "dtmi:standard:unit:mebibytePerSecond;2",
      "gibibytePerSecond": "dtmi:standard:unit:gibibytePerSecond;2",
      "tebibytePerSecond": "dtmi:standard:unit:tebibytePerSecond;2",
      "exbibytePerSecond": "dtmi:standard:unit:exbibytePerSecond;2",
      "zebibytePerSecond": "dtmi:standard:unit:zebibytePerSecond;2",
      "yobibytePerSecond": "dtmi:standard:unit:yobibytePerSecond;2",
      "bit": "dtmi:standard:unit:bit;2",
      "kibibit": "dtmi:standard:unit:kibibit;2",
      "mebibit": "dtmi:standard:unit:mebibit;2",
      "gibibit": "dtmi:standard:unit:gibibit;2",
      "tebibit": "dtmi:standard:unit:tebibit;2",
      "exbibit": "dtmi:standard:unit:exbibit;2",
      "zebibit": "dtmi:standard:unit:zebibit;2",
      "yobibit": "dtmi:standard:unit:yobibit;2",
      "byte": "dtmi:standard:unit:byte;2",
      "kibibyte": "dtmi:standard:unit:kibibyte;2",
      "mebibyte": "dtmi:standard:unit:mebibyte;2",
      "gibibyte": "dtmi:standard:unit:gibibyte;2",
      "tebibyte": "dtmi:standard:unit:tebibyte;2",
      "exbibyte": "dtmi:standard:unit:exbibyte;2",
      "zebibyte": "dtmi:standard:unit:zebibyte;2",
      "yobibyte": "dtmi:standard:unit:yobibyte;2",
      "kilogramPerCubicMetre": "dtmi:standard:unit:kilogramPerCubicMetre;2",
      "gramPerCubicMetre": "dtmi:standard:unit:gramPerCubicMetre;2",
      "joule": "dtmi:standard:unit:joule;2",
      "kilojoule": "dtmi:standard:unit:kilojoule;2",
      "megajoule": "dtmi:standard:unit:megajoule;2",
      "gigajoule": "dtmi:standard:unit:gigajoule;2",
      "electronvolt": "dtmi:standard:unit:electronvolt;2",
      "megaelectronvolt": "dtmi:standard:unit:megaelectronvolt;2",
      "kilowattHour": "dtmi:standard:unit:kilowattHour;2",
      "newton": "dtmi:standard:unit:newton;2",
      "pound": "dtmi:standard:unit:pound;2",
      "ounce": "dtmi:standard:unit:ounce;2",
      "ton": "dtmi:standard:unit:ton;2",
      "hertz": "dtmi:standard:unit:hertz;2",
      "kilohertz": "dtmi:standard:unit:kilohertz;2",
      "megahertz": "dtmi:standard:unit:megahertz;2",
      "gigahertz": "dtmi:standard:unit:gigahertz;2",
      "lux": "dtmi:standard:unit:lux;2",
      "footcandle": "dtmi:standard:unit:footcandle;2",
      "henry": "dtmi:standard:unit:henry;2",
      "millihenry": "dtmi:standard:unit:millihenry;2",
      "microhenry": "dtmi:standard:unit:microhenry;2",
      "metre": "dtmi:standard:unit:metre;2",
      "centimetre": "dtmi:standard:unit:centimetre;2",
      "millimetre": "dtmi:standard:unit:millimetre;2",
      "micrometre": "dtmi:standard:unit:micrometre;2",
      "nanometre": "dtmi:standard:unit:nanometre;2",
      "kilometre": "dtmi:standard:unit:kilometre;2",
      "foot": "dtmi:standard:unit:foot;2",
      "inch": "dtmi:standard:unit:inch;2",
      "mile": "dtmi:standard:unit:mile;2",
      "nauticalMile": "dtmi:standard:unit:nauticalMile;2",
      "astronomicalUnit": "dtmi:standard:unit:astronomicalUnit;2",
      "candelaPerSquareMetre": "dtmi:standard:unit:candelaPerSquareMetre;2",
      "lumen": "dtmi:standard:unit:lumen;2",
      "candela": "dtmi:standard:unit:candela;2",
      "weber": "dtmi:standard:unit:weber;2",
      "maxwell": "dtmi:standard:unit:maxwell;2",
      "tesla": "dtmi:standard:unit:tesla;2",
      "kilogram": "dtmi:standard:unit:kilogram;2",
      "gram": "dtmi:standard:unit:gram;2",
      "milligram": "dtmi:standard:unit:milligram;2",
      "microgram": "dtmi:standard:unit:microgram;2",
      "tonne": "dtmi:standard:unit:tonne;2",
      "slug": "dtmi:standard:unit:slug;2",
      "gramPerSecond": "dtmi:standard:unit:gramPerSecond;2",
      "kilogramPerSecond": "dtmi:standard:unit:kilogramPerSecond;2",
      "gramPerHour": "dtmi:standard:unit:gramPerHour;2",
      "kilogramPerHour": "dtmi:standard:unit:kilogramPerHour;2",
      "watt": "dtmi:standard:unit:watt;2",
      "microwatt": "dtmi:standard:unit:microwatt;2",
      "milliwatt": "dtmi:standard:unit:milliwatt;2",
      "kilowatt": "dtmi:standard:unit:kilowatt;2",
      "megawatt": "dtmi:standard:unit:megawatt;2",
      "gigawatt": "dtmi:standard:unit:gigawatt;2",
      "horsepower": "dtmi:standard:unit:horsepower;2",
      "kilowattHourPerYear": "dtmi:standard:unit:kilowattHourPerYear;2",
      "pascal": "dtmi:standard:unit:pascal;2",
      "kilopascal": "dtmi:standard:unit:kilopascal;2",
      "bar": "dtmi:standard:unit:bar;2",
      "millibar": "dtmi:standard:unit:millibar;2",
      "millimetresOfMercury": "dtmi:standard:unit:millimetresOfMercury;2",
      "poundPerSquareInch": "dtmi:standard:unit:poundPerSquareInch;2",
      "inchesOfMercury": "dtmi:standard:unit:inchesOfMercury;2",
      "inchesOfWater": "dtmi:standard:unit:inchesOfWater;2",
      "ohm": "dtmi:standard:unit:ohm;2",
      "milliohm": "dtmi:standard:unit:milliohm;2",
      "kiloohm": "dtmi:standard:unit:kiloohm;2",
      "megaohm": "dtmi:standard:unit:megaohm;2",
      "decibel": "dtmi:standard:unit:decibel;2",
      "bel": "dtmi:standard:unit:bel;2",
      "kelvin": "dtmi:standard:unit:kelvin;2",
      "degreeCelsius": "dtmi:standard:unit:degreeCelsius;2",
      "degreeFahrenheit": "dtmi:standard:unit:degreeFahrenheit;2",
      "second": "dtmi:standard:unit:second;2",
      "millisecond": "dtmi:standard:unit:millisecond;2",
      "microsecond": "dtmi:standard:unit:microsecond;2",
      "nanosecond": "dtmi:standard:unit:nanosecond;2",
      "minute": "dtmi:standard:unit:minute;2",
      "hour": "dtmi:standard:unit:hour;2",
      "day": "dtmi:standard:unit:day;2",
      "year": "dtmi:standard:unit:year;2",
      "unity": "dtmi:standard:unit:unity;2",
      "percent": "dtmi:standard:unit:percent;2",
      "newtonMetre": "dtmi:standard:unit:newtonMetre;2",
      "metrePerSecond": "dtmi:standard:unit:metrePerSecond;2",
      "centimetrePerSecond": "dtmi:standard:unit:centimetrePerSecond;2",
      "kilometrePerSecond": "dtmi:standard:unit:kilometrePerSecond;2",
      "metrePerHour": "dtmi:standard:unit:metrePerHour;2",
      "kilometrePerHour": "dtmi:standard:unit:kilometrePerHour;2",
      "milePerHour": "dtmi:standard:unit:milePerHour;2",
      "milePerSecond": "dtmi:standard:unit:milePerSecond;2",
      "knot": "dtmi:standard:unit:knot;2",
      "volt": "dtmi:standard:unit:volt;2",
      "millivolt": "dtmi:standard:unit:millivolt;2",
      "microvolt": "dtmi:standard:unit:microvolt;2",
      "kilovolt": "dtmi:standard:unit:kilovolt;2",
      "megavolt": "dtmi:standard:unit:megavolt;2",
      "cubicMetre": "dtmi:standard:unit:cubicMetre;2",
      "cubicCentimetre": "dtmi:standard:unit:cubicCentimetre;2",
      "litre": "dtmi:standard:unit:litre;2",
      "millilitre": "dtmi:standard:unit:millilitre;2",
      "cubicFoot": "dtmi:standard:unit:cubicFoot;2",
      "cubicInch": "dtmi:standard:unit:cubicInch;2",
      "fluidOunce": "dtmi:standard:unit:fluidOunce;2",
      "gallon": "dtmi:standard:unit:gallon;2",
      "litrePerSecond": "dtmi:standard:unit:litrePerSecond;2",
      "millilitrePerSecond": "dtmi:standard:unit:millilitrePerSecond;2",
      "litrePerHour": "dtmi:standard:unit:litrePerHour;2",
      "millilitrePerHour": "dtmi:standard:unit:millilitrePerHour;2",
      "point": "dtmi:standard:schema:geospatial:point;2",
      "multiPoint": "dtmi:standard:schema:geospatial:multiPoint;2",
      "lineString": "dtmi:standard:schema:geospatial:lineString;2",
      "multiLineString": "dtmi:standard:schema:geospatial:multiLineString;2",
      "polygon": "dtmi:standard:schema:geospatial:polygon;2",
      "multiPolygon": "dtmi:standard:schema:geospatial:multiPolygon;2"
    },
    "dtmi:dtdl:context;3": {
      "DtdlExtension": "dtmi:dtdl:meta:DtdlExtension;3",
      "metamodel": "dtmi:dtdl:meta:metamodel;3",
      "model": "dtmi:dtdl:meta:model;3",
      "AdjunctType": "dtmi:dtdl:class:AdjunctType;3",
      "Alias": "dtmi:dtdl:class:Alias;3",
      "Array": "dtmi:dtdl:class:Array;3",
      "Boolean": "dtmi:dtdl:class:Boolean;3",
      "ComplexSchema": "dtmi:dtdl:class:ComplexSchema;3",
      "Command": "dtmi:dtdl:class:Command;3",
      "CommandPayload": "dtmi:dtdl:class:CommandPayload;3",
      "CommandRequest": "dtmi:dtdl:class:CommandRequest;3",
      "CommandResponse": "dtmi:dtdl:class:CommandResponse;3",
      "CommandType": "dtmi:dtdl:class:CommandType;3",
      "Component": "dtmi:dtdl:class:Component;3",
      "Content": "dtmi:dtdl:class:Content;3",
      "Date": "dtmi:dtdl:class:Date;3",
      "DateTime": "dtmi:dtdl:class:DateTime;3",
      "Double": "dtmi:dtdl:class:Double;3",
      "Duration": "dtmi:dtdl:class:Duration;3",
      "Entity": "dtmi:dtdl:class:Entity;3",
      "Enum": "dtmi:dtdl:class:Enum;3",
      "EnumValue": "dtmi:dtdl:class:EnumValue;3",
      "Field": "dtmi:dtdl:class:Field;3",
      "Float": "dtmi:dtdl:class:Float;3",
      "Integer": "dtmi:dtdl:class:Integer;3",
      "Interface": "dtmi:dtdl:class:Interface;3",
      "LatentType": "dtmi:dtdl:class:LatentType;3",
      "Long": "dtmi:dtdl:class:Long;3",
      "Map": "dtmi:dtdl:class:Map;3",
      "MapKey": "dtmi:dtdl:class:MapKey;3",
      "MapValue": "dtmi:dtdl:class:MapValue;3",
      "NamedEntity": "dtmi:dtdl:class:NamedEntity;3",
      "NamedLatentType": "dtmi:dtdl:class:NamedLatentType;3",
      "NumericSchema": "dtmi:dtdl:class:NumericSchema;3",
      "Object": "dtmi:dtdl:class:Object;3",
      "PrimitiveSchema": "dtmi:dtdl:class:PrimitiveSchema;3",
      "Property": "dtmi:dtdl:class:Property;3",
      "Relationship": "dtmi:dtdl:class:Relationship;3",
      "Schema": "dtmi:dtdl:class:Schema;3",
      "SchemaField": "dtmi:dtdl:class:SchemaField;3",
      "SemanticType": "dtmi:dtdl:class:SemanticType;3",
      "SemanticUnit": "dtmi:dtdl:class:SemanticUnit;3",
      "String": "dtmi:dtdl:class:String;3",
      "Telemetry": "dtmi:dtdl:class:Telemetry;3",
      "TemporalSchema": "dtmi:dtdl:class:TemporalSchema;3",
      "Time": "dtmi:dtdl:class:Time;3",
      "Unit": "dtmi:dtdl:class:Unit;3",
      "UnitAttribute": "dtmi:dtdl:class:UnitAttribute;3",
      "aliasFor": "dtmi:dtdl:property:aliasFor;3",
      "commandType": "dtmi:dtdl:property:commandType;3",
      "comment": "dtmi:dtdl:property:comment;3",
      "contents": "dtmi:dtdl:property:contents;3",
      "description": "dtmi:dtdl:property:description;3",
      "displayName": "dtmi:dtdl:property:displayName;3",
      "elementSchema": "dtmi:dtdl:property:elementSchema;3",
      "enumValue": "dtmi:dtdl:property:enumValue;3",
      "enumValues": "dtmi:dtdl:property:enumValues;3",
      "exponent": "dtmi:dtdl:property:exponent;3",
      "extends": "dtmi:dtdl:property:extends;3",
      "fields": "dtmi:dtdl:property:fields;3",
      "languageVersion": "dtmi:dtdl:property:languageVersion;3",
      "mapKey": "dtmi:dtdl:property:mapKey;3",
      "mapValue": "dtmi:dtdl:property:mapValue;3",
      "maxMultiplicity": "dtmi:dtdl:property:maxMultiplicity;3",
      "minMultiplicity": "dtmi:dtdl:property:minMultiplicity;3",
      "name": "dtmi:dtdl:property:name;3",
      "properties": "dtmi:dtdl:property:properties;3",
      "request": "dtmi:dtdl:property:request;3",
      "response": "dtmi:dtdl:property:response;3",
      "schema": "dtmi:dtdl:property:schema;3",
      "schemas": "dtmi:dtdl:property:schemas;3",
      "symbol": "dtmi:dtdl:property:symbol;3",
      "target": "dtmi:dtdl:property:target;3",
      "valueSchema": "dtmi:dtdl:property:valueSchema;3",
      "writable": "dtmi:dtdl:property:writable;3",
      "asynchronous": "dtmi:dtdl:instance:CommandType:asynchronous;3",
      "synchronous": "dtmi:dtdl:instance:CommandType:synchronous;3",
      "boolean": "dtmi:dtdl:instance:Schema:boolean;3",
      "date": "dtmi:dtdl:instance:Schema:date;3",
      "dateTime": "dtmi:dtdl:instance:Schema:dateTime;3",
      "double": "dtmi:dtdl:instance:Schema:double;3",
      "duration": "dtmi:dtdl:instance:Schema:duration;3",
      "float": "dtmi:dtdl:instance:Schema:float;3",
      "integer": "dtmi:dtdl:instance:Schema:integer;3",
      "long": "dtmi:dtdl:instance:Schema:long;3",
      "string": "dtmi:dtdl:instance:Schema:string;3",
      "time": "dtmi:dtdl:instance:Schema:time;3",
      "point": "dtmi:standard:schema:geospatial:point;3",
      "multiPoint": "dtmi:standard:schema:geospatial:multiPoint;3",
      "lineString": "dtmi:standard:schema:geospatial:lineString;3",
      "multiLineString": "dtmi:standard:schema:geospatial:multiLineString;3",
      "polygon": "dtmi:standard:schema:geospatial:polygon;3",
      "multiPolygon": "dtmi:standard:schema:geospatial:multiPolygon;3"
    },
    "dtmi:iotcentral:context;2": {
      "State": "dtmi:iotcentral:class:State;2",
      "Event": "dtmi:iotcentral:class:Event;2",
      "Location": "dtmi:iotcentral:class:Location;2",
      "VelocityVector": "dtmi:iotcentral:class:VelocityVector;2",
      "AccelerationVector": "dtmi:iotcentral:class:AccelerationVector;2",
      "vector": "dtmi:iotcentral:schema:vector;2",
      "geopoint": "dtmi:iotcentral:schema:geopoint;2"
    },
    "dtmi:iotcentral:context;3": {
      "State": "dtmi:iotcentral:class:State;3",
      "Event": "dtmi:iotcentral:class:Event;3",
      "Location": "dtmi:iotcentral:class:Location;3",
      "VelocityVector": "dtmi:iotcentral:class:VelocityVector;3",
      "AccelerationVector": "dtmi:iotcentral:class:AccelerationVector;3",
      "vector": "dtmi:iotcentral:schema:vector;3",
      "geopoint": "dtmi:iotcentral:schema:geopoint;3"
    },
    "dtmi:dtdl:extension:quantitativeTypes;1": {
      "RatioUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:class:RatioUnit",
      "UnitPrefix": "dtmi:dtdl:extension:quantitativeTypes:v1:class:UnitPrefix",
      "DecimalUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:class:DecimalUnit",
      "BinaryUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:class:BinaryUnit",
      "SymbolicUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:class:SymbolicUnit",
      "QuantitativeType": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "DecimalPrefix": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:DecimalPrefix",
      "BinaryPrefix": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:BinaryPrefix",
      "Acceleration": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Acceleration",
      "Angle": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Angle",
      "AngularAcceleration": "dtmi:dtdl:extension:quantitativeTypes:v1:class:AngularAcceleration",
      "AngularVelocity": "dtmi:dtdl:extension:quantitativeTypes:v1:class:AngularVelocity",
      "ApparentEnergy": "dtmi:dtdl:extension:quantitativeTypes:v1:class:ApparentEnergy",
      "ApparentPower": "dtmi:dtdl:extension:quantitativeTypes:v1:class:ApparentPower",
      "Area": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Area",
      "Capacitance": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Capacitance",
      "Concentration": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Concentration",
      "Current": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Current",
      "DataRate": "dtmi:dtdl:extension:quantitativeTypes:v1:class:DataRate",
      "DataSize": "dtmi:dtdl:extension:quantitativeTypes:v1:class:DataSize",
      "Density": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Density",
      "Distance": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Distance",
      "ElectricCharge": "dtmi:dtdl:extension:quantitativeTypes:v1:class:ElectricCharge",
      "Energy": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Energy",
      "EnergyRate": "dtmi:dtdl:extension:quantitativeTypes:v1:class:EnergyRate",
      "Force": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Force",
      "Frequency": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Frequency",
      "Humidity": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Humidity",
      "Illuminance": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Illuminance",
      "Inductance": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Inductance",
      "IonizingRadiationDose": "dtmi:dtdl:extension:quantitativeTypes:v1:class:IonizingRadiationDose",
      "Irradiance": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Irradiance",
      "Latitude": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Latitude",
      "Longitude": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Longitude",
      "Length": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Length",
      "Luminance": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Luminance",
      "Luminosity": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Luminosity",
      "LuminousFlux": "dtmi:dtdl:extension:quantitativeTypes:v1:class:LuminousFlux",
      "LuminousIntensity": "dtmi:dtdl:extension:quantitativeTypes:v1:class:LuminousIntensity",
      "MagneticFlux": "dtmi:dtdl:extension:quantitativeTypes:v1:class:MagneticFlux",
      "MagneticInduction": "dtmi:dtdl:extension:quantitativeTypes:v1:class:MagneticInduction",
      "Mass": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Mass",
      "MassFlowRate": "dtmi:dtdl:extension:quantitativeTypes:v1:class:MassFlowRate",
      "Power": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Power",
      "Pressure": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Pressure",
      "Radioactivity": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Radioactivity",
      "ReactiveEnergy": "dtmi:dtdl:extension:quantitativeTypes:v1:class:ReactiveEnergy",
      "ReactivePower": "dtmi:dtdl:extension:quantitativeTypes:v1:class:ReactivePower",
      "RelativeDensity": "dtmi:dtdl:extension:quantitativeTypes:v1:class:RelativeDensity",
      "RelativeHumidity": "dtmi:dtdl:extension:quantitativeTypes:v1:class:RelativeHumidity",
      "Resistance": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Resistance",
      "SoundPressure": "dtmi:dtdl:extension:quantitativeTypes:v1:class:SoundPressure",
      "Temperature": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Temperature",
      "Thrust": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Thrust",
      "TimeSpan": "dtmi:dtdl:extension:quantitativeTypes:v1:class:TimeSpan",
      "Torque": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Torque",
      "Velocity": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Velocity",
      "Voltage": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Voltage",
      "Volume": "dtmi:dtdl:extension:quantitativeTypes:v1:class:Volume",
      "VolumeFlowRate": "dtmi:dtdl:extension:quantitativeTypes:v1:class:VolumeFlowRate",
      "AccelerationUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:AccelerationUnit",
      "AngleUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:AngleUnit",
      "AngularAccelerationUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:AngularAccelerationUnit",
      "AngularVelocityUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:AngularVelocityUnit",
      "ApparentEnergyUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:ApparentEnergyUnit",
      "ApparentPowerUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:ApparentPowerUnit",
      "AreaUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:AreaUnit",
      "CapacitanceUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:CapacitanceUnit",
      "ChargeUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:ChargeUnit",
      "CurrentUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:CurrentUnit",
      "DataRateUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:DataRateUnit",
      "DataSizeUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:DataSizeUnit",
      "DensityUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:DensityUnit",
      "EnergyUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:EnergyUnit",
      "EnergyRateUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:EnergyRateUnit",
      "ForceUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:ForceUnit",
      "FrequencyUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:FrequencyUnit",
      "IlluminanceUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:IlluminanceUnit",
      "InductanceUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:InductanceUnit",
      "IonizingRadiationDoseUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:IonizingRadiationDoseUnit",
      "IrradianceUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:IrradianceUnit",
      "LengthUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:LengthUnit",
      "LuminanceUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:LuminanceUnit",
      "LuminousFluxUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:LuminousFluxUnit",
      "LuminousIntensityUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:LuminousIntensityUnit",
      "MagneticFluxUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:MagneticFluxUnit",
      "MagneticInductionUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:MagneticInductionUnit",
      "MassUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:MassUnit",
      "MassFlowRateUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:MassFlowRateUnit",
      "PowerUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:PowerUnit",
      "PressureUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:PressureUnit",
      "RadioactivityUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:RadioactivityUnit",
      "ReactiveEnergyUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:ReactiveEnergyUnit",
      "ReactivePowerUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:ReactivePowerUnit",
      "ResistanceUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:ResistanceUnit",
      "SoundPressureUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:SoundPressureUnit",
      "TemperatureUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:TemperatureUnit",
      "TimeUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:TimeUnit",
      "TorqueUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:TorqueUnit",
      "Unitless": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:Unitless",
      "VelocityUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:VelocityUnit",
      "VoltageUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:VoltageUnit",
      "VolumeUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:VolumeUnit",
      "VolumeFlowRateUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:VolumeFlowRateUnit",
      "unit": "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit",
      "topUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:property:topUnit",
      "bottomUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:property:bottomUnit",
      "baseUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:property:baseUnit",
      "prefix": "dtmi:dtdl:extension:quantitativeTypes:v1:property:prefix",
      "deci": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:deci",
      "centi": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:centi",
      "milli": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:milli",
      "micro": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:micro",
      "nano": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:nano",
      "pico": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:pico",
      "femto": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:femto",
      "atto": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:atto",
      "zepto": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:zepto",
      "yocto": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:yocto",
      "deca": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:deca",
      "hecto": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:hecto",
      "kilo": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:kilo",
      "mega": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:mega",
      "giga": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:giga",
      "tera": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:tera",
      "peta": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:peta",
      "exa": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:exa",
      "zetta": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:zetta",
      "yotta": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:yotta",
      "kibi": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:kibi",
      "mebi": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:mebi",
      "gibi": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:gibi",
      "tebi": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:tebi",
      "pebi": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:pebi",
      "exbi": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:exbi",
      "zebi": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:zebi",
      "yobi": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:yobi",
      "metrePerSecondSquared": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:metrePerSecondSquared",
      "centimetrePerSecondSquared": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:centimetrePerSecondSquared",
      "gForce": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gForce",
      "radian": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:radian",
      "degreeOfArc": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:degreeOfArc",
      "minuteOfArc": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:minuteOfArc",
      "secondOfArc": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:secondOfArc",
      "turn": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:turn",
      "radianPerSecondSquared": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:radianPerSecondSquared",
      "radianPerSecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:radianPerSecond",
      "degreePerSecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:degreePerSecond",
      "revolutionPerSecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:revolutionPerSecond",
      "revolutionPerMinute": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:revolutionPerMinute",
      "voltAmpereHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:voltAmpereHour",
      "kilovoltAmpereHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilovoltAmpereHour",
      "megavoltAmpereHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:megavoltAmpereHour",
      "gigavoltAmpereHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gigavoltAmpereHour",
      "voltAmpere": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:voltAmpere",
      "millivoltAmpere": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:millivoltAmpere",
      "kilovoltAmpere": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilovoltAmpere",
      "megavoltAmpere": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:megavoltAmpere",
      "gigavoltAmpere": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gigavoltAmpere",
      "squareMetre": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:squareMetre",
      "squareCentimetre": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:squareCentimetre",
      "squareMillimetre": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:squareMillimetre",
      "squareKilometre": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:squareKilometre",
      "hectare": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:hectare",
      "squareFoot": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:squareFoot",
      "squareInch": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:squareInch",
      "acre": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:acre",
      "farad": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:farad",
      "millifarad": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:millifarad",
      "microfarad": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:microfarad",
      "nanofarad": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:nanofarad",
      "picofarad": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:picofarad",
      "coulomb": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:coulomb",
      "ampereHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:ampereHour",
      "milliampereHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:milliampereHour",
      "ampere": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:ampere",
      "microampere": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:microampere",
      "milliampere": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:milliampere",
      "kiloampere": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kiloampere",
      "bitPerSecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:bitPerSecond",
      "kibibitPerSecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kibibitPerSecond",
      "mebibitPerSecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:mebibitPerSecond",
      "gibibitPerSecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gibibitPerSecond",
      "tebibitPerSecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:tebibitPerSecond",
      "exbibitPerSecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:exbibitPerSecond",
      "zebibitPerSecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:zebibitPerSecond",
      "yobibitPerSecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:yobibitPerSecond",
      "bytePerSecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:bytePerSecond",
      "kibibytePerSecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kibibytePerSecond",
      "mebibytePerSecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:mebibytePerSecond",
      "gibibytePerSecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gibibytePerSecond",
      "tebibytePerSecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:tebibytePerSecond",
      "exbibytePerSecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:exbibytePerSecond",
      "zebibytePerSecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:zebibytePerSecond",
      "yobibytePerSecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:yobibytePerSecond",
      "bit": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:bit",
      "kibibit": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kibibit",
      "mebibit": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:mebibit",
      "gibibit": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gibibit",
      "tebibit": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:tebibit",
      "exbibit": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:exbibit",
      "zebibit": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:zebibit",
      "yobibit": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:yobibit",
      "byte": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:byte",
      "kibibyte": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kibibyte",
      "mebibyte": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:mebibyte",
      "gibibyte": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gibibyte",
      "tebibyte": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:tebibyte",
      "exbibyte": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:exbibyte",
      "zebibyte": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:zebibyte",
      "yobibyte": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:yobibyte",
      "kilogramPerCubicMetre": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilogramPerCubicMetre",
      "gramPerCubicMetre": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gramPerCubicMetre",
      "milligramPerCubicMetre": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:milligramPerCubicMetre",
      "microgramPerCubicMetre": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:microgramPerCubicMetre",
      "joule": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:joule",
      "kilojoule": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilojoule",
      "megajoule": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:megajoule",
      "gigajoule": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gigajoule",
      "electronvolt": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:electronvolt",
      "megaelectronvolt": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:megaelectronvolt",
      "wattHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:wattHour",
      "milliwattHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:milliwattHour",
      "kilowattHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilowattHour",
      "megawattHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:megawattHour",
      "gigawattHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gigawattHour",
      "terawattHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:terawattHour",
      "britishThermalUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:britishThermalUnit",
      "kiloBritishThermalUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kiloBritishThermalUnit",
      "joulePerHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:joulePerHour",
      "kilojoulePerHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilojoulePerHour",
      "megajoulePerHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:megajoulePerHour",
      "gigajoulePerHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gigajoulePerHour",
      "britishThermalUnitPerHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:britishThermalUnitPerHour",
      "kiloBritishThermalUnitPerHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kiloBritishThermalUnitPerHour",
      "newton": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:newton",
      "pound": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:pound",
      "ounce": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:ounce",
      "ton": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:ton",
      "hertz": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:hertz",
      "millihertz": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:millihertz",
      "kilohertz": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilohertz",
      "megahertz": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:megahertz",
      "gigahertz": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gigahertz",
      "lux": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:lux",
      "footcandle": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:footcandle",
      "henry": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:henry",
      "millihenry": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:millihenry",
      "microhenry": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:microhenry",
      "gray": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gray",
      "milligray": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:milligray",
      "microgray": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:microgray",
      "sievert": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:sievert",
      "millisievert": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:millisievert",
      "microsievert": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:microsievert",
      "wattPerSquareMetre": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:wattPerSquareMetre",
      "metre": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:metre",
      "centimetre": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:centimetre",
      "millimetre": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:millimetre",
      "micrometre": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:micrometre",
      "nanometre": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:nanometre",
      "kilometre": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilometre",
      "foot": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:foot",
      "inch": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:inch",
      "mile": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:mile",
      "nauticalMile": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:nauticalMile",
      "astronomicalUnit": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:astronomicalUnit",
      "candelaPerSquareMetre": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:candelaPerSquareMetre",
      "lumen": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:lumen",
      "candela": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:candela",
      "weber": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:weber",
      "maxwell": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:maxwell",
      "tesla": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:tesla",
      "gauss": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gauss",
      "kilogram": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilogram",
      "gram": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gram",
      "milligram": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:milligram",
      "microgram": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:microgram",
      "tonne": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:tonne",
      "slug": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:slug",
      "massPound": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:massPound",
      "gramPerSecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gramPerSecond",
      "kilogramPerSecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilogramPerSecond",
      "gramPerHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gramPerHour",
      "kilogramPerHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilogramPerHour",
      "massPoundPerHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:massPoundPerHour",
      "watt": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:watt",
      "microwatt": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:microwatt",
      "milliwatt": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:milliwatt",
      "kilowatt": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilowatt",
      "megawatt": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:megawatt",
      "gigawatt": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gigawatt",
      "horsepower": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:horsepower",
      "kilowattHourPerYear": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilowattHourPerYear",
      "pascal": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:pascal",
      "decapascal": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:decapascal",
      "hectopascal": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:hectopascal",
      "kilopascal": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilopascal",
      "bar": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:bar",
      "millibar": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:millibar",
      "millimetresOfMercury": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:millimetresOfMercury",
      "poundPerSquareInch": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:poundPerSquareInch",
      "inchesOfMercury": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:inchesOfMercury",
      "inchesOfWater": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:inchesOfWater",
      "becquerel": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:becquerel",
      "kilobecquerel": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilobecquerel",
      "megabecquerel": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:megabecquerel",
      "gigabecquerel": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gigabecquerel",
      "voltAmpereReactiveHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:voltAmpereReactiveHour",
      "kilovoltAmpereReactiveHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilovoltAmpereReactiveHour",
      "megavoltAmpereReactiveHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:megavoltAmpereReactiveHour",
      "gigavoltAmpereReactiveHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gigavoltAmpereReactiveHour",
      "voltAmpereReactive": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:voltAmpereReactive",
      "millivoltAmpereReactive": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:millivoltAmpereReactive",
      "kilovoltAmpereReactive": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilovoltAmpereReactive",
      "megavoltAmpereReactive": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:megavoltAmpereReactive",
      "gigavoltAmpereReactive": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gigavoltAmpereReactive",
      "ohm": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:ohm",
      "milliohm": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:milliohm",
      "kiloohm": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kiloohm",
      "megaohm": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:megaohm",
      "decibel": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:decibel",
      "bel": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:bel",
      "kelvin": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kelvin",
      "degreeCelsius": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:degreeCelsius",
      "degreeFahrenheit": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:degreeFahrenheit",
      "second": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:second",
      "millisecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:millisecond",
      "microsecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:microsecond",
      "nanosecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:nanosecond",
      "minute": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:minute",
      "hour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:hour",
      "day": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:day",
      "year": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:year",
      "unity": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:unity",
      "percent": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:percent",
      "partsPerMillion": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:partsPerMillion",
      "partsPerBillion": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:partsPerBillion",
      "partsPerTrillion": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:partsPerTrillion",
      "partsPerQuadrillion": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:partsPerQuadrillion",
      "newtonMetre": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:newtonMetre",
      "metrePerSecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:metrePerSecond",
      "centimetrePerSecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:centimetrePerSecond",
      "kilometrePerSecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilometrePerSecond",
      "metrePerHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:metrePerHour",
      "kilometrePerHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilometrePerHour",
      "milePerHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:milePerHour",
      "milePerSecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:milePerSecond",
      "knot": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:knot",
      "volt": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:volt",
      "millivolt": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:millivolt",
      "microvolt": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:microvolt",
      "kilovolt": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilovolt",
      "megavolt": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:megavolt",
      "cubicMetre": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:cubicMetre",
      "cubicCentimetre": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:cubicCentimetre",
      "litre": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:litre",
      "millilitre": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:millilitre",
      "cubicFoot": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:cubicFoot",
      "cubicInch": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:cubicInch",
      "fluidOunce": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:fluidOunce",
      "gallon": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gallon",
      "litrePerSecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:litrePerSecond",
      "millilitrePerSecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:millilitrePerSecond",
      "litrePerHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:litrePerHour",
      "millilitrePerHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:millilitrePerHour",
      "gallonPerMinute": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gallonPerMinute",
      "gallonPerHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gallonPerHour",
      "cubicFootPerMinute": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:cubicFootPerMinute",
      "cubicMetrePerHour": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:cubicMetrePerHour",
      "cubicMetrePerMinute": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:cubicMetrePerMinute",
      "cubicMetrePerSecond": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:cubicMetrePerSecond"
    },
    "dtmi:dtdl:extension:historization;1": {
      "Historized": "dtmi:dtdl:extension:historization:v1:Historized"
    },
    "dtmi:dtdl:extension:annotation;1": {
      "ValueAnnotation": "dtmi:dtdl:extension:annotation:v1:ValueAnnotation",
      "annotates": "dtmi:dtdl:extension:annotation:v1:ValueAnnotation:annotates"
    },
    "dtmi:dtdl:extension:overriding;1": {
      "Override": "dtmi:dtdl:extension:overriding:v1:Override",
      "overrides": "dtmi:dtdl:extension:overriding:v1:Override:overrides"
    },
    "dtmi:dtdl:extension:initialization;1": {
      "Initialized": "dtmi:dtdl:extension:initialization:v1:Initialized",
      "initialValue": "dtmi:dtdl:extension:initialization:v1:Initialized:initialValue"
    },
    "dtmi:dtdl:extension:optionality;1": {
      "Optional": "dtmi:dtdl:extension:optionality:v1:Optional",
      "defaultValue": "dtmi:dtdl:extension:optionality:v1:Optional:defaultValue"
    }
  },
  "baseClass": "Entity",
  "partitionClasses": [
    "Interface"
  ],
  "rootableClasses": {
    "2": [
      "Interface"
    ],
    "3": [
      "Interface"
    ]
  },
  "aliases": {
    "dtmi:dtdl:class:Alias;3": "dtmi:dtdl:property:aliasFor;3"
  },
  "identifierDefinition": {
    "Interface": {
      "2": {
        "maxLength": 128
      },
      "3": {
        "maxLength": 128
      }
    },
    "2": {
      "pattern": "^dtmi:[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?(?::[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?)*;[1-9][0-9]{0,8}$",
      "maxLength": 2048
    },
    "3": {
      "pattern": "^dtmi:[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?(?::[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?)*(?:;[1-9][0-9]{0,8}(?:\\.[1-9][0-9]{0,5})?)?$",
      "maxLength": 2048
    }
  },
  "identifierReference": {
    "2": {
      "pattern": "^dtmi:[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?(?::[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?)*;[1-9][0-9]{0,8}$",
      "maxLength": 2048
    },
    "3": {
      "pattern": "^dtmi:[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?(?::[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?)*(?:;[1-9][0-9]{0,8}(?:\\.[1-9][0-9]{0,5})?)?$",
      "maxLength": 2048
    }
  },
  "partitions": {
    "2": {},
    "3": {
      "maxBytes": 1048576
    }
  },
  "dtdlVersionsAllowingLocalTerms": [],
  "dtdlVersionsAllowingDynamicExtensions": [
    3
  ],
  "contextsMergeDefinitions": [],
  "extensionDocumentation": {
    "dtmi:dtdl:extension:annotation;1": {
      "description": {
        "en-us": "Add custom metadata to a Property or a Telemetry.",
        "es-es": "Agregue metadatos personalizados a una Property o una Telemetry."
      }
    },
    "dtmi:dtdl:extension:historization;1": {
      "description": {
        "en-us": "Record the historical sequence of values of a Property or Telemetry and the times at which values change.",
        "es-es": "Registre la secuencia histórica de valores de una Property o Telemetry y las horas en que cambian los valores."
      }
    },
    "dtmi:dtdl:extension:initialization;1": {
      "description": {
        "es-es": "Especifique un valor inicial para una Property.",
        "en-us": "Specify an initial value for a Property."
      }
    },
    "dtmi:dtdl:extension:optionality;1": {
      "description": {
        "es-es": "Especifique un valor predeterminado para una solicitud de Command que se emite sin un valor de solicitud explícito.",
        "en-us": "Specify a default value for a Command request that is issued without an explicit request value."
      }
    },
    "dtmi:dtdl:extension:overriding;1": {
      "description": {
        "es-es": "Invalide una propiedad de modelo con un valor de instancia.",
        "en-us": "Override a model property with an instance value."
      }
    },
    "dtmi:dtdl:extension:quantitativeTypes;1": {
      "description": {
        "en-us": "A set of standard semantic types, unit types, and units.",
        "es-es": "Un conjunto de tipos semánticos estándar, tipos de unidades y unidades."
      }
    },
    "dtmi:iotcentral:context;2": {
      "description": {
        "en-us": "A set of semantic types and schema types used by IoT Central.",
        "es-es": "Un conjunto de tipos semánticos y tipos de esquema utilizados por IoT Central."
      }
    },
    "dtmi:iotcentral:context;3": {
      "description": {
        "en-us": "A set of semantic types and schema types used by IoT Central.",
        "es-es": "Un conjunto de tipos semánticos y tipos de esquema utilizados por IoT Central."
      }
    }
  },
  "affiliateContextsImplicitDtdlVersions": {
    "dtmi:iotcentral:context;2": 2
  },
  "extensionKinds": [
    "None",
    "SemanticType",
    "SemanticUnit",
    "Unit",
    "UnitAttribute",
    "AdjunctType",
    "LatentType",
    "NamedLatentType"
  ],
  "extensibleMaterialClasses": {
    "2": [
      "Unit",
      "UnitAttribute"
    ],
    "3": [
      "LatentType",
      "NamedLatentType",
      "Unit",
      "UnitAttribute"
    ]
  },
  "materialClasses": {
    "Array": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "ComplexSchema",
      "typeOptionalVersions": [],
      "idRequiredVersions": [],
      "instance": {
        "criteriaText": "is a JSON array that conforms to the specific Array element defined in the model",
        "2": {
          "element": {
            "jsonType": "array"
          },
          "eachChild": {
            "instanceProperty": [
              "elementSchema"
            ]
          }
        },
        "3": {
          "element": {
            "jsonType": "array"
          },
          "eachChild": {
            "instanceProperty": [
              "elementSchema"
            ]
          }
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:Array",
        "dtmi:dtdl:class:ComplexSchema",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:Schema"
      ],
      "concreteSubclasses": {
        "2": [
          "Array"
        ],
        "3": [
          "Array"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "elements": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Array.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Array."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of Array.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of Array."
      },
      "badTypeActionFormat": {
        "2": "Provide a @type{line3} of Array, or provide a value for property '{property}'{line1} with @type of Array.",
        "3": "Provide a @type{line3} of Array, or provide a value for property '{property}'{line1} with @type of Array."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "elementSchema": {
          "_": {
            "literal": false,
            "class": "Schema",
            "abstract": true,
            "plural": false,
            "optional": false,
            "inherited": false,
            "shadowed": false,
            "description": {
              "en-us": "The data type of each element in the Array, which is an instance of Schema.",
              "es-es": "El tipo de datos de cada elemento de Array, que es una instancia de Schema."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              3,
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "Boolean": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "PrimitiveSchema",
      "typeOptionalVersions": [],
      "idRequiredVersions": [],
      "instance": {
        "criteriaText": "is a boolean value",
        "2": {
          "element": {
            "jsonType": "boolean"
          },
          "eachChild": {}
        },
        "3": {
          "element": {
            "jsonType": "boolean"
          },
          "eachChild": {}
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:Boolean",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:PrimitiveSchema",
        "dtmi:dtdl:class:Schema"
      ],
      "concreteSubclasses": {
        "2": [
          "Boolean"
        ],
        "3": [
          "Boolean"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "Boolean"
        ],
        "3": [
          "Boolean"
        ]
      },
      "elements": {
        "2": [
          {
            "id": "dtmi:dtdl:instance:Schema:boolean;2",
            "name": "boolean",
            "description": {
              "en-us": "a boolean value",
              "es-es": "un valor booleano"
            }
          }
        ],
        "3": [
          {
            "id": "dtmi:dtdl:instance:Schema:boolean;3",
            "name": "boolean",
            "description": {
              "en-us": "a boolean value",
              "es-es": "un valor booleano"
            }
          }
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "standardElementIds": {
        "2": [
          "dtmi:dtdl:instance:Schema:boolean;2"
        ],
        "3": [
          "dtmi:dtdl:instance:Schema:boolean;3"
        ]
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a standard value for this property.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Use the following value for property '{property}'{line1}: boolean.",
        "3": "Use the following value for property '{property}'{line1}: boolean."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "Command": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "Content",
      "typeOptionalVersions": [],
      "idRequiredVersions": [],
      "typeIds": [
        "dtmi:dtdl:class:Command",
        "dtmi:dtdl:class:Content",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:NamedEntity"
      ],
      "concreteSubclasses": {
        "2": [
          "Command"
        ],
        "3": [
          "Command"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "elements": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Command.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Command."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of Command.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of Command."
      },
      "badTypeActionFormat": {
        "2": "Provide a @type{line3} of Command, or provide a value for property '{property}'{line1} with @type of Command.",
        "3": "Provide a @type{line3} of Command, or provide a value for property '{property}'{line1} with @type of Command."
      },
      "properties": {
        "commandType": {
          "_": {
            "literal": false,
            "class": "CommandType",
            "abstract": false,
            "plural": false,
            "optional": true,
            "inherited": false,
            "shadowed": false,
            "description": {
              "en-us": "This property is deprecated. Either value, synchronous or asynchronous, has the same meaning: a command that starts execution within a configurable time and that completes execution within a configurable time.",
              "es-es": "Esta propiedad está en desuso. Cualquiera de los valores, synchronous o asynchronous, tiene el mismo significado: un comando que inicia la ejecución dentro de un tiempo configurable y que completa la ejecución dentro de un tiempo configurable."
            }
          },
          "2": {
            "idRequired": true,
            "allowed": true,
            "class": "CommandType",
            "versions": [
              2
            ],
            "maxCount": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": true,
            "allowed": true,
            "class": "CommandType",
            "versions": [
              3,
              2
            ],
            "maxCount": 1,
            "typeRequired": true,
            "hidden": true,
            "uniqueAmong": []
          }
        },
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The programming name of the element.",
              "es-es": "Nombre de programación del elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanuméricos y guiones bajos, comenzando con una letra, terminando con alfanuméricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": [
              {
                "property": "contents",
                "class": "Interface"
              }
            ]
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanum�ricos y guiones bajos, comenzando con una letra, terminando con alfanum�ricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": [
              {
                "property": "contents",
                "class": "Interface"
              }
            ]
          }
        },
        "request": {
          "_": {
            "literal": false,
            "class": "CommandPayload",
            "abstract": false,
            "plural": false,
            "optional": true,
            "inherited": false,
            "shadowed": false,
            "description": {
              "en-us": "A description of the input to the Command.",
              "es-es": "Una descripción de la entrada al Command."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "class": "CommandPayload",
            "versions": [
              2
            ],
            "maxCount": 1,
            "typeRequired": false,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "CommandRequest",
            "versions": [
              3
            ],
            "maxCount": 1,
            "typeRequired": false,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "response": {
          "_": {
            "literal": false,
            "class": "CommandPayload",
            "abstract": false,
            "plural": false,
            "optional": true,
            "inherited": false,
            "shadowed": false,
            "description": {
              "en-us": "A description of the output of the Command.",
              "es-es": "Una descripción de la salida del Command."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "class": "CommandPayload",
            "versions": [
              2
            ],
            "maxCount": 1,
            "typeRequired": false,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "CommandResponse",
            "versions": [
              3
            ],
            "maxCount": 1,
            "typeRequired": false,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "CommandPayload": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "SchemaField",
      "typeOptionalVersions": [
        2
      ],
      "idRequiredVersions": [],
      "typeIds": [
        "dtmi:dtdl:class:CommandPayload",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:NamedEntity",
        "dtmi:dtdl:class:SchemaField"
      ],
      "concreteSubclasses": {
        "2": [
          "CommandPayload"
        ],
        "3": [
          "CommandRequest",
          "CommandResponse"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "elements": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of CommandPayload.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of CommandRequest or CommandResponse."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of CommandPayload.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of CommandRequest or CommandResponse."
      },
      "badTypeActionFormat": {
        "2": "Provide a @type{line3} of CommandPayload, or provide a value for property '{property}'{line1} with @type of CommandPayload.",
        "3": "Provide a @type{line3} of CommandRequest or CommandResponse, or provide a value for property '{property}'{line1} with @type of CommandRequest or CommandResponse."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The programming name of the element.",
              "es-es": "Nombre de programación del elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanuméricos y guiones bajos, comenzando con una letra, terminando con alfanuméricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanum�ricos y guiones bajos, comenzando con una letra, terminando con alfanum�ricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "schema": {
          "_": {
            "literal": false,
            "class": "Schema",
            "abstract": true,
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The data type of the element, which is an instance of Schema.",
              "es-es": "El tipo de datos del elemento, que es una instancia de Schema."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              3,
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "CommandType": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "Entity",
      "typeOptionalVersions": [],
      "idRequiredVersions": [
        2,
        3
      ],
      "typeIds": [
        "dtmi:dtdl:class:CommandType",
        "dtmi:dtdl:class:Entity"
      ],
      "concreteSubclasses": {
        "2": [
          "CommandType"
        ],
        "3": [
          "CommandType"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "CommandType"
        ],
        "3": [
          "CommandType"
        ]
      },
      "elements": {
        "2": [
          {
            "id": "dtmi:dtdl:instance:CommandType:asynchronous;2",
            "name": "asynchronous",
            "description": {
              "es-es": "El comando se completará en algún momento después de que el control vuelva al llamador. Una vez completado el comando, el resultado y las salidas están disponibles.",
              "en-us": "The command will complete sometime after control returns to the caller. After the command completes, the result and any outputs are available."
            }
          },
          {
            "id": "dtmi:dtdl:instance:CommandType:synchronous;2",
            "name": "synchronous",
            "description": {
              "es-es": "El comando se completará cuando el control vuelva al llamador. El resultado y las salidas están disponibles inmediatamente.",
              "en-us": "The command will be complete when control returns to the caller. The result and any outputs are available immediately."
            }
          }
        ],
        "3": [
          {
            "id": "dtmi:dtdl:instance:CommandType:asynchronous;3",
            "name": "asynchronous",
            "description": {
              "es-es": "El comando se completará en algún momento después de que el control vuelva al llamador. Una vez completado el comando, el resultado y las salidas están disponibles.",
              "en-us": "The command will complete sometime after control returns to the caller. After the command completes, the result and any outputs are available."
            }
          },
          {
            "id": "dtmi:dtdl:instance:CommandType:synchronous;3",
            "name": "synchronous",
            "description": {
              "es-es": "El comando se completará cuando el control vuelva al llamador. El resultado y las salidas están disponibles inmediatamente.",
              "en-us": "The command will be complete when control returns to the caller. The result and any outputs are available immediately."
            }
          }
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "standardElementIds": {
        "2": [
          "dtmi:dtdl:instance:CommandType:asynchronous;2",
          "dtmi:dtdl:instance:CommandType:synchronous;2"
        ],
        "3": [
          "dtmi:dtdl:instance:CommandType:asynchronous;3",
          "dtmi:dtdl:instance:CommandType:synchronous;3"
        ]
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a standard value for this property.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Use one of the following values for property '{property}'{line1}: asynchronous, synchronous.",
        "3": "Use one of the following values for property '{property}'{line1}: asynchronous, synchronous."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "ComplexSchema": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": true,
      "overt": false,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "Schema",
      "typeOptionalVersions": [],
      "idRequiredVersions": [
        2,
        3
      ],
      "typeIds": [
        "dtmi:dtdl:class:ComplexSchema",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:Schema"
      ],
      "concreteSubclasses": {
        "2": [
          "Array",
          "Enum",
          "Map",
          "Object"
        ],
        "3": [
          "Array",
          "Enum",
          "Map",
          "Object"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "elements": {
        "2": [
          {
            "id": "dtmi:standard:schema:geospatial:lineString;2",
            "name": "lineString",
            "description": {
              "en-us": "GeoJSON LineString",
              "es-es": "GeoJSON LineString"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:multiLineString;2",
            "name": "multiLineString",
            "description": {
              "en-us": "GeoJSON MultiLineString",
              "es-es": "GeoJSON MultiLineString"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:multiPoint;2",
            "name": "multiPoint",
            "description": {
              "en-us": "GeoJSON MultiPoint",
              "es-es": "GeoJSON MultiPoint"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:multiPolygon;2",
            "name": "multiPolygon",
            "description": {
              "en-us": "GeoJSON MultiPolygon",
              "es-es": "GeoJSON MultiPolygon"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:point;2",
            "name": "point",
            "description": {
              "en-us": "GeoJSON Point",
              "es-es": "GeoJSON Point"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:polygon;2",
            "name": "polygon",
            "description": {
              "en-us": "GeoJSON Polygon",
              "es-es": "GeoJSON Polygon"
            }
          }
        ],
        "3": [
          {
            "id": "dtmi:standard:schema:geospatial:lineString;3",
            "name": "lineString",
            "description": {
              "en-us": "GeoJSON LineString",
              "es-es": "GeoJSON LineString"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:multiLineString;3",
            "name": "multiLineString",
            "description": {
              "en-us": "GeoJSON MultiLineString",
              "es-es": "GeoJSON MultiLineString"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:multiPoint;3",
            "name": "multiPoint",
            "description": {
              "en-us": "GeoJSON MultiPoint",
              "es-es": "GeoJSON MultiPoint"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:multiPolygon;3",
            "name": "multiPolygon",
            "description": {
              "en-us": "GeoJSON MultiPolygon",
              "es-es": "GeoJSON MultiPolygon"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:point;3",
            "name": "point",
            "description": {
              "en-us": "GeoJSON Point",
              "es-es": "GeoJSON Point"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:polygon;3",
            "name": "polygon",
            "description": {
              "en-us": "GeoJSON Polygon",
              "es-es": "GeoJSON Polygon"
            }
          }
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Array, Enum, Map, or Object.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Array, Enum, Map, or Object."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of Array, Enum, Map, or Object.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of Array, Enum, Map, or Object."
      },
      "badTypeActionFormat": {
        "2": "Provide a @type{line3} in the set of allowable types, or provide a value for property '{property}'{line1} with @type in the set of allowable types.",
        "3": "Provide a @type{line3} in the set of allowable types, or provide a value for property '{property}'{line1} with @type in the set of allowable types."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "Component": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "Content",
      "typeOptionalVersions": [],
      "idRequiredVersions": [],
      "typeIds": [
        "dtmi:dtdl:class:Component",
        "dtmi:dtdl:class:Content",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:NamedEntity"
      ],
      "concreteSubclasses": {
        "2": [
          "Component"
        ],
        "3": [
          "Component"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "elements": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Component.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Component."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of Component.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of Component."
      },
      "badTypeActionFormat": {
        "2": "Provide a @type{line3} of Component, or provide a value for property '{property}'{line1} with @type of Component.",
        "3": "Provide a @type{line3} of Component, or provide a value for property '{property}'{line1} with @type of Component."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The programming name of the element.",
              "es-es": "Nombre de programación del elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanuméricos y guiones bajos, comenzando con una letra, terminando con alfanuméricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": [
              {
                "property": "contents",
                "class": "Interface"
              }
            ]
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanum�ricos y guiones bajos, comenzando con una letra, terminando con alfanum�ricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": [
              {
                "property": "contents",
                "class": "Interface"
              }
            ]
          }
        },
        "schema": {
          "_": {
            "literal": false,
            "class": "Interface",
            "abstract": false,
            "plural": false,
            "optional": false,
            "inherited": false,
            "shadowed": false,
            "description": {
              "en-us": "The data type of the Component, which is an instance of Interface.",
              "es-es": "El tipo de datos de Component, que es una instancia de Interface."
            }
          },
          "2": {
            "idRequired": true,
            "allowed": true,
            "class": "Interface",
            "versions": [
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": true,
            "allowed": true,
            "class": "Interface",
            "versions": [
              3,
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "Content": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": true,
      "overt": false,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "NamedEntity",
      "typeOptionalVersions": [],
      "idRequiredVersions": [],
      "typeIds": [
        "dtmi:dtdl:class:Content",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:NamedEntity"
      ],
      "concreteSubclasses": {
        "2": [
          "Command",
          "Component",
          "Property",
          "Relationship",
          "Telemetry"
        ],
        "3": [
          "Command",
          "Component",
          "Property",
          "Relationship",
          "Telemetry"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "elements": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Command, Component, Property, Relationship, or Telemetry.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Command, Component, Property, Relationship, or Telemetry."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of Command, Component, Property, Relationship, or Telemetry.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of Command, Component, Property, Relationship, or Telemetry."
      },
      "badTypeActionFormat": {
        "2": "Provide a @type{line3} in the set of allowable types, or provide a value for property '{property}'{line1} with @type in the set of allowable types.",
        "3": "Provide a @type{line3} in the set of allowable types, or provide a value for property '{property}'{line1} with @type in the set of allowable types."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The programming name of the element.",
              "es-es": "Nombre de programación del elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanuméricos y guiones bajos, comenzando con una letra, terminando con alfanuméricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": [
              {
                "property": "contents",
                "class": "Interface"
              }
            ]
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanum�ricos y guiones bajos, comenzando con una letra, terminando con alfanum�ricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": [
              {
                "property": "contents",
                "class": "Interface"
              }
            ]
          }
        }
      }
    },
    "Date": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "TemporalSchema",
      "typeOptionalVersions": [],
      "idRequiredVersions": [],
      "instance": {
        "criteriaText": "is a string value that conforms to the RFC 3339 definition of 'date'",
        "2": {
          "element": {
            "jsonType": "string",
            "datatype": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          },
          "eachChild": {}
        },
        "3": {
          "element": {
            "jsonType": "string",
            "datatype": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          },
          "eachChild": {}
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:Date",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:PrimitiveSchema",
        "dtmi:dtdl:class:Schema",
        "dtmi:dtdl:class:TemporalSchema"
      ],
      "concreteSubclasses": {
        "2": [
          "Date"
        ],
        "3": [
          "Date"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "Date"
        ],
        "3": [
          "Date"
        ]
      },
      "elements": {
        "2": [
          {
            "id": "dtmi:dtdl:instance:Schema:date;2",
            "name": "date",
            "description": {
              "en-us": "a date in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
              "es-es": "una fecha en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
            }
          }
        ],
        "3": [
          {
            "id": "dtmi:dtdl:instance:Schema:date;3",
            "name": "date",
            "description": {
              "en-us": "a date in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
              "es-es": "una fecha en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
            }
          }
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "standardElementIds": {
        "2": [
          "dtmi:dtdl:instance:Schema:date;2"
        ],
        "3": [
          "dtmi:dtdl:instance:Schema:date;3"
        ]
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a standard value for this property.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Use the following value for property '{property}'{line1}: date.",
        "3": "Use the following value for property '{property}'{line1}: date."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "DateTime": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "TemporalSchema",
      "typeOptionalVersions": [],
      "idRequiredVersions": [],
      "instance": {
        "criteriaText": "is a string value that conforms to the RFC 3339 definition of 'dateTime'",
        "2": {
          "element": {
            "jsonType": "string",
            "datatype": "dateTime",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(?:\\.[0-9]+)?(?:Z|(?:\\+|\\-)[0-9]{2}:[0-9]{2})$"
          },
          "eachChild": {}
        },
        "3": {
          "element": {
            "jsonType": "string",
            "datatype": "dateTime",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(?:\\.[0-9]+)?(?:Z|(?:\\+|\\-)[0-9]{2}:[0-9]{2})$"
          },
          "eachChild": {}
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:DateTime",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:PrimitiveSchema",
        "dtmi:dtdl:class:Schema",
        "dtmi:dtdl:class:TemporalSchema"
      ],
      "concreteSubclasses": {
        "2": [
          "DateTime"
        ],
        "3": [
          "DateTime"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "DateTime"
        ],
        "3": [
          "DateTime"
        ]
      },
      "elements": {
        "2": [
          {
            "id": "dtmi:dtdl:instance:Schema:dateTime;2",
            "name": "dateTime",
            "description": {
              "en-us": "a date and time in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
              "es-es": "una fecha y hora en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
            }
          }
        ],
        "3": [
          {
            "id": "dtmi:dtdl:instance:Schema:dateTime;3",
            "name": "dateTime",
            "description": {
              "en-us": "a date and time in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
              "es-es": "una fecha y hora en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
            }
          }
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "standardElementIds": {
        "2": [
          "dtmi:dtdl:instance:Schema:dateTime;2"
        ],
        "3": [
          "dtmi:dtdl:instance:Schema:dateTime;3"
        ]
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a standard value for this property.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Use the following value for property '{property}'{line1}: dateTime.",
        "3": "Use the following value for property '{property}'{line1}: dateTime."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "Double": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "NumericSchema",
      "typeOptionalVersions": [],
      "idRequiredVersions": [],
      "instance": {
        "criteriaText": "is a numeric value that conforms to the XSD definition of 'double'",
        "2": {
          "element": {
            "jsonType": "number",
            "datatype": "double"
          },
          "eachChild": {}
        },
        "3": {
          "element": {
            "jsonType": "number",
            "datatype": "double"
          },
          "eachChild": {}
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:Double",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:NumericSchema",
        "dtmi:dtdl:class:PrimitiveSchema",
        "dtmi:dtdl:class:Schema"
      ],
      "concreteSubclasses": {
        "2": [
          "Double"
        ],
        "3": [
          "Double"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "Double"
        ],
        "3": [
          "Double"
        ]
      },
      "elements": {
        "2": [
          {
            "id": "dtmi:dtdl:instance:Schema:double;2",
            "name": "double",
            "description": {
              "en-us": "a finite numeric value that is expressible in IEEE 754 double-precision floating point format, conformant with xsd:double",
              "es-es": "un valor numérico finito que es expresable en formato de coma flotante de doble precisión IEEE 754, conforme con xsd:double"
            }
          }
        ],
        "3": [
          {
            "id": "dtmi:dtdl:instance:Schema:double;3",
            "name": "double",
            "description": {
              "en-us": "a finite numeric value that is expressible in IEEE 754 double-precision floating point format, conformant with xsd:double",
              "es-es": "un valor numérico finito que es expresable en formato de coma flotante de doble precisión IEEE 754, conforme con xsd:double"
            }
          }
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "standardElementIds": {
        "2": [
          "dtmi:dtdl:instance:Schema:double;2"
        ],
        "3": [
          "dtmi:dtdl:instance:Schema:double;3"
        ]
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a standard value for this property.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Use the following value for property '{property}'{line1}: double.",
        "3": "Use the following value for property '{property}'{line1}: double."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "Duration": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "TemporalSchema",
      "typeOptionalVersions": [],
      "idRequiredVersions": [],
      "instance": {
        "criteriaText": "is a string value that conforms to the ISO 8601 definition of 'duration'",
        "2": {
          "element": {
            "jsonType": "string",
            "datatype": "duration",
            "pattern": "^P(?!$)(?:(?:\\d+Y)|(?:\\d+\\.\\d+Y$))?(?:(?:\\d+M)|(?:\\d+\\.\\d+M$))?(?:(?:\\d+D)|(?:\\d+\\.\\d+D$))?(?:T(?!$)(?:(?:\\d+H)|(?:\\d+\\.\\d+H$))?(?:(?:\\d+M)|(?:\\d+\\.\\d+M$))?(?:\\d+(?:\\.\\d+)?S)?)?$"
          },
          "eachChild": {}
        },
        "3": {
          "element": {
            "jsonType": "string",
            "datatype": "duration",
            "pattern": "^P(?!$)(?:(?:\\d+Y)|(?:\\d+\\.\\d+Y$))?(?:(?:\\d+M)|(?:\\d+\\.\\d+M$))?(?:(?:\\d+D)|(?:\\d+\\.\\d+D$))?(?:T(?!$)(?:(?:\\d+H)|(?:\\d+\\.\\d+H$))?(?:(?:\\d+M)|(?:\\d+\\.\\d+M$))?(?:\\d+(?:\\.\\d+)?S)?)?$"
          },
          "eachChild": {}
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:Duration",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:PrimitiveSchema",
        "dtmi:dtdl:class:Schema",
        "dtmi:dtdl:class:TemporalSchema"
      ],
      "concreteSubclasses": {
        "2": [
          "Duration"
        ],
        "3": [
          "Duration"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "Duration"
        ],
        "3": [
          "Duration"
        ]
      },
      "elements": {
        "2": [
          {
            "id": "dtmi:dtdl:instance:Schema:duration;2",
            "name": "duration",
            "description": {
              "en-us": "a duration in ISO 8601 format",
              "es-es": "una duración en formato ISO 8601"
            }
          }
        ],
        "3": [
          {
            "id": "dtmi:dtdl:instance:Schema:duration;3",
            "name": "duration",
            "description": {
              "en-us": "a duration in ISO 8601 format",
              "es-es": "una duración en formato ISO 8601"
            }
          }
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "standardElementIds": {
        "2": [
          "dtmi:dtdl:instance:Schema:duration;2"
        ],
        "3": [
          "dtmi:dtdl:instance:Schema:duration;3"
        ]
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a standard value for this property.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Use the following value for property '{property}'{line1}: duration.",
        "3": "Use the following value for property '{property}'{line1}: duration."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "Entity": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": true,
      "overt": false,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": null,
      "typeOptionalVersions": [],
      "idRequiredVersions": [],
      "typeIds": [
        "dtmi:dtdl:class:Entity"
      ],
      "concreteSubclasses": {
        "2": [
          "Array",
          "Boolean",
          "Command",
          "CommandPayload",
          "CommandType",
          "Component",
          "Date",
          "DateTime",
          "Double",
          "Duration",
          "Enum",
          "EnumValue",
          "Field",
          "Float",
          "Integer",
          "Interface",
          "Long",
          "Map",
          "MapKey",
          "MapValue",
          "Object",
          "Property",
          "Relationship",
          "String",
          "Telemetry",
          "Time"
        ],
        "3": [
          "Array",
          "Boolean",
          "Command",
          "CommandRequest",
          "CommandResponse",
          "CommandType",
          "Component",
          "Date",
          "DateTime",
          "Double",
          "Duration",
          "Enum",
          "EnumValue",
          "Field",
          "Float",
          "Integer",
          "Interface",
          "Long",
          "Map",
          "MapKey",
          "MapValue",
          "Object",
          "Property",
          "Relationship",
          "String",
          "Telemetry",
          "Time"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "Boolean",
          "CommandType",
          "Date",
          "DateTime",
          "Double",
          "Duration",
          "Float",
          "Integer",
          "Long",
          "String",
          "Time"
        ],
        "3": [
          "Boolean",
          "CommandType",
          "Date",
          "DateTime",
          "Double",
          "Duration",
          "Float",
          "Integer",
          "Long",
          "String",
          "Time"
        ]
      },
      "elements": {
        "2": [
          {
            "id": "dtmi:dtdl:instance:CommandType:asynchronous;2",
            "name": "asynchronous",
            "description": {
              "es-es": "El comando se completará en algún momento después de que el control vuelva al llamador. Una vez completado el comando, el resultado y las salidas están disponibles.",
              "en-us": "The command will complete sometime after control returns to the caller. After the command completes, the result and any outputs are available."
            }
          },
          {
            "id": "dtmi:dtdl:instance:CommandType:synchronous;2",
            "name": "synchronous",
            "description": {
              "es-es": "El comando se completará cuando el control vuelva al llamador. El resultado y las salidas están disponibles inmediatamente.",
              "en-us": "The command will be complete when control returns to the caller. The result and any outputs are available immediately."
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:boolean;2",
            "name": "boolean",
            "description": {
              "en-us": "a boolean value",
              "es-es": "un valor booleano"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:date;2",
            "name": "date",
            "description": {
              "en-us": "a date in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
              "es-es": "una fecha en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:dateTime;2",
            "name": "dateTime",
            "description": {
              "en-us": "a date and time in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
              "es-es": "una fecha y hora en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:double;2",
            "name": "double",
            "description": {
              "en-us": "a finite numeric value that is expressible in IEEE 754 double-precision floating point format, conformant with xsd:double",
              "es-es": "un valor numérico finito que es expresable en formato de coma flotante de doble precisión IEEE 754, conforme con xsd:double"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:duration;2",
            "name": "duration",
            "description": {
              "en-us": "a duration in ISO 8601 format",
              "es-es": "una duración en formato ISO 8601"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:float;2",
            "name": "float",
            "description": {
              "en-us": "a finite numeric value that is expressible in IEEE 754 single-precision floating point format, conformant with xsd:float",
              "es-es": "un valor numérico finito que es expresable en formato de coma flotante de precisión única IEEE 754, conforme con xsd:float"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:integer;2",
            "name": "integer",
            "description": {
              "en-us": "a signed integral numeric value that is expressible in 4 bytes",
              "es-es": "un valor numérico integral con firma que se puede expresar en 4 bytes"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:long;2",
            "name": "long",
            "description": {
              "en-us": "a signed integral numeric value that is expressible in 8 bytes",
              "es-es": "un valor numérico integral con firma que se puede expresar en 8 bytes"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:string;2",
            "name": "string",
            "description": {
              "en-us": "a UTF8 string",
              "es-es": "una cadena UTF8"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:time;2",
            "name": "time",
            "description": {
              "en-us": "a time in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
              "es-es": "una hora en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:lineString;2",
            "name": "lineString",
            "description": {
              "en-us": "GeoJSON LineString",
              "es-es": "GeoJSON LineString"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:multiLineString;2",
            "name": "multiLineString",
            "description": {
              "en-us": "GeoJSON MultiLineString",
              "es-es": "GeoJSON MultiLineString"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:multiPoint;2",
            "name": "multiPoint",
            "description": {
              "en-us": "GeoJSON MultiPoint",
              "es-es": "GeoJSON MultiPoint"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:multiPolygon;2",
            "name": "multiPolygon",
            "description": {
              "en-us": "GeoJSON MultiPolygon",
              "es-es": "GeoJSON MultiPolygon"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:point;2",
            "name": "point",
            "description": {
              "en-us": "GeoJSON Point",
              "es-es": "GeoJSON Point"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:polygon;2",
            "name": "polygon",
            "description": {
              "en-us": "GeoJSON Polygon",
              "es-es": "GeoJSON Polygon"
            }
          }
        ],
        "3": [
          {
            "id": "dtmi:dtdl:instance:CommandType:asynchronous;3",
            "name": "asynchronous",
            "description": {
              "es-es": "El comando se completará en algún momento después de que el control vuelva al llamador. Una vez completado el comando, el resultado y las salidas están disponibles.",
              "en-us": "The command will complete sometime after control returns to the caller. After the command completes, the result and any outputs are available."
            }
          },
          {
            "id": "dtmi:dtdl:instance:CommandType:synchronous;3",
            "name": "synchronous",
            "description": {
              "es-es": "El comando se completará cuando el control vuelva al llamador. El resultado y las salidas están disponibles inmediatamente.",
              "en-us": "The command will be complete when control returns to the caller. The result and any outputs are available immediately."
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:boolean;3",
            "name": "boolean",
            "description": {
              "en-us": "a boolean value",
              "es-es": "un valor booleano"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:date;3",
            "name": "date",
            "description": {
              "en-us": "a date in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
              "es-es": "una fecha en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:dateTime;3",
            "name": "dateTime",
            "description": {
              "en-us": "a date and time in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
              "es-es": "una fecha y hora en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:double;3",
            "name": "double",
            "description": {
              "en-us": "a finite numeric value that is expressible in IEEE 754 double-precision floating point format, conformant with xsd:double",
              "es-es": "un valor numérico finito que es expresable en formato de coma flotante de doble precisión IEEE 754, conforme con xsd:double"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:duration;3",
            "name": "duration",
            "description": {
              "en-us": "a duration in ISO 8601 format",
              "es-es": "una duración en formato ISO 8601"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:float;3",
            "name": "float",
            "description": {
              "en-us": "a finite numeric value that is expressible in IEEE 754 single-precision floating point format, conformant with xsd:float",
              "es-es": "un valor numérico finito que es expresable en formato de coma flotante de precisión única IEEE 754, conforme con xsd:float"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:integer;3",
            "name": "integer",
            "description": {
              "en-us": "a signed integral numeric value that is expressible in 4 bytes",
              "es-es": "un valor numérico integral con firma que se puede expresar en 4 bytes"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:long;3",
            "name": "long",
            "description": {
              "en-us": "a signed integral numeric value that is expressible in 8 bytes",
              "es-es": "un valor numérico integral con firma que se puede expresar en 8 bytes"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:string;3",
            "name": "string",
            "description": {
              "en-us": "a UTF8 string",
              "es-es": "una cadena UTF8"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:time;3",
            "name": "time",
            "description": {
              "en-us": "a time in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
              "es-es": "una hora en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:lineString;3",
            "name": "lineString",
            "description": {
              "en-us": "GeoJSON LineString",
              "es-es": "GeoJSON LineString"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:multiLineString;3",
            "name": "multiLineString",
            "description": {
              "en-us": "GeoJSON MultiLineString",
              "es-es": "GeoJSON MultiLineString"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:multiPoint;3",
            "name": "multiPoint",
            "description": {
              "en-us": "GeoJSON MultiPoint",
              "es-es": "GeoJSON MultiPoint"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:multiPolygon;3",
            "name": "multiPolygon",
            "description": {
              "en-us": "GeoJSON MultiPolygon",
              "es-es": "GeoJSON MultiPolygon"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:point;3",
            "name": "point",
            "description": {
              "en-us": "GeoJSON Point",
              "es-es": "GeoJSON Point"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:polygon;3",
            "name": "polygon",
            "description": {
              "en-us": "GeoJSON Polygon",
              "es-es": "GeoJSON Polygon"
            }
          }
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [
          "Unit",
          "UnitAttribute"
        ],
        "3": [
          "LatentType",
          "NamedLatentType",
          "Unit",
          "UnitAttribute"
        ]
      },
      "badTypeCauseFormat": {
        "2": "Top-level element{secondaryId:e} does not have @type of Array, Command, CommandPayload, Component, Enum, EnumValue, Field, Interface, Map, MapKey, MapValue, Object, Property, Relationship, or Telemetry.",
        "3": "Top-level element{secondaryId:e} does not have @type of Array, Command, CommandRequest, CommandResponse, Component, Enum, EnumValue, Field, Interface, Map, MapKey, MapValue, Object, Property, Relationship, or Telemetry."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName2}, element{line2} does not have @type of Array, Command, CommandPayload, Component, Enum, EnumValue, Field, Interface, Map, MapKey, MapValue, Object, Property, Relationship, or Telemetry.",
        "3": "In {sourceName2}, element{line2} does not have @type of Array, Command, CommandRequest, CommandResponse, Component, Enum, EnumValue, Field, Interface, Map, MapKey, MapValue, Object, Property, Relationship, or Telemetry."
      },
      "badTypeActionFormat": {
        "2": "Provide a @type{line3} in the set of allowable types.",
        "3": "Provide a @type{line3} in the set of allowable types."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": false,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": false,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": false,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": false,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "Enum": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "ComplexSchema",
      "typeOptionalVersions": [],
      "idRequiredVersions": [],
      "instance": {
        "criteriaText": "conforms to the specific Enum element defined in the model",
        "2": {
          "element": {
            "instanceProperty": [
              "valueSchema",
              "enumValues"
            ]
          },
          "eachChild": {}
        },
        "3": {
          "element": {
            "instanceProperty": [
              "valueSchema",
              "enumValues"
            ]
          },
          "eachChild": {}
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:ComplexSchema",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:Enum",
        "dtmi:dtdl:class:Schema"
      ],
      "concreteSubclasses": {
        "2": [
          "Enum"
        ],
        "3": [
          "Enum"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "elements": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Enum.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Enum."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of Enum.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of Enum."
      },
      "badTypeActionFormat": {
        "2": "Provide a @type{line3} of Enum, or provide a value for property '{property}'{line1} with @type of Enum.",
        "3": "Provide a @type{line3} of Enum, or provide a value for property '{property}'{line1} with @type of Enum."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "enumValues": {
          "_": {
            "literal": false,
            "class": "EnumValue",
            "abstract": false,
            "plural": true,
            "optional": true,
            "dtmiSegment": "name",
            "inherited": false,
            "shadowed": false,
            "description": {
              "en-us": "A set of name/value mappings for the Enum.",
              "es-es": "Un conjunto de asignaciones de nombre/valor para la Enum."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "class": "EnumValue",
            "versions": [
              2
            ],
            "maxCount": 100,
            "minCount": 1,
            "typeRequired": false,
            "uniqueProperties": [
              "name",
              "enumValue"
            ],
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "EnumValue",
            "versions": [
              3
            ],
            "typeRequired": false,
            "uniqueProperties": [
              "name",
              "enumValue"
            ],
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "valueSchema": {
          "_": {
            "literal": false,
            "class": "PrimitiveSchema",
            "abstract": true,
            "plural": false,
            "optional": false,
            "inherited": false,
            "shadowed": false,
            "description": {
              "en-us": "The data type for the enumValues; all values must be of the same type.",
              "es-es": "El tipo de datos para enumValues; todos los valores deben ser del mismo tipo."
            }
          },
          "2": {
            "idRequired": true,
            "allowed": true,
            "class": "PrimitiveSchema",
            "versions": [
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "valueUris": [
              "dtmi:dtdl:instance:Schema:integer;2",
              "dtmi:dtdl:instance:Schema:string;2"
            ],
            "values": [
              "integer",
              "string"
            ],
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": true,
            "allowed": true,
            "class": "PrimitiveSchema",
            "versions": [
              3,
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "valueUris": [
              "dtmi:dtdl:instance:Schema:integer;3",
              "dtmi:dtdl:instance:Schema:integer;2",
              "dtmi:dtdl:instance:Schema:string;3",
              "dtmi:dtdl:instance:Schema:string;2"
            ],
            "values": [
              "integer",
              "string"
            ],
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "EnumValue": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "NamedEntity",
      "typeOptionalVersions": [
        2,
        3
      ],
      "idRequiredVersions": [],
      "instance": {
        "criteriaText": "conforms to the specific EnumValue element defined in the model",
        "2": {
          "element": {
            "hasValue": "enumValue"
          },
          "eachChild": {}
        },
        "3": {
          "element": {
            "hasValue": "enumValue"
          },
          "eachChild": {}
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:EnumValue",
        "dtmi:dtdl:class:NamedEntity"
      ],
      "concreteSubclasses": {
        "2": [
          "EnumValue"
        ],
        "3": [
          "EnumValue"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "elements": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of EnumValue.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of EnumValue."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of EnumValue.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of EnumValue."
      },
      "badTypeActionFormat": {
        "2": "Provide a @type{line3} of EnumValue, or provide a value for property '{property}'{line1} with @type of EnumValue.",
        "3": "Provide a @type{line3} of EnumValue, or provide a value for property '{property}'{line1} with @type of EnumValue."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "enumValue": {
          "_": {
            "literal": true,
            "abstract": false,
            "plural": false,
            "optional": false,
            "inherited": false,
            "shadowed": false,
            "description": {
              "en-us": "The on-the-wire value that maps to the EnumValue, which may be either an integer or a string.",
              "es-es": "El valor en la conexión que se asigna a EnumValue, que puede ser un entero o una cadena."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": [
              {
                "property": "enumValues",
                "class": "Enum"
              }
            ]
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": [
              {
                "property": "enumValues",
                "class": "Enum"
              }
            ]
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The programming name of the element.",
              "es-es": "Nombre de programación del elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanuméricos y guiones bajos, comenzando con una letra, terminando con alfanuméricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": [
              {
                "property": "enumValues",
                "class": "Enum"
              }
            ]
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanum�ricos y guiones bajos, comenzando con una letra, terminando con alfanum�ricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": [
              {
                "property": "enumValues",
                "class": "Enum"
              }
            ]
          }
        }
      }
    },
    "Field": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "SchemaField",
      "typeOptionalVersions": [
        2,
        3
      ],
      "idRequiredVersions": [],
      "instance": {
        "criteriaText": "conforms to the specific Field element defined in the model",
        "2": {
          "element": {
            "instanceProperty": [
              "schema"
            ],
            "nameHasValue": "name"
          },
          "eachChild": {}
        },
        "3": {
          "element": {
            "instanceProperty": [
              "schema"
            ],
            "nameHasValue": "name"
          },
          "eachChild": {}
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:Field",
        "dtmi:dtdl:class:NamedEntity",
        "dtmi:dtdl:class:SchemaField"
      ],
      "concreteSubclasses": {
        "2": [
          "Field"
        ],
        "3": [
          "Field"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "elements": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Field.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Field."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of Field.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of Field."
      },
      "badTypeActionFormat": {
        "2": "Provide a @type{line3} of Field, or provide a value for property '{property}'{line1} with @type of Field.",
        "3": "Provide a @type{line3} of Field, or provide a value for property '{property}'{line1} with @type of Field."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The programming name of the element.",
              "es-es": "Nombre de programación del elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanuméricos y guiones bajos, comenzando con una letra, terminando con alfanuméricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": [
              {
                "property": "fields",
                "class": "Object"
              }
            ]
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanum�ricos y guiones bajos, comenzando con una letra, terminando con alfanum�ricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": [
              {
                "property": "fields",
                "class": "Object"
              }
            ]
          }
        },
        "schema": {
          "_": {
            "literal": false,
            "class": "Schema",
            "abstract": true,
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The data type of the element, which is an instance of Schema.",
              "es-es": "El tipo de datos del elemento, que es una instancia de Schema."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              3,
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "Float": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "NumericSchema",
      "typeOptionalVersions": [],
      "idRequiredVersions": [],
      "instance": {
        "criteriaText": "is a numeric value that conforms to the XSD definition of 'float'",
        "2": {
          "element": {
            "jsonType": "number",
            "datatype": "float"
          },
          "eachChild": {}
        },
        "3": {
          "element": {
            "jsonType": "number",
            "datatype": "float"
          },
          "eachChild": {}
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:Float",
        "dtmi:dtdl:class:NumericSchema",
        "dtmi:dtdl:class:PrimitiveSchema",
        "dtmi:dtdl:class:Schema"
      ],
      "concreteSubclasses": {
        "2": [
          "Float"
        ],
        "3": [
          "Float"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "Float"
        ],
        "3": [
          "Float"
        ]
      },
      "elements": {
        "2": [
          {
            "id": "dtmi:dtdl:instance:Schema:float;2",
            "name": "float",
            "description": {
              "en-us": "a finite numeric value that is expressible in IEEE 754 single-precision floating point format, conformant with xsd:float",
              "es-es": "un valor numérico finito que es expresable en formato de coma flotante de precisión única IEEE 754, conforme con xsd:float"
            }
          }
        ],
        "3": [
          {
            "id": "dtmi:dtdl:instance:Schema:float;3",
            "name": "float",
            "description": {
              "en-us": "a finite numeric value that is expressible in IEEE 754 single-precision floating point format, conformant with xsd:float",
              "es-es": "un valor numérico finito que es expresable en formato de coma flotante de precisión única IEEE 754, conforme con xsd:float"
            }
          }
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "standardElementIds": {
        "2": [
          "dtmi:dtdl:instance:Schema:float;2"
        ],
        "3": [
          "dtmi:dtdl:instance:Schema:float;3"
        ]
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a standard value for this property.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Use the following value for property '{property}'{line1}: float.",
        "3": "Use the following value for property '{property}'{line1}: float."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "Integer": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "NumericSchema",
      "typeOptionalVersions": [],
      "idRequiredVersions": [],
      "instance": {
        "criteriaText": "is a numeric value that conforms to the XSD definition of 'int'",
        "2": {
          "element": {
            "jsonType": "number",
            "datatype": "int"
          },
          "eachChild": {}
        },
        "3": {
          "element": {
            "jsonType": "number",
            "datatype": "int"
          },
          "eachChild": {}
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:Integer",
        "dtmi:dtdl:class:NumericSchema",
        "dtmi:dtdl:class:PrimitiveSchema",
        "dtmi:dtdl:class:Schema"
      ],
      "concreteSubclasses": {
        "2": [
          "Integer"
        ],
        "3": [
          "Integer"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "Integer"
        ],
        "3": [
          "Integer"
        ]
      },
      "elements": {
        "2": [
          {
            "id": "dtmi:dtdl:instance:Schema:integer;2",
            "name": "integer",
            "description": {
              "en-us": "a signed integral numeric value that is expressible in 4 bytes",
              "es-es": "un valor numérico integral con firma que se puede expresar en 4 bytes"
            }
          }
        ],
        "3": [
          {
            "id": "dtmi:dtdl:instance:Schema:integer;3",
            "name": "integer",
            "description": {
              "en-us": "a signed integral numeric value that is expressible in 4 bytes",
              "es-es": "un valor numérico integral con firma que se puede expresar en 4 bytes"
            }
          }
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "standardElementIds": {
        "2": [
          "dtmi:dtdl:instance:Schema:integer;2"
        ],
        "3": [
          "dtmi:dtdl:instance:Schema:integer;3"
        ]
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a standard value for this property.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Use the following value for property '{property}'{line1}: integer.",
        "3": "Use the following value for property '{property}'{line1}: integer."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "Interface": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": true,
      "rootable": true,
      "maybePartial": false,
      "parentClass": "Entity",
      "typeOptionalVersions": [],
      "idRequiredVersions": [
        2,
        3
      ],
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:Interface"
      ],
      "concreteSubclasses": {
        "2": [
          "Interface"
        ],
        "3": [
          "Interface"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "elements": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Interface.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Interface."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of Interface.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of Interface."
      },
      "badTypeActionFormat": {
        "2": "Provide a @type{line3} of Interface, or provide a value for property '{property}'{line1} with @type of Interface.",
        "3": "Provide a @type{line3} of Interface, or provide a value for property '{property}'{line1} with @type of Interface."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "contents": {
          "_": {
            "literal": false,
            "class": "Content",
            "abstract": true,
            "plural": true,
            "optional": true,
            "dtmiSegment": "name",
            "inherited": false,
            "shadowed": true,
            "description": {
              "en-us": "A set of elements that define the contents of this Interface.",
              "es-es": "Conjunto de elementos que definen el contenido de este objeto Interface."
            },
            "dictionaryKey": "name"
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "class": "Content",
            "versions": [
              2
            ],
            "maxCount": 300,
            "typeRequired": true,
            "uniqueProperties": [
              "name"
            ],
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "Content",
            "versions": [
              3,
              2
            ],
            "typeRequired": true,
            "uniqueProperties": [
              "name"
            ],
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "extends": {
          "_": {
            "literal": false,
            "class": "Interface",
            "abstract": false,
            "plural": true,
            "optional": true,
            "inherited": false,
            "shadowed": false,
            "description": {
              "en-us": "A set of DTMIs that refer to Interfaces from which this Interface inherits contents. Interfaces can inherit from multiple Interfaces.",
              "es-es": "Un conjunto de DTMIs que hacen referencia a Interfaces de las que esta interfaz hereda contents. Las Interfaces pueden heredar de varias Interfaces."
            }
          },
          "2": {
            "idRequired": true,
            "allowed": true,
            "class": "Interface",
            "versions": [
              2
            ],
            "maxCount": 2,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": true,
            "allowed": true,
            "class": "Interface",
            "versions": [
              3,
              2
            ],
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "schemas": {
          "_": {
            "literal": false,
            "class": "ComplexSchema",
            "abstract": true,
            "plural": true,
            "optional": true,
            "inherited": false,
            "shadowed": false,
            "description": {
              "en-us": "A set of complex schema objects that are reusable within this Interface.",
              "es-es": "Un conjunto de objetos de esquema complejos que son reutilizables dentro de esta Interface."
            }
          },
          "2": {
            "idRequired": true,
            "allowed": true,
            "class": "ComplexSchema",
            "versions": [
              2
            ],
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": true,
            "allowed": true,
            "class": "ComplexSchema",
            "versions": [
              3
            ],
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "Long": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "NumericSchema",
      "typeOptionalVersions": [],
      "idRequiredVersions": [],
      "instance": {
        "criteriaText": "is a numeric value that conforms to the XSD definition of 'long'",
        "2": {
          "element": {
            "jsonType": "number",
            "datatype": "long"
          },
          "eachChild": {}
        },
        "3": {
          "element": {
            "jsonType": "number",
            "datatype": "long"
          },
          "eachChild": {}
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:Long",
        "dtmi:dtdl:class:NumericSchema",
        "dtmi:dtdl:class:PrimitiveSchema",
        "dtmi:dtdl:class:Schema"
      ],
      "concreteSubclasses": {
        "2": [
          "Long"
        ],
        "3": [
          "Long"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "Long"
        ],
        "3": [
          "Long"
        ]
      },
      "elements": {
        "2": [
          {
            "id": "dtmi:dtdl:instance:Schema:long;2",
            "name": "long",
            "description": {
              "en-us": "a signed integral numeric value that is expressible in 8 bytes",
              "es-es": "un valor numérico integral con firma que se puede expresar en 8 bytes"
            }
          }
        ],
        "3": [
          {
            "id": "dtmi:dtdl:instance:Schema:long;3",
            "name": "long",
            "description": {
              "en-us": "a signed integral numeric value that is expressible in 8 bytes",
              "es-es": "un valor numérico integral con firma que se puede expresar en 8 bytes"
            }
          }
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "standardElementIds": {
        "2": [
          "dtmi:dtdl:instance:Schema:long;2"
        ],
        "3": [
          "dtmi:dtdl:instance:Schema:long;3"
        ]
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a standard value for this property.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Use the following value for property '{property}'{line1}: long.",
        "3": "Use the following value for property '{property}'{line1}: long."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "Map": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "ComplexSchema",
      "typeOptionalVersions": [],
      "idRequiredVersions": [],
      "instance": {
        "criteriaText": "is a JSON object that conforms to the specific Map element defined in the model",
        "2": {
          "element": {
            "jsonType": "object"
          },
          "eachChild": {
            "instanceProperty": [
              "mapValue"
            ]
          }
        },
        "3": {
          "element": {
            "jsonType": "object"
          },
          "eachChild": {
            "instanceProperty": [
              "mapValue"
            ]
          }
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:ComplexSchema",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:Map",
        "dtmi:dtdl:class:Schema"
      ],
      "concreteSubclasses": {
        "2": [
          "Map"
        ],
        "3": [
          "Map"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "elements": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Map.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Map."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of Map.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of Map."
      },
      "badTypeActionFormat": {
        "2": "Provide a @type{line3} of Map, or provide a value for property '{property}'{line1} with @type of Map.",
        "3": "Provide a @type{line3} of Map, or provide a value for property '{property}'{line1} with @type of Map."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "mapKey": {
          "_": {
            "literal": false,
            "class": "MapKey",
            "abstract": false,
            "plural": false,
            "optional": false,
            "inherited": false,
            "shadowed": false,
            "description": {
              "en-us": "A description of the keys in the Map.",
              "es-es": "Una descripción de las claves en el Map."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "class": "MapKey",
            "versions": [
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": false,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "MapKey",
            "versions": [
              3
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": false,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "mapValue": {
          "_": {
            "literal": false,
            "class": "MapValue",
            "abstract": false,
            "plural": false,
            "optional": false,
            "inherited": false,
            "shadowed": false,
            "description": {
              "en-us": "A description of the values in the Map.",
              "es-es": "Una descripción de los valores en el Map."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "class": "MapValue",
            "versions": [
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": false,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "MapValue",
            "versions": [
              3
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": false,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "MapKey": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "NamedEntity",
      "typeOptionalVersions": [
        2,
        3
      ],
      "idRequiredVersions": [],
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:MapKey",
        "dtmi:dtdl:class:NamedEntity"
      ],
      "concreteSubclasses": {
        "2": [
          "MapKey"
        ],
        "3": [
          "MapKey"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "elements": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of MapKey.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of MapKey."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of MapKey.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of MapKey."
      },
      "badTypeActionFormat": {
        "2": "Provide a @type{line3} of MapKey, or provide a value for property '{property}'{line1} with @type of MapKey.",
        "3": "Provide a @type{line3} of MapKey, or provide a value for property '{property}'{line1} with @type of MapKey."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The programming name of the element.",
              "es-es": "Nombre de programación del elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanuméricos y guiones bajos, comenzando con una letra, terminando con alfanuméricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanum�ricos y guiones bajos, comenzando con una letra, terminando con alfanum�ricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "schema": {
          "_": {
            "literal": false,
            "class": "String",
            "abstract": false,
            "plural": false,
            "optional": false,
            "inherited": false,
            "shadowed": false,
            "description": {
              "en-us": "The data type of the Map's key, which must be string.",
              "es-es": "El tipo de datos de la clave del mapa, que debe ser string."
            }
          },
          "2": {
            "idRequired": true,
            "allowed": true,
            "class": "String",
            "versions": [
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": true,
            "allowed": true,
            "class": "String",
            "versions": [
              3,
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "MapValue": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "SchemaField",
      "typeOptionalVersions": [
        2,
        3
      ],
      "idRequiredVersions": [],
      "instance": {
        "criteriaText": "conforms to the specific MapValue element defined in the model",
        "2": {
          "element": {
            "instanceProperty": [
              "schema"
            ]
          },
          "eachChild": {}
        },
        "3": {
          "element": {
            "instanceProperty": [
              "schema"
            ]
          },
          "eachChild": {}
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:MapValue",
        "dtmi:dtdl:class:NamedEntity",
        "dtmi:dtdl:class:SchemaField"
      ],
      "concreteSubclasses": {
        "2": [
          "MapValue"
        ],
        "3": [
          "MapValue"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "elements": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of MapValue.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of MapValue."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of MapValue.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of MapValue."
      },
      "badTypeActionFormat": {
        "2": "Provide a @type{line3} of MapValue, or provide a value for property '{property}'{line1} with @type of MapValue.",
        "3": "Provide a @type{line3} of MapValue, or provide a value for property '{property}'{line1} with @type of MapValue."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The programming name of the element.",
              "es-es": "Nombre de programación del elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanuméricos y guiones bajos, comenzando con una letra, terminando con alfanuméricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanum�ricos y guiones bajos, comenzando con una letra, terminando con alfanum�ricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "schema": {
          "_": {
            "literal": false,
            "class": "Schema",
            "abstract": true,
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The data type of the element, which is an instance of Schema.",
              "es-es": "El tipo de datos del elemento, que es una instancia de Schema."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              3,
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "NamedEntity": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": true,
      "overt": false,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "Entity",
      "typeOptionalVersions": [],
      "idRequiredVersions": [],
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:NamedEntity"
      ],
      "concreteSubclasses": {
        "2": [
          "Command",
          "CommandPayload",
          "Component",
          "EnumValue",
          "Field",
          "MapKey",
          "MapValue",
          "Property",
          "Relationship",
          "Telemetry"
        ],
        "3": [
          "Command",
          "CommandRequest",
          "CommandResponse",
          "Component",
          "EnumValue",
          "Field",
          "MapKey",
          "MapValue",
          "Property",
          "Relationship",
          "Telemetry"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "elements": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [
          "UnitAttribute"
        ],
        "3": [
          "NamedLatentType",
          "UnitAttribute"
        ]
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Command, CommandPayload, Component, EnumValue, Field, MapKey, MapValue, Property, Relationship, or Telemetry.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Command, CommandRequest, CommandResponse, Component, EnumValue, Field, MapKey, MapValue, Property, Relationship, or Telemetry."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of Command, CommandPayload, Component, EnumValue, Field, MapKey, MapValue, Property, Relationship, or Telemetry.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of Command, CommandRequest, CommandResponse, Component, EnumValue, Field, MapKey, MapValue, Property, Relationship, or Telemetry."
      },
      "badTypeActionFormat": {
        "2": "Provide a @type{line3} in the set of allowable types, or provide a value for property '{property}'{line1} with @type in the set of allowable types.",
        "3": "Provide a @type{line3} in the set of allowable types, or provide a value for property '{property}'{line1} with @type in the set of allowable types."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": false,
            "shadowed": false,
            "description": {
              "en-us": "The programming name of the element.",
              "es-es": "Nombre de programación del elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanuméricos y guiones bajos, comenzando con una letra, terminando con alfanuméricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanum�ricos y guiones bajos, comenzando con una letra, terminando con alfanum�ricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "NumericSchema": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": true,
      "overt": false,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "PrimitiveSchema",
      "typeOptionalVersions": [],
      "idRequiredVersions": [],
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:NumericSchema",
        "dtmi:dtdl:class:PrimitiveSchema",
        "dtmi:dtdl:class:Schema"
      ],
      "concreteSubclasses": {
        "2": [
          "Double",
          "Float",
          "Integer",
          "Long"
        ],
        "3": [
          "Double",
          "Float",
          "Integer",
          "Long"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "Double",
          "Float",
          "Integer",
          "Long"
        ],
        "3": [
          "Double",
          "Float",
          "Integer",
          "Long"
        ]
      },
      "elements": {
        "2": [
          {
            "id": "dtmi:dtdl:instance:Schema:double;2",
            "name": "double",
            "description": {
              "en-us": "a finite numeric value that is expressible in IEEE 754 double-precision floating point format, conformant with xsd:double",
              "es-es": "un valor numérico finito que es expresable en formato de coma flotante de doble precisión IEEE 754, conforme con xsd:double"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:float;2",
            "name": "float",
            "description": {
              "en-us": "a finite numeric value that is expressible in IEEE 754 single-precision floating point format, conformant with xsd:float",
              "es-es": "un valor numérico finito que es expresable en formato de coma flotante de precisión única IEEE 754, conforme con xsd:float"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:integer;2",
            "name": "integer",
            "description": {
              "en-us": "a signed integral numeric value that is expressible in 4 bytes",
              "es-es": "un valor numérico integral con firma que se puede expresar en 4 bytes"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:long;2",
            "name": "long",
            "description": {
              "en-us": "a signed integral numeric value that is expressible in 8 bytes",
              "es-es": "un valor numérico integral con firma que se puede expresar en 8 bytes"
            }
          }
        ],
        "3": [
          {
            "id": "dtmi:dtdl:instance:Schema:double;3",
            "name": "double",
            "description": {
              "en-us": "a finite numeric value that is expressible in IEEE 754 double-precision floating point format, conformant with xsd:double",
              "es-es": "un valor numérico finito que es expresable en formato de coma flotante de doble precisión IEEE 754, conforme con xsd:double"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:float;3",
            "name": "float",
            "description": {
              "en-us": "a finite numeric value that is expressible in IEEE 754 single-precision floating point format, conformant with xsd:float",
              "es-es": "un valor numérico finito que es expresable en formato de coma flotante de precisión única IEEE 754, conforme con xsd:float"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:integer;3",
            "name": "integer",
            "description": {
              "en-us": "a signed integral numeric value that is expressible in 4 bytes",
              "es-es": "un valor numérico integral con firma que se puede expresar en 4 bytes"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:long;3",
            "name": "long",
            "description": {
              "en-us": "a signed integral numeric value that is expressible in 8 bytes",
              "es-es": "un valor numérico integral con firma que se puede expresar en 8 bytes"
            }
          }
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a standard value for this property.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Use one of the following values for property '{property}'{line1}: double, float, integer, long.",
        "3": "Use one of the following values for property '{property}'{line1}: double, float, integer, long."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "Object": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "ComplexSchema",
      "typeOptionalVersions": [],
      "idRequiredVersions": [],
      "instance": {
        "criteriaText": "is a JSON object that conforms to the specific Object element defined in the model",
        "2": {
          "element": {
            "jsonType": "object"
          },
          "eachChild": {
            "instanceProperty": [
              "fields"
            ]
          }
        },
        "3": {
          "element": {
            "jsonType": "object"
          },
          "eachChild": {
            "instanceProperty": [
              "fields"
            ]
          }
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:ComplexSchema",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:Object",
        "dtmi:dtdl:class:Schema"
      ],
      "concreteSubclasses": {
        "2": [
          "Object"
        ],
        "3": [
          "Object"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "elements": {
        "2": [
          {
            "id": "dtmi:standard:schema:geospatial:lineString;2",
            "name": "lineString",
            "description": {
              "en-us": "GeoJSON LineString",
              "es-es": "GeoJSON LineString"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:multiLineString;2",
            "name": "multiLineString",
            "description": {
              "en-us": "GeoJSON MultiLineString",
              "es-es": "GeoJSON MultiLineString"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:multiPoint;2",
            "name": "multiPoint",
            "description": {
              "en-us": "GeoJSON MultiPoint",
              "es-es": "GeoJSON MultiPoint"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:multiPolygon;2",
            "name": "multiPolygon",
            "description": {
              "en-us": "GeoJSON MultiPolygon",
              "es-es": "GeoJSON MultiPolygon"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:point;2",
            "name": "point",
            "description": {
              "es-es": "GeoJSON Point",
              "en-us": "GeoJSON Point"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:polygon;2",
            "name": "polygon",
            "description": {
              "en-us": "GeoJSON Polygon",
              "es-es": "GeoJSON Polygon"
            }
          }
        ],
        "3": [
          {
            "id": "dtmi:standard:schema:geospatial:lineString;3",
            "name": "lineString",
            "description": {
              "en-us": "GeoJSON LineString",
              "es-es": "GeoJSON LineString"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:multiLineString;3",
            "name": "multiLineString",
            "description": {
              "en-us": "GeoJSON MultiLineString",
              "es-es": "GeoJSON MultiLineString"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:multiPoint;3",
            "name": "multiPoint",
            "description": {
              "es-es": "GeoJSON MultiPoint",
              "en-us": "GeoJSON MultiPoint"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:multiPolygon;3",
            "name": "multiPolygon",
            "description": {
              "en-us": "GeoJSON MultiPolygon",
              "es-es": "GeoJSON MultiPolygon"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:point;3",
            "name": "point",
            "description": {
              "en-us": "GeoJSON Point",
              "es-es": "GeoJSON Point"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:polygon;3",
            "name": "polygon",
            "description": {
              "en-us": "GeoJSON Polygon",
              "es-es": "GeoJSON Polygon"
            }
          }
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Object.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Object."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of Object.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of Object."
      },
      "badTypeActionFormat": {
        "2": "Provide a @type{line3} of Object, or provide a value for property '{property}'{line1} with @type of Object.",
        "3": "Provide a @type{line3} of Object, or provide a value for property '{property}'{line1} with @type of Object."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "fields": {
          "_": {
            "literal": false,
            "class": "Field",
            "abstract": false,
            "plural": true,
            "optional": true,
            "dtmiSegment": "name",
            "inherited": false,
            "shadowed": false,
            "description": {
              "en-us": "A set of field descriptions, one for each field in the Object.",
              "es-es": "Un conjunto de descripciones de campo, una para cada campo del Object."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "class": "Field",
            "versions": [
              2
            ],
            "maxCount": 30,
            "minCount": 1,
            "typeRequired": false,
            "uniqueProperties": [
              "name"
            ],
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "Field",
            "versions": [
              3
            ],
            "typeRequired": false,
            "uniqueProperties": [
              "name"
            ],
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "PrimitiveSchema": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": true,
      "overt": false,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "Schema",
      "typeOptionalVersions": [],
      "idRequiredVersions": [
        2,
        3
      ],
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:PrimitiveSchema",
        "dtmi:dtdl:class:Schema"
      ],
      "concreteSubclasses": {
        "2": [
          "Boolean",
          "Date",
          "DateTime",
          "Double",
          "Duration",
          "Float",
          "Integer",
          "Long",
          "String",
          "Time"
        ],
        "3": [
          "Boolean",
          "Date",
          "DateTime",
          "Double",
          "Duration",
          "Float",
          "Integer",
          "Long",
          "String",
          "Time"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "Boolean",
          "Date",
          "DateTime",
          "Double",
          "Duration",
          "Float",
          "Integer",
          "Long",
          "String",
          "Time"
        ],
        "3": [
          "Boolean",
          "Date",
          "DateTime",
          "Double",
          "Duration",
          "Float",
          "Integer",
          "Long",
          "String",
          "Time"
        ]
      },
      "elements": {
        "2": [
          {
            "id": "dtmi:dtdl:instance:Schema:boolean;2",
            "name": "boolean",
            "description": {
              "en-us": "a boolean value",
              "es-es": "un valor booleano"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:date;2",
            "name": "date",
            "description": {
              "en-us": "a date in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
              "es-es": "una fecha en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:dateTime;2",
            "name": "dateTime",
            "description": {
              "en-us": "a date and time in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
              "es-es": "una fecha y hora en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:double;2",
            "name": "double",
            "description": {
              "en-us": "a finite numeric value that is expressible in IEEE 754 double-precision floating point format, conformant with xsd:double",
              "es-es": "un valor numérico finito que es expresable en formato de coma flotante de doble precisión IEEE 754, conforme con xsd:double"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:duration;2",
            "name": "duration",
            "description": {
              "en-us": "a duration in ISO 8601 format",
              "es-es": "una duración en formato ISO 8601"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:float;2",
            "name": "float",
            "description": {
              "en-us": "a finite numeric value that is expressible in IEEE 754 single-precision floating point format, conformant with xsd:float",
              "es-es": "un valor numérico finito que es expresable en formato de coma flotante de precisión única IEEE 754, conforme con xsd:float"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:integer;2",
            "name": "integer",
            "description": {
              "en-us": "a signed integral numeric value that is expressible in 4 bytes",
              "es-es": "un valor numérico integral con firma que se puede expresar en 4 bytes"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:long;2",
            "name": "long",
            "description": {
              "en-us": "a signed integral numeric value that is expressible in 8 bytes",
              "es-es": "un valor numérico integral con firma que se puede expresar en 8 bytes"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:string;2",
            "name": "string",
            "description": {
              "en-us": "a UTF8 string",
              "es-es": "una cadena UTF8"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:time;2",
            "name": "time",
            "description": {
              "en-us": "a time in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
              "es-es": "una hora en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
            }
          }
        ],
        "3": [
          {
            "id": "dtmi:dtdl:instance:Schema:boolean;3",
            "name": "boolean",
            "description": {
              "en-us": "a boolean value",
              "es-es": "un valor booleano"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:date;3",
            "name": "date",
            "description": {
              "en-us": "a date in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
              "es-es": "una fecha en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:dateTime;3",
            "name": "dateTime",
            "description": {
              "en-us": "a date and time in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
              "es-es": "una fecha y hora en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:double;3",
            "name": "double",
            "description": {
              "en-us": "a finite numeric value that is expressible in IEEE 754 double-precision floating point format, conformant with xsd:double",
              "es-es": "un valor numérico finito que es expresable en formato de coma flotante de doble precisión IEEE 754, conforme con xsd:double"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:duration;3",
            "name": "duration",
            "description": {
              "en-us": "a duration in ISO 8601 format",
              "es-es": "una duración en formato ISO 8601"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:float;3",
            "name": "float",
            "description": {
              "en-us": "a finite numeric value that is expressible in IEEE 754 single-precision floating point format, conformant with xsd:float",
              "es-es": "un valor numérico finito que es expresable en formato de coma flotante de precisión única IEEE 754, conforme con xsd:float"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:integer;3",
            "name": "integer",
            "description": {
              "en-us": "a signed integral numeric value that is expressible in 4 bytes",
              "es-es": "un valor numérico integral con firma que se puede expresar en 4 bytes"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:long;3",
            "name": "long",
            "description": {
              "en-us": "a signed integral numeric value that is expressible in 8 bytes",
              "es-es": "un valor numérico integral con firma que se puede expresar en 8 bytes"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:string;3",
            "name": "string",
            "description": {
              "en-us": "a UTF8 string",
              "es-es": "una cadena UTF8"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:time;3",
            "name": "time",
            "description": {
              "en-us": "a time in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
              "es-es": "una hora en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
            }
          }
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a standard value for this property.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Use one of the following values for property '{property}'{line1}: boolean, date, dateTime, double, duration, float, integer, long, string, time.",
        "3": "Use one of the following values for property '{property}'{line1}: boolean, date, dateTime, double, duration, float, integer, long, string, time."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "Property": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "Content",
      "typeOptionalVersions": [],
      "idRequiredVersions": [],
      "typeIds": [
        "dtmi:dtdl:class:Content",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:NamedEntity",
        "dtmi:dtdl:class:Property"
      ],
      "concreteSubclasses": {
        "2": [
          "Property"
        ],
        "3": [
          "Property"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "elements": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Property.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Property."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of Property.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of Property."
      },
      "badTypeActionFormat": {
        "2": "Provide a @type{line3} of Property, or provide a value for property '{property}'{line1} with @type of Property.",
        "3": "Provide a @type{line3} of Property, or provide a value for property '{property}'{line1} with @type of Property."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The programming name of the element.",
              "es-es": "Nombre de programación del elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanuméricos y guiones bajos, comenzando con una letra, terminando con alfanuméricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": [
              {
                "property": "contents",
                "class": "Interface"
              },
              {
                "property": "properties",
                "class": "Relationship"
              }
            ]
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanum�ricos y guiones bajos, comenzando con una letra, terminando con alfanum�ricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": [
              {
                "property": "contents",
                "class": "Interface"
              },
              {
                "property": "properties",
                "class": "Relationship"
              }
            ]
          }
        },
        "schema": {
          "_": {
            "literal": false,
            "class": "Schema",
            "abstract": true,
            "plural": false,
            "optional": false,
            "inherited": false,
            "shadowed": false,
            "description": {
              "en-us": "The data type of the Property, which is an instance of Schema.",
              "es-es": "El tipo de datos de la Property, que es una instancia de Schema."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              3,
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "writable": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "boolean",
            "plural": false,
            "optional": true,
            "inherited": false,
            "shadowed": false,
            "description": {
              "en-us": "A boolean value that indicates whether the Property is writable or not. The default value is false, indicating the Property is read-only.",
              "es-es": "Valor booleano que indica si la Property se puede escribir o no. El valor predeterminado es false, lo que indica que la Property es de sólo lectura."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "Relationship": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "Content",
      "typeOptionalVersions": [],
      "idRequiredVersions": [],
      "typeIds": [
        "dtmi:dtdl:class:Content",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:NamedEntity",
        "dtmi:dtdl:class:Relationship"
      ],
      "concreteSubclasses": {
        "2": [
          "Relationship"
        ],
        "3": [
          "Relationship"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "elements": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Relationship.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Relationship."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of Relationship.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of Relationship."
      },
      "badTypeActionFormat": {
        "2": "Provide a @type{line3} of Relationship, or provide a value for property '{property}'{line1} with @type of Relationship.",
        "3": "Provide a @type{line3} of Relationship, or provide a value for property '{property}'{line1} with @type of Relationship."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "maxMultiplicity": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": true,
            "inherited": false,
            "shadowed": false,
            "description": {
              "en-us": "The maximum multiplicity for the target of the Relationship; defaults to the maximum allowable value.",
              "es-es": "La multiplicidad máxima para el objetivo de la Relationship; el valor predeterminado es el valor máximo permitido."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxInclusive": 500,
            "minInclusive": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxInclusive": 500,
            "minInclusive": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "minMultiplicity": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": true,
            "inherited": false,
            "shadowed": false,
            "description": {
              "en-us": "The minimum multiplicity for the target of the Relationship; defaults to the minimum allowable value.",
              "es-es": "La multiplicidad mínima para el objetivo de la Relationship; el valor predeterminado es el valor mínimo permitido."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxInclusive": 0,
            "minInclusive": 0,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxInclusive": 0,
            "minInclusive": 0,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The programming name of the element.",
              "es-es": "Nombre de programación del elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanuméricos y guiones bajos, comenzando con una letra, terminando con alfanuméricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": [
              {
                "property": "contents",
                "class": "Interface"
              }
            ]
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanum�ricos y guiones bajos, comenzando con una letra, terminando con alfanum�ricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": [
              {
                "property": "contents",
                "class": "Interface"
              }
            ]
          }
        },
        "properties": {
          "_": {
            "literal": false,
            "class": "Property",
            "abstract": false,
            "plural": true,
            "optional": true,
            "dtmiSegment": "name",
            "inherited": false,
            "shadowed": false,
            "description": {
              "en-us": "A set of Properties that define Relationship-specific state.",
              "es-es": "Conjunto de Propertyes que definen el estado específico de la relación."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "class": "Property",
            "versions": [
              2
            ],
            "maxCount": 300,
            "typeRequired": true,
            "uniqueProperties": [
              "name"
            ],
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "Property",
            "versions": [
              3,
              2
            ],
            "typeRequired": true,
            "uniqueProperties": [
              "name"
            ],
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "target": {
          "_": {
            "literal": false,
            "abstract": false,
            "plural": false,
            "optional": true,
            "inherited": false,
            "shadowed": false,
            "description": {
              "en-us": "An Interface identifier. If no target is specified, each instance target is permitted to be any Interface.",
              "es-es": "Un identificador de Interrface. Si no se especifica ningún destino, se permite que cada destino de instancia sea cualquier Interface."
            }
          },
          "2": {
            "idRequired": true,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 2048,
            "pattern": "^dtmi:[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?(?::[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?)*;[1-9][0-9]{0,8}$",
            "patternDesc": {
              "en-us": "must follow user DTMI syntax",
              "es-es": "debe seguir la sintaxis DTMI del usuario"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": true,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 2048,
            "pattern": "^dtmi:[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?(?::[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?)*(?:;[1-9][0-9]{0,8}(?:\\.[1-9][0-9]{0,5})?)?$",
            "patternDesc": {
              "en-us": "must follow user DTMI syntax",
              "es-es": "debe seguir la sintaxis DTMI del usuario"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "writable": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "boolean",
            "plural": false,
            "optional": true,
            "inherited": false,
            "shadowed": false,
            "description": {
              "en-us": "A boolean value that indicates whether the Relationship is writable or not. The default value is false, indicating the Relationship is read-only.",
              "es-es": "Un valor booleano que indica si la Relationship se puede escribir o no. El valor predeterminado es false, lo que indica que la Relationship es de solo lectura."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "Schema": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": true,
      "overt": false,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "Entity",
      "typeOptionalVersions": [],
      "idRequiredVersions": [],
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:Schema"
      ],
      "concreteSubclasses": {
        "2": [
          "Array",
          "Boolean",
          "Date",
          "DateTime",
          "Double",
          "Duration",
          "Enum",
          "Float",
          "Integer",
          "Long",
          "Map",
          "Object",
          "String",
          "Time"
        ],
        "3": [
          "Array",
          "Boolean",
          "Date",
          "DateTime",
          "Double",
          "Duration",
          "Enum",
          "Float",
          "Integer",
          "Long",
          "Map",
          "Object",
          "String",
          "Time"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "Boolean",
          "Date",
          "DateTime",
          "Double",
          "Duration",
          "Float",
          "Integer",
          "Long",
          "String",
          "Time"
        ],
        "3": [
          "Boolean",
          "Date",
          "DateTime",
          "Double",
          "Duration",
          "Float",
          "Integer",
          "Long",
          "String",
          "Time"
        ]
      },
      "elements": {
        "2": [
          {
            "id": "dtmi:dtdl:instance:Schema:boolean;2",
            "name": "boolean",
            "description": {
              "en-us": "a boolean value",
              "es-es": "un valor booleano"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:date;2",
            "name": "date",
            "description": {
              "en-us": "a date in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
              "es-es": "una fecha en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:dateTime;2",
            "name": "dateTime",
            "description": {
              "en-us": "a date and time in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
              "es-es": "una fecha y hora en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:double;2",
            "name": "double",
            "description": {
              "en-us": "a finite numeric value that is expressible in IEEE 754 double-precision floating point format, conformant with xsd:double",
              "es-es": "un valor numérico finito que es expresable en formato de coma flotante de doble precisión IEEE 754, conforme con xsd:double"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:duration;2",
            "name": "duration",
            "description": {
              "en-us": "a duration in ISO 8601 format",
              "es-es": "una duración en formato ISO 8601"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:float;2",
            "name": "float",
            "description": {
              "en-us": "a finite numeric value that is expressible in IEEE 754 single-precision floating point format, conformant with xsd:float",
              "es-es": "un valor numérico finito que es expresable en formato de coma flotante de precisión única IEEE 754, conforme con xsd:float"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:integer;2",
            "name": "integer",
            "description": {
              "en-us": "a signed integral numeric value that is expressible in 4 bytes",
              "es-es": "un valor numérico integral con firma que se puede expresar en 4 bytes"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:long;2",
            "name": "long",
            "description": {
              "en-us": "a signed integral numeric value that is expressible in 8 bytes",
              "es-es": "un valor numérico integral con firma que se puede expresar en 8 bytes"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:string;2",
            "name": "string",
            "description": {
              "en-us": "a UTF8 string",
              "es-es": "una cadena UTF8"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:time;2",
            "name": "time",
            "description": {
              "en-us": "a time in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
              "es-es": "una hora en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:lineString;2",
            "name": "lineString",
            "description": {
              "en-us": "GeoJSON LineString",
              "es-es": "GeoJSON LineString"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:multiLineString;2",
            "name": "multiLineString",
            "description": {
              "en-us": "GeoJSON MultiLineString",
              "es-es": "GeoJSON MultiLineString"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:multiPoint;2",
            "name": "multiPoint",
            "description": {
              "en-us": "GeoJSON MultiPoint",
              "es-es": "GeoJSON MultiPoint"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:multiPolygon;2",
            "name": "multiPolygon",
            "description": {
              "en-us": "GeoJSON MultiPolygon",
              "es-es": "GeoJSON MultiPolygon"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:point;2",
            "name": "point",
            "description": {
              "en-us": "GeoJSON Point",
              "es-es": "GeoJSON Point"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:polygon;2",
            "name": "polygon",
            "description": {
              "en-us": "GeoJSON Polygon",
              "es-es": "GeoJSON Polygon"
            }
          }
        ],
        "3": [
          {
            "id": "dtmi:dtdl:instance:Schema:boolean;3",
            "name": "boolean",
            "description": {
              "en-us": "a boolean value",
              "es-es": "un valor booleano"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:date;3",
            "name": "date",
            "description": {
              "en-us": "a date in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
              "es-es": "una fecha en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:dateTime;3",
            "name": "dateTime",
            "description": {
              "en-us": "a date and time in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
              "es-es": "una fecha y hora en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:double;3",
            "name": "double",
            "description": {
              "en-us": "a finite numeric value that is expressible in IEEE 754 double-precision floating point format, conformant with xsd:double",
              "es-es": "un valor numérico finito que es expresable en formato de coma flotante de doble precisión IEEE 754, conforme con xsd:double"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:duration;3",
            "name": "duration",
            "description": {
              "en-us": "a duration in ISO 8601 format",
              "es-es": "una duración en formato ISO 8601"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:float;3",
            "name": "float",
            "description": {
              "en-us": "a finite numeric value that is expressible in IEEE 754 single-precision floating point format, conformant with xsd:float",
              "es-es": "un valor numérico finito que es expresable en formato de coma flotante de precisión única IEEE 754, conforme con xsd:float"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:integer;3",
            "name": "integer",
            "description": {
              "en-us": "a signed integral numeric value that is expressible in 4 bytes",
              "es-es": "un valor numérico integral con firma que se puede expresar en 4 bytes"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:long;3",
            "name": "long",
            "description": {
              "en-us": "a signed integral numeric value that is expressible in 8 bytes",
              "es-es": "un valor numérico integral con firma que se puede expresar en 8 bytes"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:string;3",
            "name": "string",
            "description": {
              "en-us": "a UTF8 string",
              "es-es": "una cadena UTF8"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:time;3",
            "name": "time",
            "description": {
              "en-us": "a time in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
              "es-es": "una hora en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:lineString;3",
            "name": "lineString",
            "description": {
              "en-us": "GeoJSON LineString",
              "es-es": "GeoJSON LineString"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:multiLineString;3",
            "name": "multiLineString",
            "description": {
              "en-us": "GeoJSON MultiLineString",
              "es-es": "GeoJSON MultiLineString"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:multiPoint;3",
            "name": "multiPoint",
            "description": {
              "en-us": "GeoJSON MultiPoint",
              "es-es": "GeoJSON MultiPoint"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:multiPolygon;3",
            "name": "multiPolygon",
            "description": {
              "en-us": "GeoJSON MultiPolygon",
              "es-es": "GeoJSON MultiPolygon"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:point;3",
            "name": "point",
            "description": {
              "en-us": "GeoJSON Point",
              "es-es": "GeoJSON Point"
            }
          },
          {
            "id": "dtmi:standard:schema:geospatial:polygon;3",
            "name": "polygon",
            "description": {
              "en-us": "GeoJSON Polygon",
              "es-es": "GeoJSON Polygon"
            }
          }
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Array, Enum, Map, or Object, and it is not a standard value for this property.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Array, Enum, Map, or Object, and it is not a standard value for this property."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of Array, Enum, Map, or Object, and it is not a standard value for this property.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of Array, Enum, Map, or Object, and it is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Provide a @type{line3} in the set of allowable types, or provide a value for property '{property}'{line1} with @type in the set of allowable types, or use one of the following values for property '{property}'{line1}: boolean, date, dateTime, double, duration, float, integer, long, string, time.",
        "3": "Provide a @type{line3} in the set of allowable types, or provide a value for property '{property}'{line1} with @type in the set of allowable types, or use one of the following values for property '{property}'{line1}: boolean, date, dateTime, double, duration, float, integer, long, string, time."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "SchemaField": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": true,
      "overt": false,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "NamedEntity",
      "typeOptionalVersions": [],
      "idRequiredVersions": [],
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:NamedEntity",
        "dtmi:dtdl:class:SchemaField"
      ],
      "concreteSubclasses": {
        "2": [
          "CommandPayload",
          "Field",
          "MapValue"
        ],
        "3": [
          "CommandRequest",
          "CommandResponse",
          "Field",
          "MapValue"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "elements": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of CommandPayload, Field, or MapValue.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of CommandRequest, CommandResponse, Field, or MapValue."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of CommandPayload, Field, or MapValue.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of CommandRequest, CommandResponse, Field, or MapValue."
      },
      "badTypeActionFormat": {
        "2": "Provide a @type{line3} in the set of allowable types, or provide a value for property '{property}'{line1} with @type in the set of allowable types.",
        "3": "Provide a @type{line3} in the set of allowable types, or provide a value for property '{property}'{line1} with @type in the set of allowable types."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The programming name of the element.",
              "es-es": "Nombre de programación del elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanuméricos y guiones bajos, comenzando con una letra, terminando con alfanuméricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanum�ricos y guiones bajos, comenzando con una letra, terminando con alfanum�ricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "schema": {
          "_": {
            "literal": false,
            "class": "Schema",
            "abstract": true,
            "plural": false,
            "optional": false,
            "inherited": false,
            "shadowed": false,
            "description": {
              "en-us": "The data type of the element, which is an instance of Schema.",
              "es-es": "El tipo de datos del elemento, que es una instancia de Schema."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              3,
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "String": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "PrimitiveSchema",
      "typeOptionalVersions": [],
      "idRequiredVersions": [
        2,
        3
      ],
      "instance": {
        "criteriaText": "is a string value",
        "2": {
          "element": {
            "jsonType": "string"
          },
          "eachChild": {}
        },
        "3": {
          "element": {
            "jsonType": "string"
          },
          "eachChild": {}
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:PrimitiveSchema",
        "dtmi:dtdl:class:Schema",
        "dtmi:dtdl:class:String"
      ],
      "concreteSubclasses": {
        "2": [
          "String"
        ],
        "3": [
          "String"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "String"
        ],
        "3": [
          "String"
        ]
      },
      "elements": {
        "2": [
          {
            "id": "dtmi:dtdl:instance:Schema:string;2",
            "name": "string",
            "description": {
              "en-us": "a UTF8 string",
              "es-es": "una cadena UTF8"
            }
          }
        ],
        "3": [
          {
            "id": "dtmi:dtdl:instance:Schema:string;3",
            "name": "string",
            "description": {
              "en-us": "a UTF8 string",
              "es-es": "una cadena UTF8"
            }
          }
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "standardElementIds": {
        "2": [
          "dtmi:dtdl:instance:Schema:string;2"
        ],
        "3": [
          "dtmi:dtdl:instance:Schema:string;3"
        ]
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a standard value for this property.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Use the following value for property '{property}'{line1}: string.",
        "3": "Use the following value for property '{property}'{line1}: string."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "Telemetry": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "Content",
      "typeOptionalVersions": [],
      "idRequiredVersions": [],
      "typeIds": [
        "dtmi:dtdl:class:Content",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:NamedEntity",
        "dtmi:dtdl:class:Telemetry"
      ],
      "concreteSubclasses": {
        "2": [
          "Telemetry"
        ],
        "3": [
          "Telemetry"
        ]
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "elements": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Telemetry.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of Telemetry."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of Telemetry.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of Telemetry."
      },
      "badTypeActionFormat": {
        "2": "Provide a @type{line3} of Telemetry, or provide a value for property '{property}'{line1} with @type of Telemetry.",
        "3": "Provide a @type{line3} of Telemetry, or provide a value for property '{property}'{line1} with @type of Telemetry."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The programming name of the element.",
              "es-es": "Nombre de programación del elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanuméricos y guiones bajos, comenzando con una letra, terminando con alfanuméricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": [
              {
                "property": "contents",
                "class": "Interface"
              }
            ]
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanum�ricos y guiones bajos, comenzando con una letra, terminando con alfanum�ricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": [
              {
                "property": "contents",
                "class": "Interface"
              }
            ]
          }
        },
        "schema": {
          "_": {
            "literal": false,
            "class": "Schema",
            "abstract": true,
            "plural": false,
            "optional": false,
            "inherited": false,
            "shadowed": false,
            "description": {
              "en-us": "The data type of the Telemetry, which is an instance of Schema.",
              "es-es": "El tipo de datos de la Telemetry, que es una instancia de Schema."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              3,
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "TemporalSchema": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": true,
      "overt": false,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "PrimitiveSchema",
      "typeOptionalVersions": [],
      "idRequiredVersions": [],
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:PrimitiveSchema",
        "dtmi:dtdl:class:Schema",
        "dtmi:dtdl:class:TemporalSchema"
      ],
      "concreteSubclasses": {
        "2": [
          "Date",
          "DateTime",
          "Duration",
          "Time"
        ],
        "3": [
          "Date",
          "DateTime",
          "Duration",
          "Time"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "Date",
          "DateTime",
          "Duration",
          "Time"
        ],
        "3": [
          "Date",
          "DateTime",
          "Duration",
          "Time"
        ]
      },
      "elements": {
        "2": [
          {
            "id": "dtmi:dtdl:instance:Schema:date;2",
            "name": "date",
            "description": {
              "en-us": "a date in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
              "es-es": "una fecha en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:dateTime;2",
            "name": "dateTime",
            "description": {
              "en-us": "a date and time in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
              "es-es": "una fecha y hora en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:duration;2",
            "name": "duration",
            "description": {
              "en-us": "a duration in ISO 8601 format",
              "es-es": "una duración en formato ISO 8601"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:time;2",
            "name": "time",
            "description": {
              "en-us": "a time in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
              "es-es": "una hora en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
            }
          }
        ],
        "3": [
          {
            "id": "dtmi:dtdl:instance:Schema:date;3",
            "name": "date",
            "description": {
              "en-us": "a date in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
              "es-es": "una fecha en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:dateTime;3",
            "name": "dateTime",
            "description": {
              "en-us": "a date and time in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
              "es-es": "una fecha y hora en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:duration;3",
            "name": "duration",
            "description": {
              "en-us": "a duration in ISO 8601 format",
              "es-es": "una duración en formato ISO 8601"
            }
          },
          {
            "id": "dtmi:dtdl:instance:Schema:time;3",
            "name": "time",
            "description": {
              "en-us": "a time in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
              "es-es": "una hora en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
            }
          }
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a standard value for this property.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Use one of the following values for property '{property}'{line1}: date, dateTime, duration, time.",
        "3": "Use one of the following values for property '{property}'{line1}: date, dateTime, duration, time."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "Time": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "TemporalSchema",
      "typeOptionalVersions": [],
      "idRequiredVersions": [],
      "instance": {
        "criteriaText": "is a string value that conforms to the RFC 3339 definition of 'time'",
        "2": {
          "element": {
            "jsonType": "string",
            "datatype": "time",
            "pattern": "^[0-9]{2}:[0-9]{2}:[0-9]{2}(?:\\.[0-9]+)?(?:Z|(?:\\+|\\-)[0-9]{2}:[0-9]{2})$"
          },
          "eachChild": {}
        },
        "3": {
          "element": {
            "jsonType": "string",
            "datatype": "time",
            "pattern": "^[0-9]{2}:[0-9]{2}:[0-9]{2}(?:\\.[0-9]+)?(?:Z|(?:\\+|\\-)[0-9]{2}:[0-9]{2})$"
          },
          "eachChild": {}
        }
      },
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:PrimitiveSchema",
        "dtmi:dtdl:class:Schema",
        "dtmi:dtdl:class:TemporalSchema",
        "dtmi:dtdl:class:Time"
      ],
      "concreteSubclasses": {
        "2": [
          "Time"
        ],
        "3": [
          "Time"
        ]
      },
      "elementalSubclasses": {
        "2": [
          "Time"
        ],
        "3": [
          "Time"
        ]
      },
      "elements": {
        "2": [
          {
            "id": "dtmi:dtdl:instance:Schema:time;2",
            "name": "time",
            "description": {
              "en-us": "a time in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
              "es-es": "una hora en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
            }
          }
        ],
        "3": [
          {
            "id": "dtmi:dtdl:instance:Schema:time;3",
            "name": "time",
            "description": {
              "en-us": "a time in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
              "es-es": "una hora en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
            }
          }
        ]
      },
      "extensibleMaterialSubclasses": {
        "2": [],
        "3": []
      },
      "standardElementIds": {
        "2": [
          "dtmi:dtdl:instance:Schema:time;2"
        ],
        "3": [
          "dtmi:dtdl:instance:Schema:time;3"
        ]
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a standard value for this property."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a standard value for this property.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a standard value for this property."
      },
      "badTypeActionFormat": {
        "2": "Use the following value for property '{property}'{line1}: time.",
        "3": "Use the following value for property '{property}'{line1}: time."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "Unit": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": false,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "Entity",
      "typeOptionalVersions": [],
      "idRequiredVersions": [],
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:Unit"
      ],
      "concreteSubclasses": {
        "2": [],
        "3": []
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "elements": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [
          "Unit"
        ],
        "3": [
          "Unit"
        ]
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a subtype of Unit.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a subtype of Unit."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a subtype of Unit.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a subtype of Unit."
      },
      "badTypeActionFormat": {
        "2": "Provide a @type{line3} of a subtype of Unit, or provide a value for property '{property}'{line1} with @type of a subtype of Unit.",
        "3": "Provide a @type{line3} of a subtype of Unit, or provide a value for property '{property}'{line1} with @type of a subtype of Unit."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "symbol": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": false,
            "shadowed": false,
            "description": {
              "en-us": "The symbol for the unit.",
              "es-es": "Símbolo de la unidad."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "UnitAttribute": {
      "dtdlVersions": [
        2,
        3
      ],
      "abstract": false,
      "overt": false,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "NamedEntity",
      "typeOptionalVersions": [],
      "idRequiredVersions": [],
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:NamedEntity",
        "dtmi:dtdl:class:UnitAttribute"
      ],
      "concreteSubclasses": {
        "2": [],
        "3": []
      },
      "elementalSubclasses": {
        "2": [],
        "3": []
      },
      "elements": {
        "2": [],
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "2": [
          "UnitAttribute"
        ],
        "3": [
          "UnitAttribute"
        ]
      },
      "badTypeCauseFormat": {
        "2": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a subtype of UnitAttribute.",
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a subtype of UnitAttribute."
      },
      "badTypeLocatedCauseFormat": {
        "2": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a subtype of UnitAttribute.",
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a subtype of UnitAttribute."
      },
      "badTypeActionFormat": {
        "2": "Provide a @type{line3} of a subtype of UnitAttribute, or provide a value for property '{property}'{line1} with @type of a subtype of UnitAttribute.",
        "3": "Provide a @type{line3} of a subtype of UnitAttribute, or provide a value for property '{property}'{line1} with @type of a subtype of UnitAttribute."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripción localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentación."
            }
          },
          "2": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versión de DTDL utilizada para crear este elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 2,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The programming name of the element.",
              "es-es": "Nombre de programación del elemento."
            }
          },
          "2": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanuméricos y guiones bajos, comenzando con una letra, terminando con alfanuméricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanum�ricos y guiones bajos, comenzando con una letra, terminando con alfanum�ricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "CommandRequest": {
      "dtdlVersions": [
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "CommandPayload",
      "typeOptionalVersions": [
        3
      ],
      "idRequiredVersions": [],
      "typeIds": [
        "dtmi:dtdl:class:CommandPayload",
        "dtmi:dtdl:class:CommandRequest",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:NamedEntity",
        "dtmi:dtdl:class:SchemaField"
      ],
      "concreteSubclasses": {
        "3": [
          "CommandRequest"
        ]
      },
      "elementalSubclasses": {
        "3": []
      },
      "elements": {
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "3": []
      },
      "badTypeCauseFormat": {
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of CommandRequest."
      },
      "badTypeLocatedCauseFormat": {
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of CommandRequest."
      },
      "badTypeActionFormat": {
        "3": "Provide a @type{line3} of CommandRequest, or provide a value for property '{property}'{line1} with @type of CommandRequest."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripci�n localizable para la presentaci�n."
            }
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentaci�n."
            }
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versi�n de DTDL utilizada para crear este elemento."
            }
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The programming name of the element.",
              "es-es": "Nombre de programaci�n del elemento."
            }
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanum�ricos y guiones bajos, comenzando con una letra, terminando con alfanum�ricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "schema": {
          "_": {
            "literal": false,
            "class": "Schema",
            "abstract": false,
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The data type of the element, which is an instance of Schema.",
              "es-es": "El tipo de datos del elemento, que es una instancia de Schema."
            }
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              3,
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "CommandResponse": {
      "dtdlVersions": [
        3
      ],
      "abstract": false,
      "overt": true,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "CommandPayload",
      "typeOptionalVersions": [
        3
      ],
      "idRequiredVersions": [],
      "typeIds": [
        "dtmi:dtdl:class:CommandPayload",
        "dtmi:dtdl:class:CommandResponse",
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:NamedEntity",
        "dtmi:dtdl:class:SchemaField"
      ],
      "concreteSubclasses": {
        "3": [
          "CommandResponse"
        ]
      },
      "elementalSubclasses": {
        "3": []
      },
      "elements": {
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "3": []
      },
      "badTypeCauseFormat": {
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that does not have @type of CommandResponse."
      },
      "badTypeLocatedCauseFormat": {
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that does not have @type of CommandResponse."
      },
      "badTypeActionFormat": {
        "3": "Provide a @type{line3} of CommandResponse, or provide a value for property '{property}'{line1} with @type of CommandResponse."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripci�n localizable para la presentaci�n."
            }
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentaci�n."
            }
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versi�n de DTDL utilizada para crear este elemento."
            }
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The programming name of the element.",
              "es-es": "Nombre de programaci�n del elemento."
            }
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanum�ricos y guiones bajos, comenzando con una letra, terminando con alfanum�ricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "schema": {
          "_": {
            "literal": false,
            "class": "Schema",
            "abstract": false,
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The data type of the element, which is an instance of Schema.",
              "es-es": "El tipo de datos del elemento, que es una instancia de Schema."
            }
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "class": "Schema",
            "versions": [
              3,
              2
            ],
            "maxCount": 1,
            "minCount": 1,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "LatentType": {
      "dtdlVersions": [
        3
      ],
      "abstract": false,
      "overt": false,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "Entity",
      "typeOptionalVersions": [],
      "idRequiredVersions": [],
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:LatentType"
      ],
      "concreteSubclasses": {
        "3": []
      },
      "elementalSubclasses": {
        "3": []
      },
      "elements": {
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "3": [
          "LatentType"
        ]
      },
      "badTypeCauseFormat": {
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a subtype of LatentType."
      },
      "badTypeLocatedCauseFormat": {
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a subtype of LatentType."
      },
      "badTypeActionFormat": {
        "3": "Provide a @type{line3} of a subtype of LatentType, or provide a value for property '{property}'{line1} with @type of a subtype of LatentType."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripci�n localizable para la presentaci�n."
            }
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentaci�n."
            }
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versi�n de DTDL utilizada para crear este elemento."
            }
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    },
    "NamedLatentType": {
      "dtdlVersions": [
        3
      ],
      "abstract": false,
      "overt": false,
      "partition": false,
      "rootable": false,
      "maybePartial": false,
      "parentClass": "NamedEntity",
      "typeOptionalVersions": [],
      "idRequiredVersions": [],
      "typeIds": [
        "dtmi:dtdl:class:Entity",
        "dtmi:dtdl:class:NamedEntity",
        "dtmi:dtdl:class:NamedLatentType"
      ],
      "concreteSubclasses": {
        "3": []
      },
      "elementalSubclasses": {
        "3": []
      },
      "elements": {
        "3": []
      },
      "extensibleMaterialSubclasses": {
        "3": [
          "NamedLatentType"
        ]
      },
      "badTypeCauseFormat": {
        "3": "{layer}{primaryId:p} property '{property}' has value{secondaryId:e} that is not a subtype of NamedLatentType."
      },
      "badTypeLocatedCauseFormat": {
        "3": "In {sourceName1}, property '{property}'{line1} has value{secondaryId:e}{line2} that is not a subtype of NamedLatentType."
      },
      "badTypeActionFormat": {
        "3": "Provide a @type{line3} of a subtype of NamedLatentType, or provide a value for property '{property}'{line1} with @type of a subtype of NamedLatentType."
      },
      "properties": {
        "comment": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A comment for model authors.",
              "es-es": "Un comentario para los autores del modelo."
            }
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "description": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable description for display.",
              "es-es": "Una descripci�n localizable para la presentaci�n."
            }
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 512,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "displayName": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "langString",
            "plural": true,
            "optional": true,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "A localizable name for display.",
              "es-es": "Un nombre localizable para la presentaci�n."
            }
          },
          "3": {
            "idRequired": false,
            "defaultLanguage": "en-US",
            "allowed": true,
            "maxLength": 64,
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "languageVersion": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "integer",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The version of DTDL used to author this element.",
              "es-es": "La versi�n de DTDL utilizada para crear este elemento."
            }
          },
          "3": {
            "idRequired": false,
            "allowed": false,
            "typeRequired": true,
            "value": 3,
            "hidden": false,
            "uniqueAmong": []
          }
        },
        "name": {
          "_": {
            "literal": true,
            "abstract": false,
            "datatype": "string",
            "plural": false,
            "optional": false,
            "inherited": true,
            "shadowed": false,
            "description": {
              "en-us": "The programming name of the element.",
              "es-es": "Nombre de programaci�n del elemento."
            }
          },
          "3": {
            "idRequired": false,
            "allowed": true,
            "maxCount": 1,
            "minCount": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z](?:[A-Za-z0-9_]*[A-Za-z0-9])?$",
            "patternDesc": {
              "en-us": "contains only alphanumerics and underscore, starting with a letter, ending with alphanumeric",
              "es-es": "contiene solo alfanum�ricos y guiones bajos, comenzando con una letra, terminando con alfanum�ricos"
            },
            "typeRequired": true,
            "hidden": false,
            "uniqueAmong": []
          }
        }
      }
    }
  },
  "descendantControls": [
    {
      "dtdlVersion": 2,
      "rootClass": "Array",
      "definingClass": "ComplexSchema",
      "properties": [
        "elementSchema",
        "schema"
      ],
      "narrow": false,
      "entailments": {
        "elementSchema": [
          "Schema"
        ]
      },
      "maxDepth": 5
    },
    {
      "dtdlVersion": 2,
      "rootClass": "ComplexSchema",
      "definingClass": "ComplexSchema",
      "properties": [
        "elementSchema",
        "schema"
      ],
      "narrow": false,
      "entailments": {},
      "maxDepth": 5
    },
    {
      "dtdlVersion": 2,
      "rootClass": "Component",
      "definingClass": "Component",
      "properties": [
        "schema",
        "contents"
      ],
      "narrow": true,
      "entailments": {},
      "excludeType": "Component"
    },
    {
      "dtdlVersion": 2,
      "rootClass": "Enum",
      "definingClass": "ComplexSchema",
      "properties": [
        "elementSchema",
        "schema"
      ],
      "narrow": false,
      "entailments": {
        "enumValues": [
          "EnumValue"
        ],
        "valueSchema": [
          "PrimitiveSchema"
        ]
      },
      "maxDepth": 5
    },
    {
      "dtdlVersion": 2,
      "rootClass": "Enum",
      "definingClass": "Enum",
      "properties": [
        "enumValue"
      ],
      "narrow": false,
      "entailments": {
        "enumValues": [
          "EnumValue"
        ],
        "valueSchema": [
          "PrimitiveSchema"
        ]
      },
      "datatypeProperty": "valueSchema"
    },
    {
      "dtdlVersion": 2,
      "rootClass": "Interface",
      "definingClass": "Interface",
      "properties": [
        "extends"
      ],
      "narrow": true,
      "entailments": {},
      "importProperties": [
        "contents"
      ],
      "maxDepth": 10
    },
    {
      "dtdlVersion": 2,
      "rootClass": "Map",
      "definingClass": "ComplexSchema",
      "properties": [
        "elementSchema",
        "schema"
      ],
      "narrow": false,
      "entailments": {
        "mapKey": [
          "MapKey"
        ],
        "mapValue": [
          "MapValue"
        ]
      },
      "maxDepth": 5
    },
    {
      "dtdlVersion": 2,
      "rootClass": "Object",
      "definingClass": "ComplexSchema",
      "properties": [
        "elementSchema",
        "schema"
      ],
      "narrow": false,
      "entailments": {
        "fields": [
          "Field"
        ]
      },
      "maxDepth": 5
    },
    {
      "dtdlVersion": 2,
      "rootClass": "Property",
      "definingClass": "Property",
      "properties": [
        "schema"
      ],
      "narrow": false,
      "entailments": {
        "schema": [
          "Schema"
        ]
      },
      "excludeType": "Array"
    },
    {
      "dtdlVersion": 3,
      "rootClass": "Array",
      "definingClass": "ComplexSchema",
      "properties": [
        "elementSchema",
        "schema"
      ],
      "narrow": false,
      "entailments": {
        "elementSchema": [
          "Schema"
        ]
      },
      "maxDepth": 5
    },
    {
      "dtdlVersion": 3,
      "rootClass": "ComplexSchema",
      "definingClass": "ComplexSchema",
      "properties": [
        "elementSchema",
        "schema"
      ],
      "narrow": false,
      "entailments": {},
      "maxDepth": 5
    },
    {
      "dtdlVersion": 3,
      "rootClass": "Component",
      "definingClass": "Component",
      "properties": [
        "schema",
        "contents"
      ],
      "narrow": true,
      "entailments": {},
      "excludeType": "Component"
    },
    {
      "dtdlVersion": 3,
      "rootClass": "Enum",
      "definingClass": "ComplexSchema",
      "properties": [
        "elementSchema",
        "schema"
      ],
      "narrow": false,
      "entailments": {
        "enumValues": [
          "EnumValue"
        ],
        "valueSchema": [
          "PrimitiveSchema"
        ]
      },
      "maxDepth": 5
    },
    {
      "dtdlVersion": 3,
      "rootClass": "Enum",
      "definingClass": "Enum",
      "properties": [
        "enumValue"
      ],
      "narrow": false,
      "entailments": {
        "enumValues": [
          "EnumValue"
        ],
        "valueSchema": [
          "PrimitiveSchema"
        ]
      },
      "datatypeProperty": "valueSchema"
    },
    {
      "dtdlVersion": 3,
      "rootClass": "Interface",
      "definingClass": "Interface",
      "properties": [
        "extends"
      ],
      "narrow": true,
      "entailments": {},
      "importProperties": [
        "contents"
      ],
      "maxDepth": 10,
      "maxCount": 1024
    },
    {
      "dtdlVersion": 3,
      "rootClass": "Interface",
      "definingClass": "Interface",
      "properties": [
        "contents",
        "fields",
        "enumValues",
        "request",
        "response",
        "properties",
        "schema",
        "elementSchema",
        "mapValue"
      ],
      "narrow": true,
      "entailments": {},
      "maxCount": 100000
    },
    {
      "dtdlVersion": 3,
      "rootClass": "Map",
      "definingClass": "ComplexSchema",
      "properties": [
        "elementSchema",
        "schema"
      ],
      "narrow": false,
      "entailments": {
        "mapKey": [
          "MapKey"
        ],
        "mapValue": [
          "MapValue"
        ]
      },
      "maxDepth": 5
    },
    {
      "dtdlVersion": 3,
      "rootClass": "Object",
      "definingClass": "ComplexSchema",
      "properties": [
        "elementSchema",
        "schema"
      ],
      "narrow": false,
      "entailments": {
        "fields": [
          "Field"
        ]
      },
      "maxDepth": 5
    }
  ],
  "supplementalTypes": {
    "dtmi:dtdl:class:AdjunctType;3": {
      "abstract": true,
      "mergeable": false,
      "parent": null,
      "extensionKind": "None",
      "extensionContext": "dtmi:dtdl:context;3",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Array",
        "Boolean",
        "Command",
        "CommandPayload",
        "CommandRequest",
        "CommandResponse",
        "CommandType",
        "Component",
        "Date",
        "DateTime",
        "Double",
        "Duration",
        "Enum",
        "EnumValue",
        "Field",
        "Float",
        "Integer",
        "Interface",
        "LatentType",
        "Long",
        "Map",
        "MapKey",
        "MapValue",
        "NamedLatentType",
        "Object",
        "Property",
        "Relationship",
        "String",
        "Telemetry",
        "Time",
        "Unit",
        "UnitAttribute"
      ],
      "cotypeVersions": [
        2,
        3
      ]
    },
    "dtmi:dtdl:class:Alias;3": {
      "abstract": false,
      "mergeable": false,
      "parent": null,
      "extensionKind": "None",
      "extensionContext": "dtmi:dtdl:context;3",
      "properties": {
        "dtmi:dtdl:property:aliasFor;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {},
          "type": "dtmi:dtdl:class:Entity;3",
          "typeName": "Entity",
          "propertyName": "aliasFor"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Array",
        "Boolean",
        "Command",
        "CommandRequest",
        "CommandResponse",
        "CommandType",
        "Component",
        "Date",
        "DateTime",
        "Double",
        "Duration",
        "Enum",
        "EnumValue",
        "Field",
        "Float",
        "Integer",
        "Interface",
        "LatentType",
        "Long",
        "Map",
        "MapKey",
        "MapValue",
        "NamedLatentType",
        "Object",
        "Property",
        "Relationship",
        "String",
        "Telemetry",
        "Time",
        "Unit",
        "UnitAttribute"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:class:SemanticType;2": {
      "abstract": true,
      "mergeable": false,
      "parent": null,
      "extensionKind": "None",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Relationship",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:dtdl:class:SemanticType;3": {
      "abstract": true,
      "mergeable": false,
      "parent": null,
      "extensionKind": "None",
      "extensionContext": "dtmi:dtdl:context;3",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Relationship",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:class:SemanticUnit;2": {
      "abstract": true,
      "mergeable": false,
      "parent": null,
      "extensionKind": "None",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Unit"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:dtdl:class:SemanticUnit;3": {
      "abstract": true,
      "mergeable": false,
      "parent": null,
      "extensionKind": "None",
      "extensionContext": "dtmi:dtdl:context;3",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Unit"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:standard:class:Acceleration;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:AccelerationUnit;2",
          "typeName": "AccelerationUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:AccelerationUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:Angle;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:AngleUnit;2",
          "typeName": "AngleUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:AngleUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:AngularAcceleration;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:AngularAccelerationUnit;2",
          "typeName": "AngularAccelerationUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:AngularAccelerationUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:AngularVelocity;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:AngularVelocityUnit;2",
          "typeName": "AngularVelocityUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:AngularVelocityUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:Area;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:AreaUnit;2",
          "typeName": "AreaUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:AreaUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:BinaryPrefix;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:UnitAttribute;2",
      "extensionKind": "UnitAttribute",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:exponent;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {},
          "type": "http://www.w3.org/2001/XMLSchema#integer",
          "typeName": "integer",
          "propertyName": "exponent"
        },
        "dtmi:dtdl:property:symbol;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {},
          "type": "http://www.w3.org/2001/XMLSchema#string",
          "typeName": "string",
          "propertyName": "symbol"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:BinaryUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:SemanticUnit;2",
      "extensionKind": "SemanticUnit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:baseUnit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {},
          "type": "dtmi:dtdl:class:Unit;2",
          "typeName": "Unit",
          "propertyName": "baseUnit"
        },
        "dtmi:dtdl:property:prefix;2": {
          "maxCount": 1,
          "plural": false,
          "optional": true,
          "description": {},
          "type": "dtmi:standard:class:BinaryPrefix;2",
          "typeName": "BinaryPrefix",
          "propertyName": "prefix"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Unit"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:Capacitance;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:CapacitanceUnit;2",
          "typeName": "CapacitanceUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:CapacitanceUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:ChargeUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:Current;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:CurrentUnit;2",
          "typeName": "CurrentUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:CurrentUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:DataRate;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:DataRateUnit;2",
          "typeName": "DataRateUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:DataRateUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:DataSize;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:DataSizeUnit;2",
          "typeName": "DataSizeUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:DataSizeUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:DecimalPrefix;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:UnitAttribute;2",
      "extensionKind": "UnitAttribute",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:exponent;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {},
          "type": "http://www.w3.org/2001/XMLSchema#integer",
          "typeName": "integer",
          "propertyName": "exponent"
        },
        "dtmi:dtdl:property:symbol;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {},
          "type": "http://www.w3.org/2001/XMLSchema#string",
          "typeName": "string",
          "propertyName": "symbol"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:DecimalUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:SemanticUnit;2",
      "extensionKind": "SemanticUnit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:baseUnit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {},
          "type": "dtmi:dtdl:class:Unit;2",
          "typeName": "Unit",
          "propertyName": "baseUnit"
        },
        "dtmi:dtdl:property:prefix;2": {
          "maxCount": 1,
          "plural": false,
          "optional": true,
          "description": {},
          "type": "dtmi:standard:class:DecimalPrefix;2",
          "typeName": "DecimalPrefix",
          "propertyName": "prefix"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Unit"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:Density;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:DensityUnit;2",
          "typeName": "DensityUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:DensityUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:Distance;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:LengthUnit;2",
          "typeName": "LengthUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:ElectricCharge;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:ChargeUnit;2",
          "typeName": "ChargeUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:Energy;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:EnergyUnit;2",
          "typeName": "EnergyUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:EnergyUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:Force;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:ForceUnit;2",
          "typeName": "ForceUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:ForceUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:Frequency;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:FrequencyUnit;2",
          "typeName": "FrequencyUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:FrequencyUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:Humidity;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:DensityUnit;2",
          "typeName": "DensityUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:Illuminance;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:IlluminanceUnit;2",
          "typeName": "IlluminanceUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:IlluminanceUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:Inductance;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:InductanceUnit;2",
          "typeName": "InductanceUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:InductanceUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:Latitude;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:AngleUnit;2",
          "typeName": "AngleUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:Length;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:LengthUnit;2",
          "typeName": "LengthUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:LengthUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:Longitude;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:AngleUnit;2",
          "typeName": "AngleUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:Luminance;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:LuminanceUnit;2",
          "typeName": "LuminanceUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:LuminanceUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:Luminosity;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:PowerUnit;2",
          "typeName": "PowerUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:LuminousFlux;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:LuminousFluxUnit;2",
          "typeName": "LuminousFluxUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:LuminousFluxUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:LuminousIntensity;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:LuminousIntensityUnit;2",
          "typeName": "LuminousIntensityUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:LuminousIntensityUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:MagneticFlux;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:MagneticFluxUnit;2",
          "typeName": "MagneticFluxUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:MagneticFluxUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:MagneticInduction;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:MagneticInductionUnit;2",
          "typeName": "MagneticInductionUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:MagneticInductionUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:Mass;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:MassUnit;2",
          "typeName": "MassUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:MassFlowRate;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:MassFlowRateUnit;2",
          "typeName": "MassFlowRateUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:MassFlowRateUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:MassUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:Power;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:PowerUnit;2",
          "typeName": "PowerUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:PowerUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:Pressure;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:PressureUnit;2",
          "typeName": "PressureUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:PressureUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:QuantitativeType;2": {
      "abstract": true,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:SemanticType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:Unit;2",
          "typeName": "Unit",
          "propertyName": "unit"
        }
      },
      "constraints": [
        {
          "property": "schema",
          "requiredTypes": [
            "dtmi:dtdl:class:NumericSchema;2"
          ],
          "requiredTypeNames": [
            "NumericSchema"
          ],
          "requiredTypesString": "NumericSchema"
        }
      ],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:RatioUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:SemanticUnit;2",
      "extensionKind": "SemanticUnit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:bottomUnit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {},
          "type": "dtmi:dtdl:class:Unit;2",
          "typeName": "Unit",
          "propertyName": "bottomUnit"
        },
        "dtmi:dtdl:property:topUnit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {},
          "type": "dtmi:dtdl:class:Unit;2",
          "typeName": "Unit",
          "propertyName": "topUnit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Unit"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:RelativeHumidity;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:Unitless;2",
          "typeName": "Unitless",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:Resistance;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:ResistanceUnit;2",
          "typeName": "ResistanceUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:ResistanceUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:SoundPressure;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:SoundPressureUnit;2",
          "typeName": "SoundPressureUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:SoundPressureUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:Temperature;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:TemperatureUnit;2",
          "typeName": "TemperatureUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:TemperatureUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:Thrust;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:ForceUnit;2",
          "typeName": "ForceUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:TimeSpan;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:TimeUnit;2",
          "typeName": "TimeUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:TimeUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:Torque;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:TorqueUnit;2",
          "typeName": "TorqueUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:TorqueUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:Unitless;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:Velocity;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:VelocityUnit;2",
          "typeName": "VelocityUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:VelocityUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:Voltage;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:VoltageUnit;2",
          "typeName": "VoltageUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:VoltageUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:Volume;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:VolumeUnit;2",
          "typeName": "VolumeUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:VolumeFlowRate;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:standard:class:QuantitativeType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:standard:class:VolumeFlowRateUnit;2",
          "typeName": "VolumeFlowRateUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:standard:class:VolumeFlowRateUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:standard:class:VolumeUnit;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:Unit;2",
      "extensionKind": "Unit",
      "extensionContext": "dtmi:dtdl:context;2",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [],
      "cotypeVersions": []
    },
    "dtmi:dtdl:extension:annotation:v1:ValueAnnotation": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:AdjunctType;3",
      "extensionKind": "AdjunctType",
      "extensionContext": "dtmi:dtdl:extension:annotation;1",
      "properties": {
        "dtmi:dtdl:extension:annotation:v1:ValueAnnotation:annotates": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "Name of a Property or Telemetry that is annotated.",
            "es-es": "Nombre de una propiedad o telemetría anotada."
          },
          "type": "http://www.w3.org/2001/XMLSchema#string",
          "typeName": "string",
          "propertyName": "annotates"
        }
      },
      "constraints": [],
      "siblings": [
        {
          "key": "name",
          "keyref": "dtmi:dtdl:extension:annotation:v1:ValueAnnotation:annotates",
          "requiredTypes": [
            "dtmi:dtdl:class:Property;3",
            "dtmi:dtdl:class:Telemetry;3"
          ],
          "requiredTypeNames": [
            "Property",
            "Telemetry"
          ],
          "requiredTypesString": "Property or Telemetry",
          "disallowedType": "dtmi:dtdl:extension:annotation:v1:ValueAnnotation",
          "disallowedTypeName": "ValueAnnotation"
        }
      ],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:historization:v1:Historized": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:AdjunctType;3",
      "extensionKind": "AdjunctType",
      "extensionContext": "dtmi:dtdl:extension:historization;1",
      "properties": {},
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        2,
        3
      ]
    },
    "dtmi:dtdl:extension:initialization:v1:Initialized": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:AdjunctType;3",
      "extensionKind": "AdjunctType",
      "extensionContext": "dtmi:dtdl:extension:initialization;1",
      "properties": {
        "dtmi:dtdl:extension:initialization:v1:Initialized:initialValue": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "instanceProperty": "schema",
          "description": {
            "en-us": "The initial value for the instance.",
            "es-es": "El valor inicial de la instancia."
          },
          "type": "http://www.w3.org/1999/02/22-rdf-syntax-ns#JSON",
          "typeName": "JSON",
          "propertyName": "initialValue"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Property"
      ],
      "cotypeVersions": [
        2,
        3
      ]
    },
    "dtmi:dtdl:extension:optionality:v1:Optional": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:AdjunctType;3",
      "extensionKind": "AdjunctType",
      "extensionContext": "dtmi:dtdl:extension:optionality;1",
      "properties": {
        "dtmi:dtdl:extension:optionality:v1:Optional:defaultValue": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "instanceProperty": "schema",
          "description": {
            "en-us": "The default value for the instance.",
            "es-es": "El valor predeterminado de la instancia."
          },
          "type": "http://www.w3.org/1999/02/22-rdf-syntax-ns#JSON",
          "typeName": "JSON",
          "propertyName": "defaultValue"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandPayload",
        "CommandRequest"
      ],
      "cotypeVersions": [
        2,
        3
      ]
    },
    "dtmi:dtdl:extension:overriding:v1:Override": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:AdjunctType;3",
      "extensionKind": "AdjunctType",
      "extensionContext": "dtmi:dtdl:extension:overriding;1",
      "properties": {
        "dtmi:dtdl:extension:overriding:v1:Override:overrides": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "Term or IRI of an extension property that is overridden.",
            "es-es": "Término o IRI de una propiedad de extensión que se anula."
          },
          "typeName": "IRI",
          "propertyName": "overrides"
        }
      },
      "constraints": [
        {
          "siblingKey": "name",
          "siblingKeyref": "dtmi:dtdl:extension:annotation:v1:ValueAnnotation:annotates",
          "siblingParentOf": "dtmi:dtdl:extension:overriding:v1:Override:overrides",
          "property": "schema"
        }
      ],
      "siblings": [
        {
          "key": "name",
          "keyref": "dtmi:dtdl:extension:annotation:v1:ValueAnnotation:annotates",
          "uniqueReference": "dtmi:dtdl:extension:overriding:v1:Override:overrides",
          "supplementalProperty": "dtmi:dtdl:extension:overriding:v1:Override:overrides"
        },
        {
          "key": "name",
          "keyref": "dtmi:dtdl:extension:annotation:v1:ValueAnnotation:annotates",
          "requiredTypes": [
            "dtmi:dtdl:class:Property;3",
            "dtmi:dtdl:class:Telemetry;3"
          ],
          "requiredTypeNames": [
            "Property",
            "Telemetry"
          ],
          "requiredTypesString": "Property or Telemetry"
        }
      ],
      "cotypes": [
        "Property"
      ],
      "cotypeVersions": [
        3
      ],
      "cocotypes": [
        "dtmi:dtdl:extension:annotation:v1:ValueAnnotation"
      ],
      "discotypes": [
        "dtmi:dtdl:extension:initialization:v1:Initialized"
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Acceleration": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:AccelerationUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Angle": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:AngleUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:AngularAcceleration": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:AngularAccelerationUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:AngularVelocity": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:AngularVelocityUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:ApparentEnergy": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:ApparentEnergyUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:ApparentPower": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:ApparentPowerUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Area": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:AreaUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:BinaryUnit": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:AdjunctType;3",
      "extensionKind": "AdjunctType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:baseUnit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {},
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "baseUnit"
        },
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:prefix": {
          "maxCount": 1,
          "plural": false,
          "optional": true,
          "description": {},
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "prefix"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "Array",
        "Boolean",
        "Command",
        "CommandPayload",
        "CommandRequest",
        "CommandResponse",
        "CommandType",
        "Component",
        "Date",
        "DateTime",
        "Double",
        "Duration",
        "Enum",
        "EnumValue",
        "Field",
        "Float",
        "Integer",
        "Interface",
        "LatentType",
        "Long",
        "Map",
        "MapKey",
        "MapValue",
        "NamedLatentType",
        "Object",
        "Property",
        "Relationship",
        "String",
        "Telemetry",
        "Time",
        "Unit",
        "UnitAttribute"
      ],
      "cotypeVersions": [
        2,
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Capacitance": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:CapacitanceUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Concentration": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:Unitless",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Current": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:CurrentUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:DataRate": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:DataRateUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:DataSize": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:DataSizeUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:DecimalUnit": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:AdjunctType;3",
      "extensionKind": "AdjunctType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:baseUnit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {},
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "baseUnit"
        },
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:prefix": {
          "maxCount": 1,
          "plural": false,
          "optional": true,
          "description": {},
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "prefix"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "EnumValue"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Density": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:DensityUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Distance": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:LengthUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:ElectricCharge": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:ChargeUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Energy": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:EnergyUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:EnergyRate": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:EnergyRateUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Force": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:ForceUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Frequency": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:FrequencyUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Humidity": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:DensityUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Illuminance": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:IlluminanceUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Inductance": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:InductanceUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:IonizingRadiationDose": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:IonizingRadiationDoseUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Irradiance": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:IrradianceUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Latitude": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:AngleUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Length": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:LengthUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Longitude": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:AngleUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Luminance": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:LuminanceUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Luminosity": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:PowerUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:LuminousFlux": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:LuminousFluxUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:LuminousIntensity": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:LuminousIntensityUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:MagneticFlux": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:MagneticFluxUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:MagneticInduction": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:MagneticInductionUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Mass": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:MassUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:MassFlowRate": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:MassFlowRateUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Power": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:PowerUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Pressure": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:PressureUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType": {
      "abstract": true,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:SemanticType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [
        {
          "property": "schema",
          "requiredTypes": [
            "dtmi:dtdl:class:NumericSchema;3"
          ],
          "requiredTypeNames": [
            "NumericSchema"
          ],
          "requiredTypesString": "NumericSchema"
        }
      ],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Radioactivity": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:RadioactivityUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:RatioUnit": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:AdjunctType;3",
      "extensionKind": "AdjunctType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:bottomUnit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {},
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "bottomUnit"
        },
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:topUnit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {},
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "topUnit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "EnumValue"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:ReactiveEnergy": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:ReactiveEnergyUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:ReactivePower": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:ReactivePowerUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:RelativeDensity": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:Unitless",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:RelativeHumidity": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:Unitless",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Resistance": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:ResistanceUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:SoundPressure": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:SoundPressureUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:SymbolicUnit": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:AdjunctType;3",
      "extensionKind": "AdjunctType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:property:symbol;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {},
          "type": "http://www.w3.org/2001/XMLSchema#string",
          "typeName": "string",
          "propertyName": "symbol"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "EnumValue"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Temperature": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:TemperatureUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Thrust": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:ForceUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:TimeSpan": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:TimeUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Torque": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:TorqueUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:UnitPrefix": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:AdjunctType;3",
      "extensionKind": "AdjunctType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:property:exponent;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {},
          "type": "http://www.w3.org/2001/XMLSchema#integer",
          "typeName": "integer",
          "propertyName": "exponent"
        },
        "dtmi:dtdl:property:symbol;3": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "description": {},
          "type": "http://www.w3.org/2001/XMLSchema#string",
          "typeName": "string",
          "propertyName": "symbol"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "EnumValue"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Velocity": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:VelocityUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Voltage": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:VoltageUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:Volume": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:VolumeUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes:v1:class:VolumeFlowRate": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:extension:quantitativeTypes:v1:class:QuantitativeType",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:dtdl:extension:quantitativeTypes;1",
      "properties": {
        "dtmi:dtdl:extension:quantitativeTypes:v1:property:unit": {
          "maxCount": 1,
          "minCount": 1,
          "plural": false,
          "optional": false,
          "childOf": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:VolumeFlowRateUnit",
          "description": {
            "en-us": "The unit type for data associated with the element.",
            "es-es": "Tipo de unidad para los datos asociados al elemento."
          },
          "type": "dtmi:dtdl:class:EnumValue;3",
          "typeName": "EnumValue",
          "propertyName": "unit"
        }
      },
      "constraints": [],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:iotcentral:class:AccelerationVector;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:SemanticType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:iotcentral:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "plural": false,
          "optional": true,
          "description": {},
          "type": "dtmi:standard:class:AccelerationUnit;2",
          "typeName": "AccelerationUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [
        {
          "property": "schema",
          "requiredValues": [
            "dtmi:iotcentral:schema:vector;2"
          ],
          "requiredValueNames": [
            "vector"
          ],
          "requiredValuesString": "vector"
        }
      ],
      "siblings": [],
      "cotypes": [
        "Property",
        "Relationship",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:iotcentral:class:AccelerationVector;3": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:SemanticType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:iotcentral:context;3",
      "properties": {},
      "constraints": [
        {
          "property": "unit",
          "requiredTypes": [
            "dtmi:dtdl:class:EnumValue;3"
          ],
          "requiredTypeNames": [
            "EnumValue"
          ],
          "requiredTypesString": "EnumValue"
        },
        {
          "property": "schema",
          "requiredValues": [
            "dtmi:iotcentral:schema:vector;3"
          ],
          "requiredValueNames": [
            "vector"
          ],
          "requiredValuesString": "vector"
        }
      ],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Relationship",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:iotcentral:class:Event;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:SemanticType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:iotcentral:context;2",
      "properties": {},
      "constraints": [
        {
          "property": "schema",
          "requiredTypes": [
            "dtmi:dtdl:class:NumericSchema;2",
            "dtmi:dtdl:class:String;2"
          ],
          "requiredTypeNames": [
            "NumericSchema",
            "String"
          ],
          "requiredTypesString": "NumericSchema or String"
        }
      ],
      "siblings": [],
      "cotypes": [
        "Property",
        "Relationship",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:iotcentral:class:Event;3": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:SemanticType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:iotcentral:context;3",
      "properties": {},
      "constraints": [
        {
          "property": "schema",
          "requiredTypes": [
            "dtmi:dtdl:class:NumericSchema;3",
            "dtmi:dtdl:class:String;3"
          ],
          "requiredTypeNames": [
            "NumericSchema",
            "String"
          ],
          "requiredTypesString": "NumericSchema or String"
        }
      ],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Relationship",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:iotcentral:class:Location;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:SemanticType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:iotcentral:context;2",
      "properties": {},
      "constraints": [
        {
          "property": "schema",
          "requiredValues": [
            "dtmi:standard:schema:geospatial:point;2",
            "dtmi:standard:schema:geospatial:multiPoint;2",
            "dtmi:standard:schema:geospatial:lineString;2",
            "dtmi:standard:schema:geospatial:multiLineString;2",
            "dtmi:standard:schema:geospatial:polygon;2",
            "dtmi:standard:schema:geospatial:multiPolygon;2",
            "dtmi:iotcentral:schema:geopoint;2"
          ],
          "requiredValueNames": [
            "point",
            "multiPoint",
            "lineString",
            "multiLineString",
            "polygon",
            "multiPolygon",
            "geopoint"
          ],
          "requiredValuesString": "point or multiPoint or lineString or multiLineString or polygon or multiPolygon or geopoint"
        }
      ],
      "siblings": [],
      "cotypes": [
        "Property",
        "Relationship",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:iotcentral:class:Location;3": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:SemanticType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:iotcentral:context;3",
      "properties": {},
      "constraints": [
        {
          "property": "schema",
          "requiredValues": [
            "dtmi:standard:schema:geospatial:point;3",
            "dtmi:standard:schema:geospatial:multiPoint;3",
            "dtmi:standard:schema:geospatial:lineString;3",
            "dtmi:standard:schema:geospatial:multiLineString;3",
            "dtmi:standard:schema:geospatial:polygon;3",
            "dtmi:standard:schema:geospatial:multiPolygon;3",
            "dtmi:iotcentral:schema:geopoint;3"
          ],
          "requiredValueNames": [
            "point",
            "multiPoint",
            "lineString",
            "multiLineString",
            "polygon",
            "multiPolygon",
            "geopoint"
          ],
          "requiredValuesString": "point or multiPoint or lineString or multiLineString or polygon or multiPolygon or geopoint"
        }
      ],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Relationship",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:iotcentral:class:State;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:SemanticType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:iotcentral:context;2",
      "properties": {},
      "constraints": [
        {
          "property": "schema",
          "requiredTypes": [
            "dtmi:dtdl:class:Enum;2"
          ],
          "requiredTypeNames": [
            "Enum"
          ],
          "requiredTypesString": "Enum"
        }
      ],
      "siblings": [],
      "cotypes": [
        "Property",
        "Relationship",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:iotcentral:class:State;3": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:SemanticType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:iotcentral:context;3",
      "properties": {},
      "constraints": [
        {
          "property": "schema",
          "requiredTypes": [
            "dtmi:dtdl:class:Enum;3"
          ],
          "requiredTypeNames": [
            "Enum"
          ],
          "requiredTypesString": "Enum"
        }
      ],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Relationship",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    },
    "dtmi:iotcentral:class:VelocityVector;2": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:SemanticType;2",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:iotcentral:context;2",
      "properties": {
        "dtmi:dtdl:property:unit;2": {
          "maxCount": 1,
          "plural": false,
          "optional": true,
          "description": {},
          "type": "dtmi:standard:class:VelocityUnit;2",
          "typeName": "VelocityUnit",
          "propertyName": "unit"
        }
      },
      "constraints": [
        {
          "property": "schema",
          "requiredValues": [
            "dtmi:iotcentral:schema:vector;2"
          ],
          "requiredValueNames": [
            "vector"
          ],
          "requiredValuesString": "vector"
        }
      ],
      "siblings": [],
      "cotypes": [
        "Property",
        "Relationship",
        "Telemetry"
      ],
      "cotypeVersions": [
        2
      ]
    },
    "dtmi:iotcentral:class:VelocityVector;3": {
      "abstract": false,
      "mergeable": false,
      "parent": "dtmi:dtdl:class:SemanticType;3",
      "extensionKind": "SemanticType",
      "extensionContext": "dtmi:iotcentral:context;3",
      "properties": {},
      "constraints": [
        {
          "property": "unit",
          "requiredTypes": [
            "dtmi:dtdl:class:EnumValue;3"
          ],
          "requiredTypeNames": [
            "EnumValue"
          ],
          "requiredTypesString": "EnumValue"
        },
        {
          "property": "schema",
          "requiredValues": [
            "dtmi:iotcentral:schema:vector;3"
          ],
          "requiredValueNames": [
            "vector"
          ],
          "requiredValuesString": "vector"
        }
      ],
      "siblings": [],
      "cotypes": [
        "CommandRequest",
        "CommandResponse",
        "Field",
        "MapValue",
        "Property",
        "Relationship",
        "Telemetry"
      ],
      "cotypeVersions": [
        3
      ]
    }
  },
  "quantitativeTypes": {
    "dtmi:dtdl:context;2": {
      "Acceleration": "AccelerationUnit",
      "Angle": "AngleUnit",
      "AngularAcceleration": "AngularAccelerationUnit",
      "AngularVelocity": "AngularVelocityUnit",
      "Area": "AreaUnit",
      "Capacitance": "CapacitanceUnit",
      "Current": "CurrentUnit",
      "DataRate": "DataRateUnit",
      "DataSize": "DataSizeUnit",
      "Density": "DensityUnit",
      "Distance": "LengthUnit",
      "ElectricCharge": "ChargeUnit",
      "Energy": "EnergyUnit",
      "Force": "ForceUnit",
      "Frequency": "FrequencyUnit",
      "Humidity": "DensityUnit",
      "Illuminance": "IlluminanceUnit",
      "Inductance": "InductanceUnit",
      "Latitude": "AngleUnit",
      "Length": "LengthUnit",
      "Longitude": "AngleUnit",
      "Luminance": "LuminanceUnit",
      "Luminosity": "PowerUnit",
      "LuminousFlux": "LuminousFluxUnit",
      "LuminousIntensity": "LuminousIntensityUnit",
      "MagneticFlux": "MagneticFluxUnit",
      "MagneticInduction": "MagneticInductionUnit",
      "Mass": "MassUnit",
      "MassFlowRate": "MassFlowRateUnit",
      "Power": "PowerUnit",
      "Pressure": "PressureUnit",
      "RelativeHumidity": "Unitless",
      "Resistance": "ResistanceUnit",
      "SoundPressure": "SoundPressureUnit",
      "Temperature": "TemperatureUnit",
      "Thrust": "ForceUnit",
      "TimeSpan": "TimeUnit",
      "Torque": "TorqueUnit",
      "Velocity": "VelocityUnit",
      "Voltage": "VoltageUnit",
      "Volume": "VolumeUnit",
      "VolumeFlowRate": "VolumeFlowRateUnit"
    },
    "dtmi:dtdl:extension:quantitativeTypes;1": {
      "Acceleration": "AccelerationUnit",
      "Angle": "AngleUnit",
      "AngularAcceleration": "AngularAccelerationUnit",
      "AngularVelocity": "AngularVelocityUnit",
      "ApparentEnergy": "ApparentEnergyUnit",
      "ApparentPower": "ApparentPowerUnit",
      "Area": "AreaUnit",
      "Capacitance": "CapacitanceUnit",
      "Concentration": "Unitless",
      "Current": "CurrentUnit",
      "DataRate": "DataRateUnit",
      "DataSize": "DataSizeUnit",
      "Density": "DensityUnit",
      "Distance": "LengthUnit",
      "ElectricCharge": "ChargeUnit",
      "Energy": "EnergyUnit",
      "EnergyRate": "EnergyRateUnit",
      "Force": "ForceUnit",
      "Frequency": "FrequencyUnit",
      "Humidity": "DensityUnit",
      "Illuminance": "IlluminanceUnit",
      "Inductance": "InductanceUnit",
      "IonizingRadiationDose": "IonizingRadiationDoseUnit",
      "Irradiance": "IrradianceUnit",
      "Latitude": "AngleUnit",
      "Length": "LengthUnit",
      "Longitude": "AngleUnit",
      "Luminance": "LuminanceUnit",
      "Luminosity": "PowerUnit",
      "LuminousFlux": "LuminousFluxUnit",
      "LuminousIntensity": "LuminousIntensityUnit",
      "MagneticFlux": "MagneticFluxUnit",
      "MagneticInduction": "MagneticInductionUnit",
      "Mass": "MassUnit",
      "MassFlowRate": "MassFlowRateUnit",
      "Power": "PowerUnit",
      "Pressure": "PressureUnit",
      "Radioactivity": "RadioactivityUnit",
      "ReactiveEnergy": "ReactiveEnergyUnit",
      "ReactivePower": "ReactivePowerUnit",
      "RelativeDensity": "Unitless",
      "RelativeHumidity": "Unitless",
      "Resistance": "ResistanceUnit",
      "SoundPressure": "SoundPressureUnit",
      "Temperature": "TemperatureUnit",
      "Thrust": "ForceUnit",
      "TimeSpan": "TimeUnit",
      "Torque": "TorqueUnit",
      "Velocity": "VelocityUnit",
      "Voltage": "VoltageUnit",
      "Volume": "VolumeUnit",
      "VolumeFlowRate": "VolumeFlowRateUnit"
    }
  },
  "units": {
    "dtmi:dtdl:context;2": {
      "AccelerationUnit": [
        "centimetrePerSecondSquared",
        "gForce",
        "metrePerSecondSquared"
      ],
      "AngleUnit": [
        "degreeOfArc",
        "minuteOfArc",
        "radian",
        "secondOfArc",
        "turn"
      ],
      "AngularAccelerationUnit": [
        "radianPerSecondSquared"
      ],
      "AngularVelocityUnit": [
        "degreePerSecond",
        "radianPerSecond",
        "revolutionPerMinute",
        "revolutionPerSecond"
      ],
      "AreaUnit": [
        "acre",
        "hectare",
        "squareCentimetre",
        "squareFoot",
        "squareInch",
        "squareKilometre",
        "squareMetre",
        "squareMillimetre"
      ],
      "CapacitanceUnit": [
        "farad",
        "microfarad",
        "millifarad",
        "nanofarad",
        "picofarad"
      ],
      "CurrentUnit": [
        "ampere",
        "microampere",
        "milliampere"
      ],
      "DataRateUnit": [
        "bitPerSecond",
        "bytePerSecond",
        "exbibitPerSecond",
        "exbibytePerSecond",
        "gibibitPerSecond",
        "gibibytePerSecond",
        "kibibitPerSecond",
        "kibibytePerSecond",
        "mebibitPerSecond",
        "mebibytePerSecond",
        "tebibitPerSecond",
        "tebibytePerSecond",
        "yobibitPerSecond",
        "yobibytePerSecond",
        "zebibitPerSecond",
        "zebibytePerSecond"
      ],
      "DataSizeUnit": [
        "bit",
        "byte",
        "exbibit",
        "exbibyte",
        "gibibit",
        "gibibyte",
        "kibibit",
        "kibibyte",
        "mebibit",
        "mebibyte",
        "tebibit",
        "tebibyte",
        "yobibit",
        "yobibyte",
        "zebibit",
        "zebibyte"
      ],
      "DensityUnit": [
        "gramPerCubicMetre",
        "kilogramPerCubicMetre"
      ],
      "LengthUnit": [
        "astronomicalUnit",
        "centimetre",
        "foot",
        "inch",
        "kilometre",
        "metre",
        "micrometre",
        "mile",
        "millimetre",
        "nanometre",
        "nauticalMile"
      ],
      "ChargeUnit": [
        "coulomb"
      ],
      "EnergyUnit": [
        "electronvolt",
        "gigajoule",
        "joule",
        "kilojoule",
        "kilowattHour",
        "megaelectronvolt",
        "megajoule"
      ],
      "ForceUnit": [
        "newton",
        "ounce",
        "pound",
        "ton"
      ],
      "FrequencyUnit": [
        "gigahertz",
        "hertz",
        "kilohertz",
        "megahertz"
      ],
      "IlluminanceUnit": [
        "footcandle",
        "lux"
      ],
      "InductanceUnit": [
        "henry",
        "microhenry",
        "millihenry"
      ],
      "LuminanceUnit": [
        "candelaPerSquareMetre"
      ],
      "PowerUnit": [
        "gigawatt",
        "horsepower",
        "kilowatt",
        "kilowattHourPerYear",
        "megawatt",
        "microwatt",
        "milliwatt",
        "watt"
      ],
      "LuminousFluxUnit": [
        "lumen"
      ],
      "LuminousIntensityUnit": [
        "candela"
      ],
      "MagneticFluxUnit": [
        "maxwell",
        "weber"
      ],
      "MagneticInductionUnit": [
        "tesla"
      ],
      "MassUnit": [
        "gram",
        "kilogram",
        "microgram",
        "milligram",
        "slug",
        "tonne"
      ],
      "MassFlowRateUnit": [
        "gramPerHour",
        "gramPerSecond",
        "kilogramPerHour",
        "kilogramPerSecond"
      ],
      "PressureUnit": [
        "bar",
        "inchesOfMercury",
        "inchesOfWater",
        "kilopascal",
        "millibar",
        "millimetresOfMercury",
        "pascal",
        "poundPerSquareInch"
      ],
      "Unitless": [
        "percent",
        "unity"
      ],
      "ResistanceUnit": [
        "kiloohm",
        "megaohm",
        "milliohm",
        "ohm"
      ],
      "SoundPressureUnit": [
        "bel",
        "decibel"
      ],
      "TemperatureUnit": [
        "degreeCelsius",
        "degreeFahrenheit",
        "kelvin"
      ],
      "TimeUnit": [
        "day",
        "hour",
        "microsecond",
        "millisecond",
        "minute",
        "nanosecond",
        "second",
        "year"
      ],
      "TorqueUnit": [
        "newtonMetre"
      ],
      "VelocityUnit": [
        "centimetrePerSecond",
        "kilometrePerHour",
        "kilometrePerSecond",
        "knot",
        "metrePerHour",
        "metrePerSecond",
        "milePerHour",
        "milePerSecond"
      ],
      "VoltageUnit": [
        "kilovolt",
        "megavolt",
        "microvolt",
        "millivolt",
        "volt"
      ],
      "VolumeUnit": [
        "cubicCentimetre",
        "cubicFoot",
        "cubicInch",
        "cubicMetre",
        "fluidOunce",
        "gallon",
        "litre",
        "millilitre"
      ],
      "VolumeFlowRateUnit": [
        "litrePerHour",
        "litrePerSecond",
        "millilitrePerHour",
        "millilitrePerSecond"
      ]
    },
    "dtmi:dtdl:extension:quantitativeTypes;1": {
      "AccelerationUnit": [
        "centimetrePerSecondSquared",
        "gForce",
        "metrePerSecondSquared"
      ],
      "AngleUnit": [
        "degreeOfArc",
        "minuteOfArc",
        "radian",
        "secondOfArc",
        "turn"
      ],
      "AngularAccelerationUnit": [
        "radianPerSecondSquared"
      ],
      "AngularVelocityUnit": [
        "degreePerSecond",
        "radianPerSecond",
        "revolutionPerMinute",
        "revolutionPerSecond"
      ],
      "ApparentEnergyUnit": [
        "gigavoltAmpereHour",
        "kilovoltAmpereHour",
        "megavoltAmpereHour",
        "voltAmpereHour"
      ],
      "ApparentPowerUnit": [
        "gigavoltAmpere",
        "kilovoltAmpere",
        "megavoltAmpere",
        "millivoltAmpere",
        "voltAmpere"
      ],
      "AreaUnit": [
        "acre",
        "hectare",
        "squareCentimetre",
        "squareFoot",
        "squareInch",
        "squareKilometre",
        "squareMetre",
        "squareMillimetre"
      ],
      "CapacitanceUnit": [
        "farad",
        "microfarad",
        "millifarad",
        "nanofarad",
        "picofarad"
      ],
      "Unitless": [
        "partsPerBillion",
        "partsPerMillion",
        "partsPerQuadrillion",
        "partsPerTrillion",
        "percent",
        "unity"
      ],
      "CurrentUnit": [
        "ampere",
        "kiloampere",
        "microampere",
        "milliampere"
      ],
      "DataRateUnit": [
        "bitPerSecond",
        "bytePerSecond",
        "exbibitPerSecond",
        "exbibytePerSecond",
        "gibibitPerSecond",
        "gibibytePerSecond",
        "kibibitPerSecond",
        "kibibytePerSecond",
        "mebibitPerSecond",
        "mebibytePerSecond",
        "tebibitPerSecond",
        "tebibytePerSecond",
        "yobibitPerSecond",
        "yobibytePerSecond",
        "zebibitPerSecond",
        "zebibytePerSecond"
      ],
      "DataSizeUnit": [
        "bit",
        "byte",
        "exbibit",
        "exbibyte",
        "gibibit",
        "gibibyte",
        "kibibit",
        "kibibyte",
        "mebibit",
        "mebibyte",
        "tebibit",
        "tebibyte",
        "yobibit",
        "yobibyte",
        "zebibit",
        "zebibyte"
      ],
      "DensityUnit": [
        "gramPerCubicMetre",
        "kilogramPerCubicMetre",
        "microgramPerCubicMetre",
        "milligramPerCubicMetre"
      ],
      "LengthUnit": [
        "astronomicalUnit",
        "centimetre",
        "foot",
        "inch",
        "kilometre",
        "metre",
        "micrometre",
        "mile",
        "millimetre",
        "nanometre",
        "nauticalMile"
      ],
      "ChargeUnit": [
        "ampereHour",
        "coulomb",
        "milliampereHour"
      ],
      "EnergyUnit": [
        "britishThermalUnit",
        "electronvolt",
        "gigajoule",
        "gigawattHour",
        "joule",
        "kiloBritishThermalUnit",
        "kilojoule",
        "kilowattHour",
        "megaelectronvolt",
        "megajoule",
        "megawattHour",
        "milliwattHour",
        "terawattHour",
        "wattHour"
      ],
      "EnergyRateUnit": [
        "britishThermalUnitPerHour",
        "gigajoulePerHour",
        "joulePerHour",
        "kiloBritishThermalUnitPerHour",
        "kilojoulePerHour",
        "kilowattHourPerYear",
        "megajoulePerHour"
      ],
      "ForceUnit": [
        "newton",
        "ounce",
        "pound",
        "ton"
      ],
      "FrequencyUnit": [
        "gigahertz",
        "hertz",
        "kilohertz",
        "megahertz",
        "millihertz"
      ],
      "IlluminanceUnit": [
        "footcandle",
        "lux"
      ],
      "InductanceUnit": [
        "henry",
        "microhenry",
        "millihenry"
      ],
      "IonizingRadiationDoseUnit": [
        "gray",
        "microgray",
        "microsievert",
        "milligray",
        "millisievert",
        "sievert"
      ],
      "IrradianceUnit": [
        "wattPerSquareMetre"
      ],
      "LuminanceUnit": [
        "candelaPerSquareMetre"
      ],
      "PowerUnit": [
        "gigawatt",
        "horsepower",
        "kilowatt",
        "megawatt",
        "microwatt",
        "milliwatt",
        "watt"
      ],
      "LuminousFluxUnit": [
        "lumen"
      ],
      "LuminousIntensityUnit": [
        "candela"
      ],
      "MagneticFluxUnit": [
        "maxwell",
        "weber"
      ],
      "MagneticInductionUnit": [
        "gauss",
        "tesla"
      ],
      "MassUnit": [
        "gram",
        "kilogram",
        "massPound",
        "microgram",
        "milligram",
        "slug",
        "tonne"
      ],
      "MassFlowRateUnit": [
        "gramPerHour",
        "gramPerSecond",
        "kilogramPerHour",
        "kilogramPerSecond",
        "massPoundPerHour"
      ],
      "PressureUnit": [
        "bar",
        "decapascal",
        "hectopascal",
        "inchesOfMercury",
        "inchesOfWater",
        "kilopascal",
        "millibar",
        "millimetresOfMercury",
        "pascal",
        "poundPerSquareInch"
      ],
      "RadioactivityUnit": [
        "becquerel",
        "gigabecquerel",
        "kilobecquerel",
        "megabecquerel"
      ],
      "ReactiveEnergyUnit": [
        "gigavoltAmpereReactiveHour",
        "kilovoltAmpereReactiveHour",
        "megavoltAmpereReactiveHour",
        "voltAmpereReactiveHour"
      ],
      "ReactivePowerUnit": [
        "gigavoltAmpereReactive",
        "kilovoltAmpereReactive",
        "megavoltAmpereReactive",
        "millivoltAmpereReactive",
        "voltAmpereReactive"
      ],
      "ResistanceUnit": [
        "kiloohm",
        "megaohm",
        "milliohm",
        "ohm"
      ],
      "SoundPressureUnit": [
        "bel",
        "decibel"
      ],
      "TemperatureUnit": [
        "degreeCelsius",
        "degreeFahrenheit",
        "kelvin"
      ],
      "TimeUnit": [
        "day",
        "hour",
        "microsecond",
        "millisecond",
        "minute",
        "nanosecond",
        "second",
        "year"
      ],
      "TorqueUnit": [
        "newtonMetre"
      ],
      "VelocityUnit": [
        "centimetrePerSecond",
        "kilometrePerHour",
        "kilometrePerSecond",
        "knot",
        "metrePerHour",
        "metrePerSecond",
        "milePerHour",
        "milePerSecond"
      ],
      "VoltageUnit": [
        "kilovolt",
        "megavolt",
        "microvolt",
        "millivolt",
        "volt"
      ],
      "VolumeUnit": [
        "cubicCentimetre",
        "cubicFoot",
        "cubicInch",
        "cubicMetre",
        "fluidOunce",
        "gallon",
        "litre",
        "millilitre"
      ],
      "VolumeFlowRateUnit": [
        "cubicFootPerMinute",
        "cubicMetrePerHour",
        "cubicMetrePerMinute",
        "cubicMetrePerSecond",
        "gallonPerHour",
        "gallonPerMinute",
        "litrePerHour",
        "litrePerSecond",
        "millilitrePerHour",
        "millilitrePerSecond"
      ]
    }
  },
  "elements": [
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:dtdl:instance:Schema:boolean;2",
      "@type": "Boolean",
      "displayName": "boolean",
      "description": {
        "en-US": "a boolean value",
        "es-ES": "un valor booleano"
      }
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:dtdl:instance:Schema:double;2",
      "@type": "Double",
      "displayName": "double",
      "description": {
        "en-US": "a finite numeric value that is expressible in IEEE 754 double-precision floating point format, conformant with xsd:double",
        "es-ES": "un valor numérico finito que es expresable en formato de coma flotante de doble precisión IEEE 754, conforme con xsd:double"
      }
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:dtdl:instance:Schema:float;2",
      "@type": "Float",
      "displayName": "float",
      "description": {
        "en-US": "a finite numeric value that is expressible in IEEE 754 single-precision floating point format, conformant with xsd:float",
        "es-ES": "un valor numérico finito que es expresable en formato de coma flotante de precisión única IEEE 754, conforme con xsd:float"
      }
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:dtdl:instance:Schema:integer;2",
      "@type": "Integer",
      "displayName": "integer",
      "description": {
        "en-US": "a signed integral numeric value that is expressible in 4 bytes",
        "es-ES": "un valor numérico integral con firma que se puede expresar en 4 bytes"
      }
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:dtdl:instance:Schema:long;2",
      "@type": "Long",
      "displayName": "long",
      "description": {
        "en-US": "a signed integral numeric value that is expressible in 8 bytes",
        "es-ES": "un valor numérico integral con firma que se puede expresar en 8 bytes"
      }
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:dtdl:instance:Schema:date;2",
      "@type": "Date",
      "displayName": "date",
      "description": {
        "en-US": "a date in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
        "es-ES": "una fecha en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
      }
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:dtdl:instance:Schema:dateTime;2",
      "@type": "DateTime",
      "displayName": "dateTime",
      "description": {
        "en-US": "a date and time in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
        "es-ES": "una fecha y hora en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
      }
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:dtdl:instance:Schema:duration;2",
      "@type": "Duration",
      "displayName": "duration",
      "description": {
        "en-US": "a duration in ISO 8601 format",
        "es-ES": "una duración en formato ISO 8601"
      }
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:dtdl:instance:Schema:time;2",
      "@type": "Time",
      "displayName": "time",
      "description": {
        "en-US": "a time in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
        "es-ES": "una hora en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
      }
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:dtdl:instance:Schema:string;2",
      "@type": "String",
      "displayName": "string",
      "description": {
        "en-US": "a UTF8 string",
        "es-ES": "una cadena UTF8"
      }
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:dtdl:instance:CommandType:asynchronous;2",
      "@type": "CommandType",
      "displayName": "asynchronous",
      "description": {
        "en-US": "The command will complete sometime after control returns to the caller. After the command completes, the result and any outputs are available.",
        "es-ES": "El comando se completará en algún momento después de que el control vuelva al llamador. Una vez completado el comando, el resultado y las salidas están disponibles."
      }
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:dtdl:instance:CommandType:synchronous;2",
      "@type": "CommandType",
      "displayName": "synchronous",
      "description": {
        "en-US": "The command will be complete when control returns to the caller. The result and any outputs are available immediately.",
        "es-ES": "El comando se completará cuando el control vuelva al llamador. El resultado y las salidas están disponibles inmediatamente."
      }
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:dtdl:instance:Schema:boolean;3",
      "@type": [
        "Boolean",
        "Alias"
      ],
      "aliasFor": "dtmi:dtdl:instance:Schema:boolean;2",
      "displayName": "boolean",
      "description": {
        "en-US": "a boolean value",
        "es-ES": "un valor booleano"
      }
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:dtdl:instance:Schema:double;3",
      "@type": [
        "Double",
        "Alias"
      ],
      "aliasFor": "dtmi:dtdl:instance:Schema:double;2",
      "displayName": "double",
      "description": {
        "en-US": "a finite numeric value that is expressible in IEEE 754 double-precision floating point format, conformant with xsd:double",
        "es-ES": "un valor numérico finito que es expresable en formato de coma flotante de doble precisión IEEE 754, conforme con xsd:double"
      }
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:dtdl:instance:Schema:float;3",
      "@type": [
        "Float",
        "Alias"
      ],
      "aliasFor": "dtmi:dtdl:instance:Schema:float;2",
      "displayName": "float",
      "description": {
        "en-US": "a finite numeric value that is expressible in IEEE 754 single-precision floating point format, conformant with xsd:float",
        "es-ES": "un valor numérico finito que es expresable en formato de coma flotante de precisión única IEEE 754, conforme con xsd:float"
      }
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:dtdl:instance:Schema:integer;3",
      "@type": [
        "Integer",
        "Alias"
      ],
      "aliasFor": "dtmi:dtdl:instance:Schema:integer;2",
      "displayName": "integer",
      "description": {
        "en-US": "a signed integral numeric value that is expressible in 4 bytes",
        "es-ES": "un valor numérico integral con firma que se puede expresar en 4 bytes"
      }
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:dtdl:instance:Schema:long;3",
      "@type": [
        "Long",
        "Alias"
      ],
      "aliasFor": "dtmi:dtdl:instance:Schema:long;2",
      "displayName": "long",
      "description": {
        "en-US": "a signed integral numeric value that is expressible in 8 bytes",
        "es-ES": "un valor numérico integral con firma que se puede expresar en 8 bytes"
      }
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:dtdl:instance:Schema:date;3",
      "@type": [
        "Date",
        "Alias"
      ],
      "aliasFor": "dtmi:dtdl:instance:Schema:date;2",
      "displayName": "date",
      "description": {
        "en-US": "a date in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
        "es-ES": "una fecha en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
      }
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:dtdl:instance:Schema:dateTime;3",
      "@type": [
        "DateTime",
        "Alias"
      ],
      "aliasFor": "dtmi:dtdl:instance:Schema:dateTime;2",
      "displayName": "dateTime",
      "description": {
        "en-US": "a date and time in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
        "es-ES": "una fecha y hora en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
      }
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:dtdl:instance:Schema:duration;3",
      "@type": [
        "Duration",
        "Alias"
      ],
      "aliasFor": "dtmi:dtdl:instance:Schema:duration;2",
      "displayName": "duration",
      "description": {
        "en-US": "a duration in ISO 8601 format",
        "es-ES": "una duración en formato ISO 8601"
      }
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:dtdl:instance:Schema:time;3",
      "@type": [
        "Time",
        "Alias"
      ],
      "aliasFor": "dtmi:dtdl:instance:Schema:time;2",
      "displayName": "time",
      "description": {
        "en-US": "a time in ISO 8601 format, per [RFC 3339](https://tools.ietf.org/html/rfc3339)",
        "es-ES": "una hora en formato ISO 8601, según [RFC 3339](https://tools.ietf.org/html/rfc3339)"
      }
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:dtdl:instance:Schema:string;3",
      "@type": [
        "String",
        "Alias"
      ],
      "aliasFor": "dtmi:dtdl:instance:Schema:string;2",
      "displayName": "string",
      "description": {
        "en-US": "a UTF8 string",
        "es-ES": "una cadena UTF8"
      }
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:dtdl:instance:CommandType:asynchronous;3",
      "@type": "CommandType",
      "displayName": "asynchronous",
      "description": {
        "en-US": "The command will complete sometime after control returns to the caller. After the command completes, the result and any outputs are available.",
        "es-ES": "El comando se completará en algún momento después de que el control vuelva al llamador. Una vez completado el comando, el resultado y las salidas están disponibles."
      }
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:dtdl:instance:CommandType:synchronous;3",
      "@type": "CommandType",
      "displayName": "synchronous",
      "description": {
        "en-US": "The command will be complete when control returns to the caller. The result and any outputs are available immediately.",
        "es-ES": "El comando se completará cuando el control vuelva al llamador. El resultado y las salidas están disponibles inmediatamente."
      }
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:deci;2",
      "@type": "DecimalPrefix",
      "name": "deci",
      "symbol": "d",
      "exponent": -1
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:centi;2",
      "@type": "DecimalPrefix",
      "name": "centi",
      "symbol": "c",
      "exponent": -2
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:milli;2",
      "@type": "DecimalPrefix",
      "name": "milli",
      "symbol": "m",
      "exponent": -3
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:micro;2",
      "@type": "DecimalPrefix",
      "name": "micro",
      "symbol": "µ",
      "exponent": -6
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:nano;2",
      "@type": "DecimalPrefix",
      "name": "nano",
      "symbol": "n",
      "exponent": -9
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:pico;2",
      "@type": "DecimalPrefix",
      "name": "pico",
      "symbol": "p",
      "exponent": -12
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:femto;2",
      "@type": "DecimalPrefix",
      "name": "femto",
      "symbol": "f",
      "exponent": -15
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:atto;2",
      "@type": "DecimalPrefix",
      "name": "atto",
      "symbol": "a",
      "exponent": -18
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:zepto;2",
      "@type": "DecimalPrefix",
      "name": "zepto",
      "symbol": "z",
      "exponent": -21
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:yocto;2",
      "@type": "DecimalPrefix",
      "name": "yocto",
      "symbol": "y",
      "exponent": -24
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:deka;2",
      "@type": "DecimalPrefix",
      "name": "deka",
      "symbol": "da",
      "exponent": 1
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:hecto;2",
      "@type": "DecimalPrefix",
      "name": "hecto",
      "symbol": "h",
      "exponent": 2
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:kilo;2",
      "@type": "DecimalPrefix",
      "name": "kilo",
      "symbol": "k",
      "exponent": 3
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:mega;2",
      "@type": "DecimalPrefix",
      "name": "mega",
      "symbol": "M",
      "exponent": 6
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:giga;2",
      "@type": "DecimalPrefix",
      "name": "giga",
      "symbol": "G",
      "exponent": 9
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:tera;2",
      "@type": "DecimalPrefix",
      "name": "tera",
      "symbol": "T",
      "exponent": 12
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:peta;2",
      "@type": "DecimalPrefix",
      "name": "peta",
      "symbol": "P",
      "exponent": 15
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:exa;2",
      "@type": "DecimalPrefix",
      "name": "exa",
      "symbol": "E",
      "exponent": 18
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:zetta;2",
      "@type": "DecimalPrefix",
      "name": "zetta",
      "symbol": "Z",
      "exponent": 21
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:yotta;2",
      "@type": "DecimalPrefix",
      "name": "yotta",
      "symbol": "Y",
      "exponent": 24
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:kibi;2",
      "@type": "BinaryPrefix",
      "name": "kibi",
      "symbol": "Ki",
      "exponent": 10
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:mebi;2",
      "@type": "BinaryPrefix",
      "name": "mebi",
      "symbol": "Mi",
      "exponent": 20
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:gibi;2",
      "@type": "BinaryPrefix",
      "name": "gibi",
      "symbol": "Gi",
      "exponent": 30
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:tebi;2",
      "@type": "BinaryPrefix",
      "name": "tebi",
      "symbol": "Ti",
      "exponent": 40
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:pebi;2",
      "@type": "BinaryPrefix",
      "name": "pebi",
      "symbol": "Pi",
      "exponent": 50
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:exbi;2",
      "@type": "BinaryPrefix",
      "name": "exbi",
      "symbol": "Ei",
      "exponent": 60
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:zebi;2",
      "@type": "BinaryPrefix",
      "name": "zebi",
      "symbol": "Zi",
      "exponent": 70
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unitprefix:yobi;2",
      "@type": "BinaryPrefix",
      "name": "yobi",
      "symbol": "Yi",
      "exponent": 80
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:metrePerSecondSquared;2",
      "@type": [
        "AccelerationUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "metre per second squared",
      "symbol": "m/s²",
      "baseUnit": "metrePerSecondSquared",
      "topUnit": "metrePerSecond",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:centimetrePerSecondSquared;2",
      "@type": [
        "AccelerationUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "centimetre per second squared",
      "symbol": "cm/s²",
      "baseUnit": "metrePerSecondSquared",
      "prefix": "centi",
      "topUnit": "centimetrePerSecond",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:gForce;2",
      "@type": [
        "AccelerationUnit"
      ],
      "displayName": "g-force",
      "symbol": "g"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:radian;2",
      "@type": [
        "AngleUnit"
      ],
      "displayName": "radian",
      "symbol": "rad"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:degreeOfArc;2",
      "@type": [
        "AngleUnit"
      ],
      "displayName": "degree of arc",
      "symbol": "°"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:minuteOfArc;2",
      "@type": [
        "AngleUnit"
      ],
      "displayName": "minute of arc",
      "symbol": "'"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:secondOfArc;2",
      "@type": [
        "AngleUnit"
      ],
      "displayName": "second of arc",
      "symbol": "\""
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:turn;2",
      "@type": [
        "AngleUnit"
      ],
      "displayName": "turn",
      "symbol": "turn"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:radianPerSecondSquared;2",
      "@type": [
        "AngularAccelerationUnit",
        "RatioUnit"
      ],
      "displayName": "radian per second squared",
      "symbol": "rad/s²",
      "topUnit": "radianPerSecond",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:radianPerSecond;2",
      "@type": [
        "AngularVelocityUnit",
        "RatioUnit"
      ],
      "displayName": "radian per second",
      "symbol": "rad/s",
      "topUnit": "radian",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:degreePerSecond;2",
      "@type": [
        "AngularVelocityUnit",
        "RatioUnit"
      ],
      "displayName": "degree per second",
      "symbol": "°/s",
      "topUnit": "degreeOfArc",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:revolutionPerSecond;2",
      "@type": [
        "AngularVelocityUnit",
        "RatioUnit"
      ],
      "displayName": "revolution per second",
      "symbol": "rps",
      "topUnit": "turn",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:revolutionPerMinute;2",
      "@type": [
        "AngularVelocityUnit",
        "RatioUnit"
      ],
      "displayName": "revolution per minute",
      "symbol": "rpm",
      "topUnit": "turn",
      "bottomUnit": "minute"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:squareMetre;2",
      "@type": [
        "AreaUnit"
      ],
      "displayName": "square metre",
      "symbol": "m²"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:squareCentimetre;2",
      "@type": [
        "AreaUnit"
      ],
      "displayName": "square centimetre",
      "symbol": "cm²"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:squareMillimetre;2",
      "@type": [
        "AreaUnit"
      ],
      "displayName": "square millimetre",
      "symbol": "mm²"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:squareKilometre;2",
      "@type": [
        "AreaUnit"
      ],
      "displayName": "square kilometre",
      "symbol": "km²"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:hectare;2",
      "@type": [
        "AreaUnit"
      ],
      "displayName": "hectare",
      "symbol": "ha"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:squareFoot;2",
      "@type": [
        "AreaUnit"
      ],
      "displayName": "square foot",
      "symbol": "ft²"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:squareInch;2",
      "@type": [
        "AreaUnit"
      ],
      "displayName": "square inch",
      "symbol": "in²"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:acre;2",
      "@type": [
        "AreaUnit"
      ],
      "displayName": "acre",
      "symbol": "ac"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:farad;2",
      "@type": [
        "CapacitanceUnit",
        "DecimalUnit"
      ],
      "displayName": "farad",
      "symbol": "F",
      "baseUnit": "farad"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:millifarad;2",
      "@type": [
        "CapacitanceUnit",
        "DecimalUnit"
      ],
      "displayName": "millifarad",
      "symbol": "mF",
      "baseUnit": "farad",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:microfarad;2",
      "@type": [
        "CapacitanceUnit",
        "DecimalUnit"
      ],
      "displayName": "microfarad",
      "symbol": "µF",
      "baseUnit": "farad",
      "prefix": "micro"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:nanofarad;2",
      "@type": [
        "CapacitanceUnit",
        "DecimalUnit"
      ],
      "displayName": "nanofarad",
      "symbol": "nF",
      "baseUnit": "farad",
      "prefix": "nano"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:picofarad;2",
      "@type": [
        "CapacitanceUnit",
        "DecimalUnit"
      ],
      "displayName": "picofarad",
      "symbol": "pF",
      "baseUnit": "farad",
      "prefix": "pico"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:coulomb;2",
      "@type": [
        "ChargeUnit",
        "DecimalUnit"
      ],
      "displayName": "coulomb",
      "symbol": "C",
      "baseUnit": "coulomb"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:ampere;2",
      "@type": [
        "CurrentUnit",
        "DecimalUnit"
      ],
      "displayName": "ampere",
      "symbol": "A",
      "baseUnit": "ampere"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:microampere;2",
      "@type": [
        "CurrentUnit",
        "DecimalUnit"
      ],
      "displayName": "microampere",
      "symbol": "µA",
      "baseUnit": "ampere",
      "prefix": "micro"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:milliampere;2",
      "@type": [
        "CurrentUnit",
        "DecimalUnit"
      ],
      "displayName": "milliampere",
      "symbol": "mA",
      "baseUnit": "ampere",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:bitPerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "bit per second",
      "symbol": "bps",
      "baseUnit": "bitPerSecond",
      "topUnit": "bit",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kibibitPerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "kibibit per second",
      "symbol": "Kibps",
      "baseUnit": "bitPerSecond",
      "prefix": "kibi",
      "topUnit": "kibibit",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:mebibitPerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "mebibit per second",
      "symbol": "Mibps",
      "baseUnit": "bitPerSecond",
      "prefix": "mebi",
      "topUnit": "mebibit",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:gibibitPerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "gibibit per second",
      "symbol": "Gibps",
      "baseUnit": "bitPerSecond",
      "prefix": "gibi",
      "topUnit": "gibibit",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:tebibitPerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "tebibit per second",
      "symbol": "Tibps",
      "baseUnit": "bitPerSecond",
      "prefix": "tebi",
      "topUnit": "tebibit",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:exbibitPerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "exbibit per second",
      "symbol": "Eibps",
      "baseUnit": "bitPerSecond",
      "prefix": "exbi",
      "topUnit": "exbibit",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:zebibitPerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "zebibit per second",
      "symbol": "Zibps",
      "baseUnit": "bitPerSecond",
      "prefix": "zebi",
      "topUnit": "zebibit",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:yobibitPerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "yobibit per second",
      "symbol": "Yibps",
      "baseUnit": "bitPerSecond",
      "prefix": "yobi",
      "topUnit": "yobibit",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:bytePerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "byte per second",
      "symbol": "Bps",
      "baseUnit": "bytePerSecond",
      "topUnit": "byte",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kibibytePerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "kibibyte per second",
      "symbol": "KiBps",
      "baseUnit": "bytePerSecond",
      "prefix": "kibi",
      "topUnit": "kibibyte",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:mebibytePerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "mebibyte per second",
      "symbol": "MiBps",
      "baseUnit": "bytePerSecond",
      "prefix": "mebi",
      "topUnit": "mebibyte",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:gibibytePerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "gibibyte per second",
      "symbol": "GiBps",
      "baseUnit": "bytePerSecond",
      "prefix": "gibi",
      "topUnit": "gibibyte",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:tebibytePerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "tebibyte per second",
      "symbol": "TiBps",
      "baseUnit": "bytePerSecond",
      "prefix": "tebi",
      "topUnit": "tebibyte",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:exbibytePerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "exbibyte per second",
      "symbol": "EiBps",
      "baseUnit": "bytePerSecond",
      "prefix": "exbi",
      "topUnit": "exbibyte",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:zebibytePerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "zebibyte per second",
      "symbol": "ZiBps",
      "baseUnit": "bytePerSecond",
      "prefix": "zebi",
      "topUnit": "zebibyte",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:yobibytePerSecond;2",
      "@type": [
        "DataRateUnit",
        "BinaryUnit",
        "RatioUnit"
      ],
      "displayName": "yobibyte per second",
      "symbol": "YiBps",
      "baseUnit": "bytePerSecond",
      "prefix": "yobi",
      "topUnit": "yobibyte",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:bit;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "bit",
      "symbol": "bit",
      "baseUnit": "bit"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kibibit;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "kibibit",
      "symbol": "Kibit",
      "baseUnit": "bit",
      "prefix": "kibi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:mebibit;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "mebibit",
      "symbol": "Mibit",
      "baseUnit": "bit",
      "prefix": "mebi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:gibibit;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "gibibit",
      "symbol": "Gibit",
      "baseUnit": "bit",
      "prefix": "gibi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:tebibit;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "tebibit",
      "symbol": "Tibit",
      "baseUnit": "bit",
      "prefix": "tebi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:exbibit;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "exbibit",
      "symbol": "Eibit",
      "baseUnit": "bit",
      "prefix": "exbi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:zebibit;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "zebibit",
      "symbol": "Zibit",
      "baseUnit": "bit",
      "prefix": "zebi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:yobibit;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "yobibit",
      "symbol": "Yibit",
      "baseUnit": "bit",
      "prefix": "yobi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:byte;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "byte",
      "symbol": "B",
      "baseUnit": "byte"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kibibyte;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "kibibyte",
      "symbol": "KiB",
      "baseUnit": "byte",
      "prefix": "kibi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:mebibyte;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "mebibyte",
      "symbol": "MiB",
      "baseUnit": "byte",
      "prefix": "mebi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:gibibyte;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "gibibyte",
      "symbol": "GiB",
      "baseUnit": "byte",
      "prefix": "gibi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:tebibyte;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "tebibyte",
      "symbol": "TiB",
      "baseUnit": "byte",
      "prefix": "tebi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:exbibyte;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "exbibyte",
      "symbol": "EiB",
      "baseUnit": "byte",
      "prefix": "exbi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:zebibyte;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "zebibyte",
      "symbol": "ZiB",
      "baseUnit": "byte",
      "prefix": "zebi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:yobibyte;2",
      "@type": [
        "DataSizeUnit",
        "BinaryUnit"
      ],
      "displayName": "yobibyte",
      "symbol": "YiB",
      "baseUnit": "byte",
      "prefix": "yobi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kilogramPerCubicMetre;2",
      "@type": [
        "DensityUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "kilogram per cubic metre",
      "symbol": "kg/m³",
      "baseUnit": "gramPerCubicMetre",
      "prefix": "kilo",
      "topUnit": "kilogram",
      "bottomUnit": "cubicMetre"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:gramPerCubicMetre;2",
      "@type": [
        "DensityUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "gram per cubic metre",
      "symbol": "g/m³",
      "baseUnit": "gramPerCubicMetre",
      "topUnit": "gram",
      "bottomUnit": "cubicMetre"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:joule;2",
      "@type": [
        "EnergyUnit",
        "DecimalUnit"
      ],
      "displayName": "joule",
      "symbol": "J",
      "baseUnit": "joule"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kilojoule;2",
      "@type": [
        "EnergyUnit",
        "DecimalUnit"
      ],
      "displayName": "kilojoule",
      "symbol": "kJ",
      "baseUnit": "joule",
      "prefix": "kilo"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:megajoule;2",
      "@type": [
        "EnergyUnit",
        "DecimalUnit"
      ],
      "displayName": "megajoule",
      "symbol": "MJ",
      "baseUnit": "joule",
      "prefix": "mega"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:gigajoule;2",
      "@type": [
        "EnergyUnit",
        "DecimalUnit"
      ],
      "displayName": "gigajoule",
      "symbol": "GJ",
      "baseUnit": "joule",
      "prefix": "giga"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:electronvolt;2",
      "@type": [
        "EnergyUnit",
        "DecimalUnit"
      ],
      "displayName": "electronvolt",
      "symbol": "eV",
      "baseUnit": "electronvolt"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:megaelectronvolt;2",
      "@type": [
        "EnergyUnit",
        "DecimalUnit"
      ],
      "displayName": "megaelectronvolt",
      "symbol": "MeV",
      "baseUnit": "electronvolt",
      "prefix": "mega"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kilowattHour;2",
      "@type": [
        "EnergyUnit"
      ],
      "displayName": "kilowat-hour",
      "symbol": "kWh"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:newton;2",
      "@type": [
        "ForceUnit",
        "DecimalUnit"
      ],
      "displayName": "newton",
      "symbol": "N",
      "baseUnit": "newton"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:pound;2",
      "@type": [
        "ForceUnit"
      ],
      "displayName": "pound",
      "symbol": "lb"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:ounce;2",
      "@type": [
        "ForceUnit"
      ],
      "displayName": "ounce",
      "symbol": "oz"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:ton;2",
      "@type": [
        "ForceUnit"
      ],
      "displayName": "ton",
      "symbol": "T"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:hertz;2",
      "@type": [
        "FrequencyUnit",
        "DecimalUnit"
      ],
      "displayName": "hertz",
      "symbol": "Hz",
      "baseUnit": "hertz"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kilohertz;2",
      "@type": [
        "FrequencyUnit",
        "DecimalUnit"
      ],
      "displayName": "kilohertz",
      "symbol": "kHz",
      "baseUnit": "hertz",
      "prefix": "kilo"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:megahertz;2",
      "@type": [
        "FrequencyUnit",
        "DecimalUnit"
      ],
      "displayName": "megahertz",
      "symbol": "MHz",
      "baseUnit": "hertz",
      "prefix": "mega"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:gigahertz;2",
      "@type": [
        "FrequencyUnit",
        "DecimalUnit"
      ],
      "displayName": "gigahertz",
      "symbol": "GHz",
      "baseUnit": "hertz",
      "prefix": "giga"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:lux;2",
      "@type": [
        "IlluminanceUnit",
        "DecimalUnit"
      ],
      "displayName": "lux",
      "symbol": "lx",
      "baseUnit": "lux"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:footcandle;2",
      "@type": [
        "IlluminanceUnit"
      ],
      "displayName": "footcandle",
      "symbol": "fc"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:henry;2",
      "@type": [
        "InductanceUnit",
        "DecimalUnit"
      ],
      "displayName": "henry",
      "symbol": "H",
      "baseUnit": "henry"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:millihenry;2",
      "@type": [
        "InductanceUnit",
        "DecimalUnit"
      ],
      "displayName": "millihenry",
      "symbol": "mH",
      "baseUnit": "henry",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:microhenry;2",
      "@type": [
        "InductanceUnit",
        "DecimalUnit"
      ],
      "displayName": "microhenry",
      "symbol": "µH",
      "baseUnit": "henry",
      "prefix": "micro"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:metre;2",
      "@type": [
        "LengthUnit",
        "DecimalUnit"
      ],
      "displayName": "metre",
      "symbol": "m",
      "baseUnit": "metre"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:centimetre;2",
      "@type": [
        "LengthUnit",
        "DecimalUnit"
      ],
      "displayName": "centimetre",
      "symbol": "cm",
      "baseUnit": "metre",
      "prefix": "centi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:millimetre;2",
      "@type": [
        "LengthUnit",
        "DecimalUnit"
      ],
      "displayName": "millimetre",
      "symbol": "mm",
      "baseUnit": "metre",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:micrometre;2",
      "@type": [
        "LengthUnit",
        "DecimalUnit"
      ],
      "displayName": "micrometre",
      "symbol": "µm",
      "baseUnit": "metre",
      "prefix": "micro"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:nanometre;2",
      "@type": [
        "LengthUnit",
        "DecimalUnit"
      ],
      "displayName": "nanometre",
      "symbol": "nm",
      "baseUnit": "metre",
      "prefix": "nano"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kilometre;2",
      "@type": [
        "LengthUnit",
        "DecimalUnit"
      ],
      "displayName": "kilometre",
      "symbol": "km",
      "baseUnit": "metre",
      "prefix": "kilo"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:foot;2",
      "@type": [
        "LengthUnit"
      ],
      "displayName": "foot",
      "symbol": "ft"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:inch;2",
      "@type": [
        "LengthUnit"
      ],
      "displayName": "inch",
      "symbol": "in"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:mile;2",
      "@type": [
        "LengthUnit"
      ],
      "displayName": "mile",
      "symbol": "mi"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:nauticalMile;2",
      "@type": [
        "LengthUnit"
      ],
      "displayName": "nautical mile",
      "symbol": "M"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:astronomicalUnit;2",
      "@type": [
        "LengthUnit"
      ],
      "displayName": "astronomical unit",
      "symbol": "AU"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:candelaPerSquareMetre;2",
      "@type": [
        "LuminanceUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "candela per square metre",
      "symbol": "cd/m²",
      "baseUnit": "candelaPerSquareMetre",
      "topUnit": "candela",
      "bottomUnit": "squareMetre"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:lumen;2",
      "@type": [
        "LuminousFluxUnit",
        "DecimalUnit"
      ],
      "displayName": "lumen",
      "symbol": "lm",
      "baseUnit": "lumen"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:candela;2",
      "@type": [
        "LuminousIntensityUnit",
        "DecimalUnit"
      ],
      "displayName": "candela",
      "symbol": "cd",
      "baseUnit": "candela"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:weber;2",
      "@type": [
        "MagneticFluxUnit",
        "DecimalUnit"
      ],
      "displayName": "weber",
      "symbol": "Wb",
      "baseUnit": "weber"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:maxwell;2",
      "@type": [
        "MagneticFluxUnit"
      ],
      "displayName": "maxwell",
      "symbol": "Mx"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:tesla;2",
      "@type": [
        "MagneticInductionUnit",
        "DecimalUnit"
      ],
      "displayName": "tesla",
      "symbol": "T",
      "baseUnit": "tesla"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kilogram;2",
      "@type": [
        "MassUnit",
        "DecimalUnit"
      ],
      "displayName": "kilogram",
      "symbol": "kg",
      "baseUnit": "gram",
      "prefix": "kilo"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:gram;2",
      "@type": [
        "MassUnit",
        "DecimalUnit"
      ],
      "displayName": "gram",
      "symbol": "g",
      "baseUnit": "gram"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:milligram;2",
      "@type": [
        "MassUnit",
        "DecimalUnit"
      ],
      "displayName": "milligram",
      "symbol": "mg",
      "baseUnit": "gram",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:microgram;2",
      "@type": [
        "MassUnit",
        "DecimalUnit"
      ],
      "displayName": "microgram",
      "symbol": "µg",
      "baseUnit": "gram",
      "prefix": "micro"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:tonne;2",
      "@type": [
        "MassUnit"
      ],
      "displayName": "tonne",
      "symbol": "t"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:slug;2",
      "@type": [
        "MassUnit"
      ],
      "displayName": "slug",
      "symbol": "slug"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:gramPerSecond;2",
      "@type": [
        "MassFlowRateUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "gram per second",
      "symbol": "g/s",
      "baseUnit": "gramPerSecond",
      "topUnit": "gram",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kilogramPerSecond;2",
      "@type": [
        "MassFlowRateUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "kilogram per second",
      "symbol": "kg/s",
      "baseUnit": "gramPerSecond",
      "prefix": "kilo",
      "topUnit": "kilogram",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:gramPerHour;2",
      "@type": [
        "MassFlowRateUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "gram per hour",
      "symbol": "g/h",
      "baseUnit": "gramPerHour",
      "topUnit": "gram",
      "bottomUnit": "hour"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kilogramPerHour;2",
      "@type": [
        "MassFlowRateUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "kilogram per hour",
      "symbol": "kg/h",
      "baseUnit": "gramPerHour",
      "prefix": "kilo",
      "topUnit": "kilogram",
      "bottomUnit": "hour"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:watt;2",
      "@type": [
        "PowerUnit",
        "DecimalUnit"
      ],
      "displayName": "watt",
      "symbol": "W",
      "baseUnit": "watt"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:microwatt;2",
      "@type": [
        "PowerUnit",
        "DecimalUnit"
      ],
      "displayName": "microwatt",
      "symbol": "µW",
      "baseUnit": "watt",
      "prefix": "micro"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:milliwatt;2",
      "@type": [
        "PowerUnit",
        "DecimalUnit"
      ],
      "displayName": "milliwatt",
      "symbol": "mW",
      "baseUnit": "watt",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kilowatt;2",
      "@type": [
        "PowerUnit",
        "DecimalUnit"
      ],
      "displayName": "kilowatt",
      "symbol": "kW",
      "baseUnit": "watt",
      "prefix": "kilo"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:megawatt;2",
      "@type": [
        "PowerUnit",
        "DecimalUnit"
      ],
      "displayName": "megawatt",
      "symbol": "MW",
      "baseUnit": "watt",
      "prefix": "mega"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:gigawatt;2",
      "@type": [
        "PowerUnit",
        "DecimalUnit"
      ],
      "displayName": "gigawatt",
      "symbol": "GW",
      "baseUnit": "watt",
      "prefix": "giga"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:horsepower;2",
      "@type": [
        "PowerUnit"
      ],
      "displayName": "horsepower",
      "symbol": "hp"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kilowattHourPerYear;2",
      "@type": [
        "PowerUnit",
        "RatioUnit"
      ],
      "displayName": "kilowatt-hour per year",
      "symbol": "kWh/yr",
      "topUnit": "kilowattHour",
      "bottomUnit": "year"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:pascal;2",
      "@type": [
        "PressureUnit",
        "DecimalUnit"
      ],
      "displayName": "pascal",
      "symbol": "Pa",
      "baseUnit": "pascal"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kilopascal;2",
      "@type": [
        "PressureUnit",
        "DecimalUnit"
      ],
      "displayName": "kilopascal",
      "symbol": "kPa",
      "baseUnit": "pascal",
      "prefix": "kilo"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:bar;2",
      "@type": [
        "PressureUnit",
        "DecimalUnit"
      ],
      "displayName": "bar",
      "symbol": "bar",
      "baseUnit": "bar"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:millibar;2",
      "@type": [
        "PressureUnit",
        "DecimalUnit"
      ],
      "displayName": "millibar",
      "symbol": "mbar",
      "baseUnit": "bar",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:millimetresOfMercury;2",
      "@type": [
        "PressureUnit"
      ],
      "displayName": "millimetres of mercury",
      "symbol": "mmHg"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:poundPerSquareInch;2",
      "@type": [
        "PressureUnit",
        "RatioUnit"
      ],
      "displayName": "pound per square inch",
      "symbol": "psi",
      "topUnit": "pound",
      "bottomUnit": "squareInch"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:inchesOfMercury;2",
      "@type": [
        "PressureUnit"
      ],
      "displayName": "inches of mercury",
      "symbol": "inHg"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:inchesOfWater;2",
      "@type": [
        "PressureUnit"
      ],
      "displayName": "inches of water",
      "symbol": "inH2O"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:ohm;2",
      "@type": [
        "ResistanceUnit",
        "DecimalUnit"
      ],
      "displayName": "ohm",
      "symbol": "Ω",
      "baseUnit": "ohm"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:milliohm;2",
      "@type": [
        "ResistanceUnit",
        "DecimalUnit"
      ],
      "displayName": "milliohm",
      "symbol": "mΩ",
      "baseUnit": "ohm",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kiloohm;2",
      "@type": [
        "ResistanceUnit",
        "DecimalUnit"
      ],
      "displayName": "kiloohm",
      "symbol": "kΩ",
      "baseUnit": "ohm",
      "prefix": "kilo"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:megaohm;2",
      "@type": [
        "ResistanceUnit",
        "DecimalUnit"
      ],
      "displayName": "megaohm",
      "symbol": "MΩ",
      "baseUnit": "ohm",
      "prefix": "mega"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:decibel;2",
      "@type": [
        "SoundPressureUnit",
        "DecimalUnit"
      ],
      "displayName": "decibel",
      "symbol": "dB",
      "baseUnit": "bel",
      "prefix": "deci"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:bel;2",
      "@type": [
        "SoundPressureUnit",
        "DecimalUnit"
      ],
      "displayName": "bel",
      "symbol": "B",
      "baseUnit": "bel"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kelvin;2",
      "@type": [
        "TemperatureUnit"
      ],
      "displayName": "kelvin",
      "symbol": "K"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:degreeCelsius;2",
      "@type": [
        "TemperatureUnit"
      ],
      "displayName": "degree celsius",
      "symbol": "°C"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:degreeFahrenheit;2",
      "@type": [
        "TemperatureUnit"
      ],
      "displayName": "degree fahrenheit",
      "symbol": "°F"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:second;2",
      "@type": [
        "TimeUnit",
        "DecimalUnit"
      ],
      "displayName": "second",
      "symbol": "s",
      "baseUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:millisecond;2",
      "@type": [
        "TimeUnit",
        "DecimalUnit"
      ],
      "displayName": "millisecond",
      "symbol": "ms",
      "baseUnit": "second",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:microsecond;2",
      "@type": [
        "TimeUnit",
        "DecimalUnit"
      ],
      "displayName": "microsecond",
      "symbol": "µs",
      "baseUnit": "second",
      "prefix": "micro"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:nanosecond;2",
      "@type": [
        "TimeUnit",
        "DecimalUnit"
      ],
      "displayName": "nanosecond",
      "symbol": "ns",
      "baseUnit": "second",
      "prefix": "nano"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:minute;2",
      "@type": [
        "TimeUnit"
      ],
      "displayName": "minute",
      "symbol": "m"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:hour;2",
      "@type": [
        "TimeUnit"
      ],
      "displayName": "hour",
      "symbol": "h"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:day;2",
      "@type": [
        "TimeUnit"
      ],
      "displayName": "day",
      "symbol": "d"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:year;2",
      "@type": [
        "TimeUnit"
      ],
      "displayName": "year",
      "symbol": "yr"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:newtonMetre;2",
      "@type": [
        "TorqueUnit",
        "DecimalUnit"
      ],
      "displayName": "newton-metre",
      "symbol": "N m",
      "baseUnit": "newtonMetre"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:unity;2",
      "@type": [
        "Unitless"
      ],
      "displayName": "",
      "symbol": ""
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:percent;2",
      "@type": [
        "Unitless"
      ],
      "displayName": "percent",
      "symbol": "%"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:metrePerSecond;2",
      "@type": [
        "VelocityUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "metre per second",
      "symbol": "m/s",
      "baseUnit": "metrePerSecond",
      "topUnit": "metre",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:centimetrePerSecond;2",
      "@type": [
        "VelocityUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "centimetre per second",
      "symbol": "cm/s",
      "baseUnit": "metrePerSecond",
      "prefix": "centi",
      "topUnit": "centimetre",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kilometrePerSecond;2",
      "@type": [
        "VelocityUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "kilometre per second",
      "symbol": "km/s",
      "baseUnit": "metrePerSecond",
      "prefix": "kilo",
      "topUnit": "kilometre",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:metrePerHour;2",
      "@type": [
        "VelocityUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "metre per hour",
      "symbol": "m/h",
      "baseUnit": "metrePerHour",
      "topUnit": "metre",
      "bottomUnit": "hour"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kilometrePerHour;2",
      "@type": [
        "VelocityUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "kilometre per hour",
      "symbol": "km/h",
      "baseUnit": "metrePerHour",
      "prefix": "kilo",
      "topUnit": "kilometre",
      "bottomUnit": "hour"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:milePerHour;2",
      "@type": [
        "VelocityUnit",
        "RatioUnit"
      ],
      "displayName": "mile per hour",
      "symbol": "mph",
      "topUnit": "mile",
      "bottomUnit": "hour"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:milePerSecond;2",
      "@type": [
        "VelocityUnit",
        "RatioUnit"
      ],
      "displayName": "mile per second",
      "symbol": "mi/s",
      "topUnit": "mile",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:knot;2",
      "@type": [
        "VelocityUnit"
      ],
      "displayName": "knot",
      "symbol": "kn"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:volt;2",
      "@type": [
        "VoltageUnit",
        "DecimalUnit"
      ],
      "displayName": "volt",
      "symbol": "V",
      "baseUnit": "volt"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:millivolt;2",
      "@type": [
        "VoltageUnit",
        "DecimalUnit"
      ],
      "displayName": "millivolt",
      "symbol": "mV",
      "baseUnit": "volt",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:microvolt;2",
      "@type": [
        "VoltageUnit",
        "DecimalUnit"
      ],
      "displayName": "microvolt",
      "symbol": "µV",
      "baseUnit": "volt",
      "prefix": "micro"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:kilovolt;2",
      "@type": [
        "VoltageUnit",
        "DecimalUnit"
      ],
      "displayName": "kilovolt",
      "symbol": "kV",
      "baseUnit": "volt",
      "prefix": "kilo"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:megavolt;2",
      "@type": [
        "VoltageUnit",
        "DecimalUnit"
      ],
      "displayName": "megavolt",
      "symbol": "MV",
      "baseUnit": "volt",
      "prefix": "mega"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:cubicMetre;2",
      "@type": [
        "VolumeUnit"
      ],
      "displayName": "cubic metre",
      "symbol": "m³"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:cubicCentimetre;2",
      "@type": [
        "VolumeUnit"
      ],
      "displayName": "cubic centimetre",
      "symbol": "cm³"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:litre;2",
      "@type": [
        "VolumeUnit",
        "DecimalUnit"
      ],
      "displayName": "litre",
      "symbol": "l",
      "baseUnit": "litre"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:millilitre;2",
      "@type": [
        "VolumeUnit",
        "DecimalUnit"
      ],
      "displayName": "millilitre",
      "symbol": "ml",
      "baseUnit": "litre",
      "prefix": "milli"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:cubicFoot;2",
      "@type": [
        "VolumeUnit"
      ],
      "displayName": "cubic foot",
      "symbol": "ft³"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:cubicInch;2",
      "@type": [
        "VolumeUnit"
      ],
      "displayName": "cubic inch",
      "symbol": "in³"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:fluidOunce;2",
      "@type": [
        "VolumeUnit"
      ],
      "displayName": "fluid ounce",
      "symbol": "fl oz"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:gallon;2",
      "@type": [
        "VolumeUnit"
      ],
      "displayName": "gallon",
      "symbol": "gal"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:litrePerSecond;2",
      "@type": [
        "VolumeFlowRateUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "litre per second",
      "symbol": "l/s",
      "baseUnit": "litrePerSecond",
      "topUnit": "litre",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:millilitrePerSecond;2",
      "@type": [
        "VolumeFlowRateUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "millilitre per second",
      "symbol": "ml/s",
      "baseUnit": "litrePerSecond",
      "prefix": "milli",
      "topUnit": "millilitre",
      "bottomUnit": "second"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:litrePerHour;2",
      "@type": [
        "VolumeFlowRateUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "litre per hour",
      "symbol": "l/h",
      "baseUnit": "litrePerHour",
      "topUnit": "litre",
      "bottomUnit": "hour"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:unit:millilitrePerHour;2",
      "@type": [
        "VolumeFlowRateUnit",
        "DecimalUnit",
        "RatioUnit"
      ],
      "displayName": "millilitre per hour",
      "symbol": "ml/h",
      "baseUnit": "litrePerHour",
      "prefix": "milli",
      "topUnit": "millilitre",
      "bottomUnit": "hour"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:schema:geospatialPointType;2",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:standard:schema:geospatial:enumValue:point;2",
          "@type": "EnumValue",
          "name": "point",
          "enumValue": "Point"
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:schema:geospatialMultiPointType;2",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:standard:schema:geospatial:enumValue:multiPoint;2",
          "@type": "EnumValue",
          "name": "multiPoint",
          "enumValue": "MultiPoint"
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:schema:geospatialLineStringType;2",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:standard:schema:geospatial:enumValue:lineString;2",
          "@type": "EnumValue",
          "name": "lineString",
          "enumValue": "LineString"
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:schema:geospatialMultiLineStringType;2",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:standard:schema:geospatial:enumValue:multiLineString;2",
          "@type": "EnumValue",
          "name": "multiLineString",
          "enumValue": "MultiLineString"
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:schema:geospatialPolygonType;2",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:standard:schema:geospatial:enumValue:polygon;2",
          "@type": "EnumValue",
          "name": "polygon",
          "enumValue": "Polygon"
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:schema:geospatialMultiPolygonType;2",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:standard:schema:geospatial:enumValue:multiPolygon;2",
          "@type": "EnumValue",
          "name": "multiPolygon",
          "enumValue": "MultiPolygon"
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:schema:geospatial:position;2",
      "@type": "Array",
      "elementSchema": "double"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:schema:geospatial:lineStringCoordinateArray;2",
      "@type": "Array",
      "elementSchema": "dtmi:standard:schema:geospatial:position;2"
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:schema:geospatial:polygonCoordinateArray;2",
      "@type": "Array",
      "elementSchema": {
        "@id": "dtmi:standard:schema:geospatial:linearRingCoordinateArray;2",
        "@type": "Array",
        "elementSchema": "dtmi:standard:schema:geospatial:position;2"
      }
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:schema:geospatial:point;2",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:standard:schema:geospatial:point:type;2",
          "@type": "Field",
          "name": "type",
          "schema": "dtmi:standard:schema:geospatialPointType;2"
        },
        {
          "@id": "dtmi:standard:schema:geospatial:point:coordinates;2",
          "@type": "Field",
          "name": "coordinates",
          "schema": "dtmi:standard:schema:geospatial:position;2"
        }
      ],
      "description": {
        "en-US": "GeoJSON Point",
        "es-ES": "GeoJSON Point"
      }
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:schema:geospatial:multiPoint;2",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:standard:schema:geospatial:multiPoint:type;2",
          "@type": "Field",
          "name": "type",
          "schema": "dtmi:standard:schema:geospatialMultiPointType;2"
        },
        {
          "@id": "dtmi:standard:schema:geospatial:multiPoint:coordinates;2",
          "@type": "Field",
          "name": "coordinates",
          "schema": {
            "@id": "dtmi:standard:schema:geospatial:positionArray;2",
            "@type": "Array",
            "elementSchema": "dtmi:standard:schema:geospatial:position;2"
          }
        }
      ],
      "description": {
        "en-US": "GeoJSON MultiPoint",
        "es-ES": "GeoJSON MultiPoint"
      }
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:schema:geospatial:lineString;2",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:standard:schema:geospatial:lineString:type;2",
          "@type": "Field",
          "name": "type",
          "schema": "dtmi:standard:schema:geospatialLineStringType;2"
        },
        {
          "@id": "dtmi:standard:schema:geospatial:lineString:coordinates;2",
          "@type": "Field",
          "name": "coordinates",
          "schema": "dtmi:standard:schema:geospatial:lineStringCoordinateArray;2"
        }
      ],
      "description": {
        "en-US": "GeoJSON LineString",
        "es-ES": "GeoJSON LineString"
      }
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:schema:geospatial:multiLineString;2",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:standard:schema:geospatial:multiLineString:type;2",
          "@type": "Field",
          "name": "type",
          "schema": "dtmi:standard:schema:geospatialMultiLineStringType;2"
        },
        {
          "@id": "dtmi:standard:schema:geospatial:multiLineString:coordinates;2",
          "@type": "Field",
          "name": "coordinates",
          "schema": {
            "@id": "dtmi:standard:schema:geospatial:lineStringCoordinateArrayArray;2",
            "@type": "Array",
            "elementSchema": "dtmi:standard:schema:geospatial:lineStringCoordinateArray;2"
          }
        }
      ],
      "description": {
        "en-US": "GeoJSON MultiLineString",
        "es-ES": "GeoJSON MultiLineString"
      }
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:schema:geospatial:polygon;2",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:standard:schema:geospatial:polygon:type;2",
          "@type": "Field",
          "name": "type",
          "schema": "dtmi:standard:schema:geospatialPolygonType;2"
        },
        {
          "@id": "dtmi:standard:schema:geospatial:polygon:coordinates;2",
          "@type": "Field",
          "name": "coordinates",
          "schema": "dtmi:standard:schema:geospatial:polygonCoordinateArray;2"
        }
      ],
      "description": {
        "en-US": "GeoJSON Polygon",
        "es-ES": "GeoJSON Polygon"
      }
    },
    {
      "@context": "dtmi:dtdl:context;2",
      "@id": "dtmi:standard:schema:geospatial:multiPolygon;2",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:standard:schema:geospatial:multiPolygon:type;2",
          "@type": "Field",
          "name": "type",
          "schema": "dtmi:standard:schema:geospatialMultiPolygonType;2"
        },
        {
          "@id": "dtmi:standard:schema:geospatial:multiPolygon:coordinates;2",
          "@type": "Field",
          "name": "coordinates",
          "schema": {
            "@id": "dtmi:standard:schema:geospatial:polygonCoordinateArrayArray;2",
            "@type": "Array",
            "elementSchema": "dtmi:standard:schema:geospatial:polygonCoordinateArray;2"
          }
        }
      ],
      "description": {
        "en-US": "GeoJSON MultiPolygon",
        "es-ES": "GeoJSON MultiPolygon"
      }
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:schema:geospatialPointType;3",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:standard:schema:geospatial:enumValue:point;3",
          "@type": "EnumValue",
          "name": "point",
          "enumValue": "Point"
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:schema:geospatialMultiPointType;3",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:standard:schema:geospatial:enumValue:multiPoint;3",
          "@type": "EnumValue",
          "name": "multiPoint",
          "enumValue": "MultiPoint"
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:schema:geospatialLineStringType;3",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:standard:schema:geospatial:enumValue:lineString;3",
          "@type": "EnumValue",
          "name": "lineString",
          "enumValue": "LineString"
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:schema:geospatialMultiLineStringType;3",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:standard:schema:geospatial:enumValue:multiLineString;3",
          "@type": "EnumValue",
          "name": "multiLineString",
          "enumValue": "MultiLineString"
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:schema:geospatialPolygonType;3",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:standard:schema:geospatial:enumValue:polygon;3",
          "@type": "EnumValue",
          "name": "polygon",
          "enumValue": "Polygon"
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:schema:geospatialMultiPolygonType;3",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:standard:schema:geospatial:enumValue:multiPolygon;3",
          "@type": "EnumValue",
          "name": "multiPolygon",
          "enumValue": "MultiPolygon"
        }
      ]
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:schema:geospatial:position;3",
      "@type": "Array",
      "elementSchema": "double"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:schema:geospatial:lineStringCoordinateArray;3",
      "@type": "Array",
      "elementSchema": "dtmi:standard:schema:geospatial:position;3"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:schema:geospatial:polygonCoordinateArray;3",
      "@type": "Array",
      "elementSchema": {
        "@id": "dtmi:standard:schema:geospatial:linearRingCoordinateArray;3",
        "@type": "Array",
        "elementSchema": "dtmi:standard:schema:geospatial:position;3"
      }
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:schema:geospatial:point;3",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:standard:schema:geospatial:point:type;3",
          "@type": "Field",
          "name": "type",
          "schema": "dtmi:standard:schema:geospatialPointType;3"
        },
        {
          "@id": "dtmi:standard:schema:geospatial:point:coordinates;3",
          "@type": "Field",
          "name": "coordinates",
          "schema": "dtmi:standard:schema:geospatial:position;3"
        }
      ],
      "description": {
        "en-US": "GeoJSON Point",
        "es-ES": "GeoJSON Point"
      }
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:schema:geospatial:multiPoint;3",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:standard:schema:geospatial:multiPoint:type;3",
          "@type": "Field",
          "name": "type",
          "schema": "dtmi:standard:schema:geospatialMultiPointType;3"
        },
        {
          "@id": "dtmi:standard:schema:geospatial:multiPoint:coordinates;3",
          "@type": "Field",
          "name": "coordinates",
          "schema": {
            "@id": "dtmi:standard:schema:geospatial:positionArray;3",
            "@type": "Array",
            "elementSchema": "dtmi:standard:schema:geospatial:position;3"
          }
        }
      ],
      "description": {
        "en-US": "GeoJSON MultiPoint",
        "es-ES": "GeoJSON MultiPoint"
      }
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:schema:geospatial:lineString;3",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:standard:schema:geospatial:lineString:type;3",
          "@type": "Field",
          "name": "type",
          "schema": "dtmi:standard:schema:geospatialLineStringType;3"
        },
        {
          "@id": "dtmi:standard:schema:geospatial:lineString:coordinates;3",
          "@type": "Field",
          "name": "coordinates",
          "schema": "dtmi:standard:schema:geospatial:lineStringCoordinateArray;3"
        }
      ],
      "description": {
        "en-US": "GeoJSON LineString",
        "es-ES": "GeoJSON LineString"
      }
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:schema:geospatial:multiLineString;3",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:standard:schema:geospatial:multiLineString:type;3",
          "@type": "Field",
          "name": "type",
          "schema": "dtmi:standard:schema:geospatialMultiLineStringType;3"
        },
        {
          "@id": "dtmi:standard:schema:geospatial:multiLineString:coordinates;3",
          "@type": "Field",
          "name": "coordinates",
          "schema": {
            "@id": "dtmi:standard:schema:geospatial:lineStringCoordinateArrayArray;3",
            "@type": "Array",
            "elementSchema": "dtmi:standard:schema:geospatial:lineStringCoordinateArray;3"
          }
        }
      ],
      "description": {
        "en-US": "GeoJSON MultiLineString",
        "es-ES": "GeoJSON MultiLineString"
      }
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:schema:geospatial:polygon;3",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:standard:schema:geospatial:polygon:type;3",
          "@type": "Field",
          "name": "type",
          "schema": "dtmi:standard:schema:geospatialPolygonType;3"
        },
        {
          "@id": "dtmi:standard:schema:geospatial:polygon:coordinates;3",
          "@type": "Field",
          "name": "coordinates",
          "schema": "dtmi:standard:schema:geospatial:polygonCoordinateArray;3"
        }
      ],
      "description": {
        "en-US": "GeoJSON Polygon",
        "es-ES": "GeoJSON Polygon"
      }
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:standard:schema:geospatial:multiPolygon;3",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:standard:schema:geospatial:multiPolygon:type;3",
          "@type": "Field",
          "name": "type",
          "schema": "dtmi:standard:schema:geospatialMultiPolygonType;3"
        },
        {
          "@id": "dtmi:standard:schema:geospatial:multiPolygon:coordinates;3",
          "@type": "Field",
          "name": "coordinates",
          "schema": {
            "@id": "dtmi:standard:schema:geospatial:polygonCoordinateArrayArray;3",
            "@type": "Array",
            "elementSchema": "dtmi:standard:schema:geospatial:polygonCoordinateArray;3"
          }
        }
      ],
      "description": {
        "en-US": "GeoJSON MultiPolygon",
        "es-ES": "GeoJSON MultiPolygon"
      }
    },
    {
      "@context": [
        "dtmi:dtdl:context;2",
        "dtmi:iotcentral:context;2"
      ],
      "@id": "dtmi:iotcentral:schema:vector;2",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:iotcentral:schema:vector:x;2",
          "@type": "Field",
          "name": "x",
          "schema": "double"
        },
        {
          "@id": "dtmi:iotcentral:schema:vector:y;2",
          "@type": "Field",
          "name": "y",
          "schema": "double"
        },
        {
          "@id": "dtmi:iotcentral:schema:vector:z;2",
          "@type": "Field",
          "name": "z",
          "schema": "double"
        }
      ]
    },
    {
      "@context": [
        "dtmi:dtdl:context;2",
        "dtmi:iotcentral:context;2"
      ],
      "@id": "dtmi:iotcentral:schema:geopoint;2",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:iotcentral:schema:geopoint:lon;2",
          "@type": "Field",
          "name": "lon",
          "schema": "double"
        },
        {
          "@id": "dtmi:iotcentral:schema:geopoint:lat;2",
          "@type": "Field",
          "name": "lat",
          "schema": "double"
        },
        {
          "@id": "dtmi:iotcentral:schema:geopoint:alt;2",
          "@type": "Field",
          "name": "alt",
          "schema": "double"
        }
      ]
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:iotcentral:context;3"
      ],
      "@id": "dtmi:iotcentral:schema:vector;3",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:iotcentral:schema:vector:x;3",
          "@type": "Field",
          "name": "x",
          "schema": "double"
        },
        {
          "@id": "dtmi:iotcentral:schema:vector:y;3",
          "@type": "Field",
          "name": "y",
          "schema": "double"
        },
        {
          "@id": "dtmi:iotcentral:schema:vector:z;3",
          "@type": "Field",
          "name": "z",
          "schema": "double"
        }
      ]
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:iotcentral:context;3"
      ],
      "@id": "dtmi:iotcentral:schema:geopoint;3",
      "@type": "Object",
      "fields": [
        {
          "@id": "dtmi:iotcentral:schema:geopoint:lon;3",
          "@type": "Field",
          "name": "lon",
          "schema": "double"
        },
        {
          "@id": "dtmi:iotcentral:schema:geopoint:lat;3",
          "@type": "Field",
          "name": "lat",
          "schema": "double"
        },
        {
          "@id": "dtmi:iotcentral:schema:geopoint:alt;3",
          "@type": "Field",
          "name": "alt",
          "schema": "double"
        }
      ]
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:DecimalPrefix",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:deci",
          "@type": [
            "EnumValue",
            "UnitPrefix"
          ],
          "name": "deci",
          "enumValue": "deci",
          "symbol": "d",
          "exponent": -1
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:centi",
          "@type": [
            "EnumValue",
            "UnitPrefix"
          ],
          "name": "centi",
          "enumValue": "centi",
          "symbol": "c",
          "exponent": -2
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:milli",
          "@type": [
            "EnumValue",
            "UnitPrefix"
          ],
          "name": "milli",
          "enumValue": "milli",
          "symbol": "m",
          "exponent": -3
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:micro",
          "@type": [
            "EnumValue",
            "UnitPrefix"
          ],
          "name": "micro",
          "enumValue": "micro",
          "symbol": "µ",
          "exponent": -6
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:nano",
          "@type": [
            "EnumValue",
            "UnitPrefix"
          ],
          "name": "nano",
          "enumValue": "nano",
          "symbol": "n",
          "exponent": -9
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:pico",
          "@type": [
            "EnumValue",
            "UnitPrefix"
          ],
          "name": "pico",
          "enumValue": "pico",
          "symbol": "p",
          "exponent": -12
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:femto",
          "@type": [
            "EnumValue",
            "UnitPrefix"
          ],
          "name": "femto",
          "enumValue": "femto",
          "symbol": "f",
          "exponent": -15
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:atto",
          "@type": [
            "EnumValue",
            "UnitPrefix"
          ],
          "name": "atto",
          "enumValue": "atto",
          "symbol": "a",
          "exponent": -18
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:zepto",
          "@type": [
            "EnumValue",
            "UnitPrefix"
          ],
          "name": "zepto",
          "enumValue": "zepto",
          "symbol": "z",
          "exponent": -21
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:yocto",
          "@type": [
            "EnumValue",
            "UnitPrefix"
          ],
          "name": "yocto",
          "enumValue": "yocto",
          "symbol": "y",
          "exponent": -24
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:deca",
          "@type": [
            "EnumValue",
            "UnitPrefix"
          ],
          "name": "deca",
          "enumValue": "deca",
          "symbol": "da",
          "exponent": 1
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:hecto",
          "@type": [
            "EnumValue",
            "UnitPrefix"
          ],
          "name": "hecto",
          "enumValue": "hecto",
          "symbol": "h",
          "exponent": 2
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:kilo",
          "@type": [
            "EnumValue",
            "UnitPrefix"
          ],
          "name": "kilo",
          "enumValue": "kilo",
          "symbol": "k",
          "exponent": 3
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:mega",
          "@type": [
            "EnumValue",
            "UnitPrefix"
          ],
          "name": "mega",
          "enumValue": "mega",
          "symbol": "M",
          "exponent": 6
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:giga",
          "@type": [
            "EnumValue",
            "UnitPrefix"
          ],
          "name": "giga",
          "enumValue": "giga",
          "symbol": "G",
          "exponent": 9
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:tera",
          "@type": [
            "EnumValue",
            "UnitPrefix"
          ],
          "name": "tera",
          "enumValue": "tera",
          "symbol": "T",
          "exponent": 12
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:peta",
          "@type": [
            "EnumValue",
            "UnitPrefix"
          ],
          "name": "peta",
          "enumValue": "peta",
          "symbol": "P",
          "exponent": 15
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:exa",
          "@type": [
            "EnumValue",
            "UnitPrefix"
          ],
          "name": "exa",
          "enumValue": "exa",
          "symbol": "E",
          "exponent": 18
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:zetta",
          "@type": [
            "EnumValue",
            "UnitPrefix"
          ],
          "name": "zetta",
          "enumValue": "zetta",
          "symbol": "Z",
          "exponent": 21
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:yotta",
          "@type": [
            "EnumValue",
            "UnitPrefix"
          ],
          "name": "yotta",
          "enumValue": "yotta",
          "symbol": "Y",
          "exponent": 24
        }
      ],
      "displayName": "DecimalPrefix"
    },
    {
      "@context": "dtmi:dtdl:context;3",
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:BinaryPrefix",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:kibi",
          "@type": [
            "EnumValue",
            "UnitPrefix"
          ],
          "name": "kibi",
          "enumValue": "kibi",
          "symbol": "Ki",
          "exponent": 10
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:mebi",
          "@type": [
            "EnumValue",
            "UnitPrefix"
          ],
          "name": "mebi",
          "enumValue": "mebi",
          "symbol": "Mi",
          "exponent": 20
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:gibi",
          "@type": [
            "EnumValue",
            "UnitPrefix"
          ],
          "name": "gibi",
          "enumValue": "gibi",
          "symbol": "Gi",
          "exponent": 30
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:tebi",
          "@type": [
            "EnumValue",
            "UnitPrefix"
          ],
          "name": "tebi",
          "enumValue": "tebi",
          "symbol": "Ti",
          "exponent": 40
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:pebi",
          "@type": [
            "EnumValue",
            "UnitPrefix"
          ],
          "name": "pebi",
          "enumValue": "pebi",
          "symbol": "Pi",
          "exponent": 50
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:exbi",
          "@type": [
            "EnumValue",
            "UnitPrefix"
          ],
          "name": "exbi",
          "enumValue": "exbi",
          "symbol": "Ei",
          "exponent": 60
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:zebi",
          "@type": [
            "EnumValue",
            "UnitPrefix"
          ],
          "name": "zebi",
          "enumValue": "zebi",
          "symbol": "Zi",
          "exponent": 70
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unitprefix:yobi",
          "@type": [
            "EnumValue",
            "UnitPrefix"
          ],
          "name": "yobi",
          "enumValue": "yobi",
          "symbol": "Yi",
          "exponent": 80
        }
      ],
      "displayName": "BinaryPrefix"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:AccelerationUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:metrePerSecondSquared",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit",
            "RatioUnit"
          ],
          "name": "metrePerSecondSquared",
          "enumValue": "metrePerSecondSquared",
          "displayName": "metre per second squared",
          "symbol": "m/s²",
          "baseUnit": "metrePerSecondSquared",
          "topUnit": "metrePerSecond",
          "bottomUnit": "second"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:centimetrePerSecondSquared",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit",
            "RatioUnit"
          ],
          "name": "centimetrePerSecondSquared",
          "enumValue": "centimetrePerSecondSquared",
          "displayName": "centimetre per second squared",
          "symbol": "cm/s²",
          "baseUnit": "metrePerSecondSquared",
          "prefix": "centi",
          "topUnit": "centimetrePerSecond",
          "bottomUnit": "second"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gForce",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "gForce",
          "enumValue": "gForce",
          "displayName": "g-force",
          "symbol": "g"
        }
      ],
      "displayName": "AccelerationUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:AngleUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:radian",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "radian",
          "enumValue": "radian",
          "displayName": "radian",
          "symbol": "rad"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:degreeOfArc",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "degreeOfArc",
          "enumValue": "degreeOfArc",
          "displayName": "degree of arc",
          "symbol": "°"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:minuteOfArc",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "minuteOfArc",
          "enumValue": "minuteOfArc",
          "displayName": "minute of arc",
          "symbol": "'"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:secondOfArc",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "secondOfArc",
          "enumValue": "secondOfArc",
          "displayName": "second of arc",
          "symbol": "\""
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:turn",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "turn",
          "enumValue": "turn",
          "displayName": "turn",
          "symbol": "turn"
        }
      ],
      "displayName": "AngleUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:AngularAccelerationUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:radianPerSecondSquared",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "RatioUnit"
          ],
          "name": "radianPerSecondSquared",
          "enumValue": "radianPerSecondSquared",
          "displayName": "radian per second squared",
          "symbol": "rad/s²",
          "topUnit": "radianPerSecond",
          "bottomUnit": "second"
        }
      ],
      "displayName": "AngularAccelerationUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:AngularVelocityUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:radianPerSecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "RatioUnit"
          ],
          "name": "radianPerSecond",
          "enumValue": "radianPerSecond",
          "displayName": "radian per second",
          "symbol": "rad/s",
          "topUnit": "radian",
          "bottomUnit": "second"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:degreePerSecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "RatioUnit"
          ],
          "name": "degreePerSecond",
          "enumValue": "degreePerSecond",
          "displayName": "degree per second",
          "symbol": "°/s",
          "topUnit": "degreeOfArc",
          "bottomUnit": "second"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:revolutionPerSecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "RatioUnit"
          ],
          "name": "revolutionPerSecond",
          "enumValue": "revolutionPerSecond",
          "displayName": "revolution per second",
          "symbol": "rps",
          "topUnit": "turn",
          "bottomUnit": "second"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:revolutionPerMinute",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "RatioUnit"
          ],
          "name": "revolutionPerMinute",
          "enumValue": "revolutionPerMinute",
          "displayName": "revolution per minute",
          "symbol": "rpm",
          "topUnit": "turn",
          "bottomUnit": "minute"
        }
      ],
      "displayName": "AngularVelocityUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:ApparentEnergyUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:voltAmpereHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "voltAmpereHour",
          "enumValue": "voltAmpereHour",
          "displayName": "volt-ampere-hour",
          "symbol": "VAh",
          "baseUnit": "voltAmpereHour"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilovoltAmpereHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "kilovoltAmpereHour",
          "enumValue": "kilovoltAmpereHour",
          "displayName": "kilovolt-ampere-hour",
          "symbol": "kVAh",
          "baseUnit": "voltAmpereHour",
          "prefix": "kilo"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:megavoltAmpereHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "megavoltAmpereHour",
          "enumValue": "megavoltAmpereHour",
          "displayName": "megavolt-ampere-hour",
          "symbol": "MVAh",
          "baseUnit": "voltAmpereHour",
          "prefix": "mega"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gigavoltAmpereHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "gigavoltAmpereHour",
          "enumValue": "gigavoltAmpereHour",
          "displayName": "gigavolt-ampere-hour",
          "symbol": "GVAh",
          "baseUnit": "voltAmpereHour",
          "prefix": "giga"
        }
      ],
      "displayName": "ApparentEnergyUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:ApparentPowerUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:voltAmpere",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "voltAmpere",
          "enumValue": "voltAmpere",
          "displayName": "volt-ampere",
          "symbol": "VA",
          "baseUnit": "voltAmpere"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:millivoltAmpere",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "millivoltAmpere",
          "enumValue": "millivoltAmpere",
          "displayName": "millivolt-ampere",
          "symbol": "mVA",
          "baseUnit": "voltAmpere",
          "prefix": "milli"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilovoltAmpere",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "kilovoltAmpere",
          "enumValue": "kilovoltAmpere",
          "displayName": "kilovolt-ampere",
          "symbol": "kVA",
          "baseUnit": "voltAmpere",
          "prefix": "kilo"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:megavoltAmpere",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "megavoltAmpere",
          "enumValue": "megavoltAmpere",
          "displayName": "megavolt-ampere",
          "symbol": "MVA",
          "baseUnit": "voltAmpere",
          "prefix": "mega"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gigavoltAmpere",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "gigavoltAmpere",
          "enumValue": "gigavoltAmpere",
          "displayName": "gigavolt-ampere",
          "symbol": "GVA",
          "baseUnit": "voltAmpere",
          "prefix": "giga"
        }
      ],
      "displayName": "ApparentPowerUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:AreaUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:squareMetre",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "squareMetre",
          "enumValue": "squareMetre",
          "displayName": "square metre",
          "symbol": "m²"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:squareCentimetre",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "squareCentimetre",
          "enumValue": "squareCentimetre",
          "displayName": "square centimetre",
          "symbol": "cm²"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:squareMillimetre",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "squareMillimetre",
          "enumValue": "squareMillimetre",
          "displayName": "square millimetre",
          "symbol": "mm²"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:squareKilometre",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "squareKilometre",
          "enumValue": "squareKilometre",
          "displayName": "square kilometre",
          "symbol": "km²"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:hectare",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "hectare",
          "enumValue": "hectare",
          "displayName": "hectare",
          "symbol": "ha"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:squareFoot",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "squareFoot",
          "enumValue": "squareFoot",
          "displayName": "square foot",
          "symbol": "ft²"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:squareInch",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "squareInch",
          "enumValue": "squareInch",
          "displayName": "square inch",
          "symbol": "in²"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:acre",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "acre",
          "enumValue": "acre",
          "displayName": "acre",
          "symbol": "ac"
        }
      ],
      "displayName": "AreaUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:CapacitanceUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:farad",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "farad",
          "enumValue": "farad",
          "displayName": "farad",
          "symbol": "F",
          "baseUnit": "farad"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:millifarad",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "millifarad",
          "enumValue": "millifarad",
          "displayName": "millifarad",
          "symbol": "mF",
          "baseUnit": "farad",
          "prefix": "milli"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:microfarad",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "microfarad",
          "enumValue": "microfarad",
          "displayName": "microfarad",
          "symbol": "µF",
          "baseUnit": "farad",
          "prefix": "micro"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:nanofarad",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "nanofarad",
          "enumValue": "nanofarad",
          "displayName": "nanofarad",
          "symbol": "nF",
          "baseUnit": "farad",
          "prefix": "nano"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:picofarad",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "picofarad",
          "enumValue": "picofarad",
          "displayName": "picofarad",
          "symbol": "pF",
          "baseUnit": "farad",
          "prefix": "pico"
        }
      ],
      "displayName": "CapacitanceUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:ChargeUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:coulomb",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "coulomb",
          "enumValue": "coulomb",
          "displayName": "coulomb",
          "symbol": "C",
          "baseUnit": "coulomb"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:ampereHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "ampereHour",
          "enumValue": "ampereHour",
          "displayName": "ampere hour",
          "symbol": "Ah",
          "baseUnit": "ampereHour"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:milliampereHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "milliampereHour",
          "enumValue": "milliampereHour",
          "displayName": "milliampere hour",
          "symbol": "mAh",
          "baseUnit": "ampereHour",
          "prefix": "milli"
        }
      ],
      "displayName": "ChargeUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:CurrentUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:ampere",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "ampere",
          "enumValue": "ampere",
          "displayName": "ampere",
          "symbol": "A",
          "baseUnit": "ampere"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:microampere",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "microampere",
          "enumValue": "microampere",
          "displayName": "microampere",
          "symbol": "µA",
          "baseUnit": "ampere",
          "prefix": "micro"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:milliampere",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "milliampere",
          "enumValue": "milliampere",
          "displayName": "milliampere",
          "symbol": "mA",
          "baseUnit": "ampere",
          "prefix": "milli"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kiloampere",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "kiloampere",
          "enumValue": "kiloampere",
          "displayName": "kiloampere",
          "symbol": "kA",
          "baseUnit": "ampere",
          "prefix": "kilo"
        }
      ],
      "displayName": "CurrentUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:DataRateUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:bitPerSecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit",
            "RatioUnit"
          ],
          "name": "bitPerSecond",
          "enumValue": "bitPerSecond",
          "displayName": "bit per second",
          "symbol": "bps",
          "baseUnit": "bitPerSecond",
          "topUnit": "bit",
          "bottomUnit": "second"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kibibitPerSecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit",
            "RatioUnit"
          ],
          "name": "kibibitPerSecond",
          "enumValue": "kibibitPerSecond",
          "displayName": "kibibit per second",
          "symbol": "Kibps",
          "baseUnit": "bitPerSecond",
          "prefix": "kibi",
          "topUnit": "kibibit",
          "bottomUnit": "second"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:mebibitPerSecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit",
            "RatioUnit"
          ],
          "name": "mebibitPerSecond",
          "enumValue": "mebibitPerSecond",
          "displayName": "mebibit per second",
          "symbol": "Mibps",
          "baseUnit": "bitPerSecond",
          "prefix": "mebi",
          "topUnit": "mebibit",
          "bottomUnit": "second"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gibibitPerSecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit",
            "RatioUnit"
          ],
          "name": "gibibitPerSecond",
          "enumValue": "gibibitPerSecond",
          "displayName": "gibibit per second",
          "symbol": "Gibps",
          "baseUnit": "bitPerSecond",
          "prefix": "gibi",
          "topUnit": "gibibit",
          "bottomUnit": "second"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:tebibitPerSecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit",
            "RatioUnit"
          ],
          "name": "tebibitPerSecond",
          "enumValue": "tebibitPerSecond",
          "displayName": "tebibit per second",
          "symbol": "Tibps",
          "baseUnit": "bitPerSecond",
          "prefix": "tebi",
          "topUnit": "tebibit",
          "bottomUnit": "second"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:exbibitPerSecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit",
            "RatioUnit"
          ],
          "name": "exbibitPerSecond",
          "enumValue": "exbibitPerSecond",
          "displayName": "exbibit per second",
          "symbol": "Eibps",
          "baseUnit": "bitPerSecond",
          "prefix": "exbi",
          "topUnit": "exbibit",
          "bottomUnit": "second"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:zebibitPerSecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit",
            "RatioUnit"
          ],
          "name": "zebibitPerSecond",
          "enumValue": "zebibitPerSecond",
          "displayName": "zebibit per second",
          "symbol": "Zibps",
          "baseUnit": "bitPerSecond",
          "prefix": "zebi",
          "topUnit": "zebibit",
          "bottomUnit": "second"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:yobibitPerSecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit",
            "RatioUnit"
          ],
          "name": "yobibitPerSecond",
          "enumValue": "yobibitPerSecond",
          "displayName": "yobibit per second",
          "symbol": "Yibps",
          "baseUnit": "bitPerSecond",
          "prefix": "yobi",
          "topUnit": "yobibit",
          "bottomUnit": "second"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:bytePerSecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit",
            "RatioUnit"
          ],
          "name": "bytePerSecond",
          "enumValue": "bytePerSecond",
          "displayName": "byte per second",
          "symbol": "Bps",
          "baseUnit": "bytePerSecond",
          "topUnit": "byte",
          "bottomUnit": "second"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kibibytePerSecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit",
            "RatioUnit"
          ],
          "name": "kibibytePerSecond",
          "enumValue": "kibibytePerSecond",
          "displayName": "kibibyte per second",
          "symbol": "KiBps",
          "baseUnit": "bytePerSecond",
          "prefix": "kibi",
          "topUnit": "kibibyte",
          "bottomUnit": "second"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:mebibytePerSecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit",
            "RatioUnit"
          ],
          "name": "mebibytePerSecond",
          "enumValue": "mebibytePerSecond",
          "displayName": "mebibyte per second",
          "symbol": "MiBps",
          "baseUnit": "bytePerSecond",
          "prefix": "mebi",
          "topUnit": "mebibyte",
          "bottomUnit": "second"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gibibytePerSecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit",
            "RatioUnit"
          ],
          "name": "gibibytePerSecond",
          "enumValue": "gibibytePerSecond",
          "displayName": "gibibyte per second",
          "symbol": "GiBps",
          "baseUnit": "bytePerSecond",
          "prefix": "gibi",
          "topUnit": "gibibyte",
          "bottomUnit": "second"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:tebibytePerSecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit",
            "RatioUnit"
          ],
          "name": "tebibytePerSecond",
          "enumValue": "tebibytePerSecond",
          "displayName": "tebibyte per second",
          "symbol": "TiBps",
          "baseUnit": "bytePerSecond",
          "prefix": "tebi",
          "topUnit": "tebibyte",
          "bottomUnit": "second"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:exbibytePerSecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit",
            "RatioUnit"
          ],
          "name": "exbibytePerSecond",
          "enumValue": "exbibytePerSecond",
          "displayName": "exbibyte per second",
          "symbol": "EiBps",
          "baseUnit": "bytePerSecond",
          "prefix": "exbi",
          "topUnit": "exbibyte",
          "bottomUnit": "second"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:zebibytePerSecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit",
            "RatioUnit"
          ],
          "name": "zebibytePerSecond",
          "enumValue": "zebibytePerSecond",
          "displayName": "zebibyte per second",
          "symbol": "ZiBps",
          "baseUnit": "bytePerSecond",
          "prefix": "zebi",
          "topUnit": "zebibyte",
          "bottomUnit": "second"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:yobibytePerSecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit",
            "RatioUnit"
          ],
          "name": "yobibytePerSecond",
          "enumValue": "yobibytePerSecond",
          "displayName": "yobibyte per second",
          "symbol": "YiBps",
          "baseUnit": "bytePerSecond",
          "prefix": "yobi",
          "topUnit": "yobibyte",
          "bottomUnit": "second"
        }
      ],
      "displayName": "DataRateUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:DataSizeUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:bit",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit"
          ],
          "name": "bit",
          "enumValue": "bit",
          "displayName": "bit",
          "symbol": "bit",
          "baseUnit": "bit"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kibibit",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit"
          ],
          "name": "kibibit",
          "enumValue": "kibibit",
          "displayName": "kibibit",
          "symbol": "Kibit",
          "baseUnit": "bit",
          "prefix": "kibi"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:mebibit",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit"
          ],
          "name": "mebibit",
          "enumValue": "mebibit",
          "displayName": "mebibit",
          "symbol": "Mibit",
          "baseUnit": "bit",
          "prefix": "mebi"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gibibit",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit"
          ],
          "name": "gibibit",
          "enumValue": "gibibit",
          "displayName": "gibibit",
          "symbol": "Gibit",
          "baseUnit": "bit",
          "prefix": "gibi"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:tebibit",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit"
          ],
          "name": "tebibit",
          "enumValue": "tebibit",
          "displayName": "tebibit",
          "symbol": "Tibit",
          "baseUnit": "bit",
          "prefix": "tebi"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:exbibit",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit"
          ],
          "name": "exbibit",
          "enumValue": "exbibit",
          "displayName": "exbibit",
          "symbol": "Eibit",
          "baseUnit": "bit",
          "prefix": "exbi"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:zebibit",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit"
          ],
          "name": "zebibit",
          "enumValue": "zebibit",
          "displayName": "zebibit",
          "symbol": "Zibit",
          "baseUnit": "bit",
          "prefix": "zebi"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:yobibit",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit"
          ],
          "name": "yobibit",
          "enumValue": "yobibit",
          "displayName": "yobibit",
          "symbol": "Yibit",
          "baseUnit": "bit",
          "prefix": "yobi"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:byte",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit"
          ],
          "name": "byte",
          "enumValue": "byte",
          "displayName": "byte",
          "symbol": "B",
          "baseUnit": "byte"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kibibyte",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit"
          ],
          "name": "kibibyte",
          "enumValue": "kibibyte",
          "displayName": "kibibyte",
          "symbol": "KiB",
          "baseUnit": "byte",
          "prefix": "kibi"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:mebibyte",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit"
          ],
          "name": "mebibyte",
          "enumValue": "mebibyte",
          "displayName": "mebibyte",
          "symbol": "MiB",
          "baseUnit": "byte",
          "prefix": "mebi"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gibibyte",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit"
          ],
          "name": "gibibyte",
          "enumValue": "gibibyte",
          "displayName": "gibibyte",
          "symbol": "GiB",
          "baseUnit": "byte",
          "prefix": "gibi"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:tebibyte",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit"
          ],
          "name": "tebibyte",
          "enumValue": "tebibyte",
          "displayName": "tebibyte",
          "symbol": "TiB",
          "baseUnit": "byte",
          "prefix": "tebi"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:exbibyte",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit"
          ],
          "name": "exbibyte",
          "enumValue": "exbibyte",
          "displayName": "exbibyte",
          "symbol": "EiB",
          "baseUnit": "byte",
          "prefix": "exbi"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:zebibyte",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit"
          ],
          "name": "zebibyte",
          "enumValue": "zebibyte",
          "displayName": "zebibyte",
          "symbol": "ZiB",
          "baseUnit": "byte",
          "prefix": "zebi"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:yobibyte",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "BinaryUnit"
          ],
          "name": "yobibyte",
          "enumValue": "yobibyte",
          "displayName": "yobibyte",
          "symbol": "YiB",
          "baseUnit": "byte",
          "prefix": "yobi"
        }
      ],
      "displayName": "DataSizeUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:DensityUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilogramPerCubicMetre",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit",
            "RatioUnit"
          ],
          "name": "kilogramPerCubicMetre",
          "enumValue": "kilogramPerCubicMetre",
          "displayName": "kilogram per cubic metre",
          "symbol": "kg/m³",
          "baseUnit": "gramPerCubicMetre",
          "prefix": "kilo",
          "topUnit": "kilogram",
          "bottomUnit": "cubicMetre"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gramPerCubicMetre",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit",
            "RatioUnit"
          ],
          "name": "gramPerCubicMetre",
          "enumValue": "gramPerCubicMetre",
          "displayName": "gram per cubic metre",
          "symbol": "g/m³",
          "baseUnit": "gramPerCubicMetre",
          "topUnit": "gram",
          "bottomUnit": "cubicMetre"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:milligramPerCubicMetre",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit",
            "RatioUnit"
          ],
          "name": "milligramPerCubicMetre",
          "enumValue": "milligramPerCubicMetre",
          "displayName": "milligram per cubic metre",
          "symbol": "mg/m³",
          "baseUnit": "gramPerCubicMetre",
          "prefix": "milli",
          "topUnit": "milligram",
          "bottomUnit": "cubicMetre"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:microgramPerCubicMetre",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit",
            "RatioUnit"
          ],
          "name": "microgramPerCubicMetre",
          "enumValue": "microgramPerCubicMetre",
          "displayName": "microgram per cubic metre",
          "symbol": "µg/m³",
          "baseUnit": "gramPerCubicMetre",
          "prefix": "micro",
          "topUnit": "microgram",
          "bottomUnit": "cubicMetre"
        }
      ],
      "displayName": "DensityUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:EnergyUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:joule",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "joule",
          "enumValue": "joule",
          "displayName": "joule",
          "symbol": "J",
          "baseUnit": "joule"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilojoule",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "kilojoule",
          "enumValue": "kilojoule",
          "displayName": "kilojoule",
          "symbol": "kJ",
          "baseUnit": "joule",
          "prefix": "kilo"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:megajoule",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "megajoule",
          "enumValue": "megajoule",
          "displayName": "megajoule",
          "symbol": "MJ",
          "baseUnit": "joule",
          "prefix": "mega"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gigajoule",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "gigajoule",
          "enumValue": "gigajoule",
          "displayName": "gigajoule",
          "symbol": "GJ",
          "baseUnit": "joule",
          "prefix": "giga"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:electronvolt",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "electronvolt",
          "enumValue": "electronvolt",
          "displayName": "electronvolt",
          "symbol": "eV",
          "baseUnit": "electronvolt"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:megaelectronvolt",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "megaelectronvolt",
          "enumValue": "megaelectronvolt",
          "displayName": "megaelectronvolt",
          "symbol": "MeV",
          "baseUnit": "electronvolt",
          "prefix": "mega"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:wattHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "wattHour",
          "enumValue": "wattHour",
          "displayName": "watt-hour",
          "symbol": "Wh",
          "baseUnit": "wattHour"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:milliwattHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "milliwattHour",
          "enumValue": "milliwattHour",
          "displayName": "milliwatt-hour",
          "symbol": "mWh",
          "baseUnit": "wattHour",
          "prefix": "milli"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilowattHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "kilowattHour",
          "enumValue": "kilowattHour",
          "displayName": "kilowatt-hour",
          "symbol": "kWh",
          "baseUnit": "wattHour",
          "prefix": "kilo"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:megawattHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "megawattHour",
          "enumValue": "megawattHour",
          "displayName": "megawatt-hour",
          "symbol": "MWh",
          "baseUnit": "wattHour",
          "prefix": "mega"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gigawattHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "gigawattHour",
          "enumValue": "gigawattHour",
          "displayName": "gigawatt-hour",
          "symbol": "GWh",
          "baseUnit": "wattHour",
          "prefix": "giga"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:terawattHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "terawattHour",
          "enumValue": "terawattHour",
          "displayName": "terawatt-hour",
          "symbol": "TWh",
          "baseUnit": "wattHour",
          "prefix": "tera"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:britishThermalUnit",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "britishThermalUnit",
          "enumValue": "britishThermalUnit",
          "displayName": "British thermal unit",
          "symbol": "BTU",
          "baseUnit": "britishThermalUnit"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kiloBritishThermalUnit",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "kiloBritishThermalUnit",
          "enumValue": "kiloBritishThermalUnit",
          "displayName": "kilo-British thermal unit",
          "symbol": "kBTU",
          "baseUnit": "britishThermalUnit",
          "prefix": "kilo"
        }
      ],
      "displayName": "EnergyUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:EnergyRateUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:joulePerHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit",
            "RatioUnit"
          ],
          "name": "joulePerHour",
          "enumValue": "joulePerHour",
          "displayName": "joulePerHour",
          "symbol": "J/h",
          "baseUnit": "joule",
          "topUnit": "joule",
          "bottomUnit": "hour"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilojoulePerHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit",
            "RatioUnit"
          ],
          "name": "kilojoulePerHour",
          "enumValue": "kilojoulePerHour",
          "displayName": "kilojoulePerHour",
          "symbol": "kJ/h",
          "baseUnit": "joulePerHour",
          "prefix": "kilo",
          "topUnit": "kilojoule",
          "bottomUnit": "hour"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:megajoulePerHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit",
            "RatioUnit"
          ],
          "name": "megajoulePerHour",
          "enumValue": "megajoulePerHour",
          "displayName": "megajoulePerHour",
          "symbol": "MJ/h",
          "baseUnit": "joulePerHour",
          "prefix": "mega",
          "topUnit": "megajoule",
          "bottomUnit": "hour"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gigajoulePerHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit",
            "RatioUnit"
          ],
          "name": "gigajoulePerHour",
          "enumValue": "gigajoulePerHour",
          "displayName": "gigajoulePerHour",
          "symbol": "GJ/h",
          "baseUnit": "joulePerHour",
          "prefix": "giga",
          "topUnit": "gigajoule",
          "bottomUnit": "hour"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:britishThermalUnitPerHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit",
            "RatioUnit"
          ],
          "name": "britishThermalUnitPerHour",
          "enumValue": "britishThermalUnitPerHour",
          "displayName": "British thermal unitPerHour",
          "symbol": "BTU/h",
          "baseUnit": "britishThermalUnit",
          "topUnit": "britishThermalUnit",
          "bottomUnit": "hour"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kiloBritishThermalUnitPerHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit",
            "RatioUnit"
          ],
          "name": "kiloBritishThermalUnitPerHour",
          "enumValue": "kiloBritishThermalUnitPerHour",
          "displayName": "kilo-British thermal unitPerHour",
          "symbol": "kBTU/h",
          "baseUnit": "britishThermalUnitPerHour",
          "prefix": "kilo",
          "topUnit": "kiloBritishThermalUnit",
          "bottomUnit": "hour"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilowattHourPerYear",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "RatioUnit"
          ],
          "name": "kilowattHourPerYear",
          "enumValue": "kilowattHourPerYear",
          "displayName": "kilowatt-hour per year",
          "symbol": "kWh/yr",
          "topUnit": "kilowattHour",
          "bottomUnit": "year"
        }
      ],
      "displayName": "EnergyRateUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:ForceUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:newton",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "newton",
          "enumValue": "newton",
          "displayName": "newton",
          "symbol": "N",
          "baseUnit": "newton"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:pound",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "pound",
          "enumValue": "pound",
          "displayName": "pound",
          "symbol": "lb"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:ounce",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "ounce",
          "enumValue": "ounce",
          "displayName": "ounce",
          "symbol": "oz"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:ton",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "ton",
          "enumValue": "ton",
          "displayName": "ton",
          "symbol": "T"
        }
      ],
      "displayName": "ForceUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:FrequencyUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:hertz",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "hertz",
          "enumValue": "hertz",
          "displayName": "hertz",
          "symbol": "Hz",
          "baseUnit": "hertz"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:millihertz",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "millihertz",
          "enumValue": "millihertz",
          "displayName": "millihertz",
          "symbol": "mHz",
          "baseUnit": "hertz",
          "prefix": "milli"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilohertz",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "kilohertz",
          "enumValue": "kilohertz",
          "displayName": "kilohertz",
          "symbol": "kHz",
          "baseUnit": "hertz",
          "prefix": "kilo"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:megahertz",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "megahertz",
          "enumValue": "megahertz",
          "displayName": "megahertz",
          "symbol": "MHz",
          "baseUnit": "hertz",
          "prefix": "mega"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gigahertz",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "gigahertz",
          "enumValue": "gigahertz",
          "displayName": "gigahertz",
          "symbol": "GHz",
          "baseUnit": "hertz",
          "prefix": "giga"
        }
      ],
      "displayName": "FrequencyUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:IlluminanceUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:lux",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "lux",
          "enumValue": "lux",
          "displayName": "lux",
          "symbol": "lx",
          "baseUnit": "lux"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:footcandle",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "footcandle",
          "enumValue": "footcandle",
          "displayName": "footcandle",
          "symbol": "fc"
        }
      ],
      "displayName": "IlluminanceUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:InductanceUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:henry",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "henry",
          "enumValue": "henry",
          "displayName": "henry",
          "symbol": "H",
          "baseUnit": "henry"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:millihenry",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "millihenry",
          "enumValue": "millihenry",
          "displayName": "millihenry",
          "symbol": "mH",
          "baseUnit": "henry",
          "prefix": "milli"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:microhenry",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "microhenry",
          "enumValue": "microhenry",
          "displayName": "microhenry",
          "symbol": "µH",
          "baseUnit": "henry",
          "prefix": "micro"
        }
      ],
      "displayName": "InductanceUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:IonizingRadiationDoseUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gray",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "gray",
          "enumValue": "gray",
          "displayName": "gray",
          "symbol": "Gy",
          "baseUnit": "gray"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:milligray",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "milligray",
          "enumValue": "milligray",
          "displayName": "milligray",
          "symbol": "mGy",
          "baseUnit": "gray",
          "prefix": "milli"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:microgray",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "microgray",
          "enumValue": "microgray",
          "displayName": "microgray",
          "symbol": "µGy",
          "baseUnit": "gray",
          "prefix": "micro"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:sievert",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "sievert",
          "enumValue": "sievert",
          "displayName": "sievert",
          "symbol": "Sv",
          "baseUnit": "sievert"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:millisievert",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "millisievert",
          "enumValue": "millisievert",
          "displayName": "millisievert",
          "symbol": "mSv",
          "baseUnit": "sievert",
          "prefix": "milli"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:microsievert",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "microsievert",
          "enumValue": "microsievert",
          "displayName": "microsievert",
          "symbol": "µSv",
          "baseUnit": "sievert",
          "prefix": "micro"
        }
      ],
      "displayName": "IonizingRadiationDoseUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:IrradianceUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:wattPerSquareMetre",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit",
            "RatioUnit"
          ],
          "name": "wattPerSquareMetre",
          "enumValue": "wattPerSquareMetre",
          "displayName": "watt per square metre",
          "symbol": "W/m²",
          "baseUnit": "wattPerSquareMetre",
          "topUnit": "watt",
          "bottomUnit": "squareMetre"
        }
      ],
      "displayName": "IrradianceUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:LengthUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:metre",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "metre",
          "enumValue": "metre",
          "displayName": "metre",
          "symbol": "m",
          "baseUnit": "metre"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:centimetre",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "centimetre",
          "enumValue": "centimetre",
          "displayName": "centimetre",
          "symbol": "cm",
          "baseUnit": "metre",
          "prefix": "centi"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:millimetre",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "millimetre",
          "enumValue": "millimetre",
          "displayName": "millimetre",
          "symbol": "mm",
          "baseUnit": "metre",
          "prefix": "milli"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:micrometre",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "micrometre",
          "enumValue": "micrometre",
          "displayName": "micrometre",
          "symbol": "µm",
          "baseUnit": "metre",
          "prefix": "micro"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:nanometre",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "nanometre",
          "enumValue": "nanometre",
          "displayName": "nanometre",
          "symbol": "nm",
          "baseUnit": "metre",
          "prefix": "nano"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilometre",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "kilometre",
          "enumValue": "kilometre",
          "displayName": "kilometre",
          "symbol": "km",
          "baseUnit": "metre",
          "prefix": "kilo"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:foot",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "foot",
          "enumValue": "foot",
          "displayName": "foot",
          "symbol": "ft"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:inch",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "inch",
          "enumValue": "inch",
          "displayName": "inch",
          "symbol": "in"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:mile",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "mile",
          "enumValue": "mile",
          "displayName": "mile",
          "symbol": "mi"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:nauticalMile",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "nauticalMile",
          "enumValue": "nauticalMile",
          "displayName": "nautical mile",
          "symbol": "M"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:astronomicalUnit",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "astronomicalUnit",
          "enumValue": "astronomicalUnit",
          "displayName": "astronomical unit",
          "symbol": "AU"
        }
      ],
      "displayName": "LengthUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:LuminanceUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:candelaPerSquareMetre",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit",
            "RatioUnit"
          ],
          "name": "candelaPerSquareMetre",
          "enumValue": "candelaPerSquareMetre",
          "displayName": "candela per square metre",
          "symbol": "cd/m²",
          "baseUnit": "candelaPerSquareMetre",
          "topUnit": "candela",
          "bottomUnit": "squareMetre"
        }
      ],
      "displayName": "LuminanceUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:LuminousFluxUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:lumen",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "lumen",
          "enumValue": "lumen",
          "displayName": "lumen",
          "symbol": "lm",
          "baseUnit": "lumen"
        }
      ],
      "displayName": "LuminousFluxUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:LuminousIntensityUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:candela",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "candela",
          "enumValue": "candela",
          "displayName": "candela",
          "symbol": "cd",
          "baseUnit": "candela"
        }
      ],
      "displayName": "LuminousIntensityUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:MagneticFluxUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:weber",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "weber",
          "enumValue": "weber",
          "displayName": "weber",
          "symbol": "Wb",
          "baseUnit": "weber"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:maxwell",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "maxwell",
          "enumValue": "maxwell",
          "displayName": "maxwell",
          "symbol": "Mx"
        }
      ],
      "displayName": "MagneticFluxUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:MagneticInductionUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:tesla",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "tesla",
          "enumValue": "tesla",
          "displayName": "tesla",
          "symbol": "T",
          "baseUnit": "tesla"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gauss",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "gauss",
          "enumValue": "gauss",
          "displayName": "gauss",
          "symbol": "G",
          "baseUnit": "gauss"
        }
      ],
      "displayName": "MagneticInductionUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:MassUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilogram",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "kilogram",
          "enumValue": "kilogram",
          "displayName": "kilogram",
          "symbol": "kg",
          "baseUnit": "gram",
          "prefix": "kilo"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gram",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "gram",
          "enumValue": "gram",
          "displayName": "gram",
          "symbol": "g",
          "baseUnit": "gram"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:milligram",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "milligram",
          "enumValue": "milligram",
          "displayName": "milligram",
          "symbol": "mg",
          "baseUnit": "gram",
          "prefix": "milli"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:microgram",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "microgram",
          "enumValue": "microgram",
          "displayName": "microgram",
          "symbol": "µg",
          "baseUnit": "gram",
          "prefix": "micro"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:tonne",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "tonne",
          "enumValue": "tonne",
          "displayName": "tonne",
          "symbol": "t"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:slug",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "slug",
          "enumValue": "slug",
          "displayName": "slug",
          "symbol": "slug"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:massPound",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "massPound",
          "enumValue": "massPound",
          "displayName": "pound",
          "symbol": "lb"
        }
      ],
      "displayName": "MassUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:MassFlowRateUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gramPerSecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit",
            "RatioUnit"
          ],
          "name": "gramPerSecond",
          "enumValue": "gramPerSecond",
          "displayName": "gram per second",
          "symbol": "g/s",
          "baseUnit": "gramPerSecond",
          "topUnit": "gram",
          "bottomUnit": "second"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilogramPerSecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit",
            "RatioUnit"
          ],
          "name": "kilogramPerSecond",
          "enumValue": "kilogramPerSecond",
          "displayName": "kilogram per second",
          "symbol": "kg/s",
          "baseUnit": "gramPerSecond",
          "prefix": "kilo",
          "topUnit": "kilogram",
          "bottomUnit": "second"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gramPerHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit",
            "RatioUnit"
          ],
          "name": "gramPerHour",
          "enumValue": "gramPerHour",
          "displayName": "gram per hour",
          "symbol": "g/h",
          "baseUnit": "gramPerHour",
          "topUnit": "gram",
          "bottomUnit": "hour"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilogramPerHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit",
            "RatioUnit"
          ],
          "name": "kilogramPerHour",
          "enumValue": "kilogramPerHour",
          "displayName": "kilogram per hour",
          "symbol": "kg/h",
          "baseUnit": "gramPerHour",
          "prefix": "kilo",
          "topUnit": "kilogram",
          "bottomUnit": "hour"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:massPoundPerHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "RatioUnit"
          ],
          "name": "massPoundPerHour",
          "enumValue": "massPoundPerHour",
          "displayName": "pound per hour",
          "symbol": "lb/h",
          "topUnit": "massPound",
          "bottomUnit": "hour"
        }
      ],
      "displayName": "MassFlowRateUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:PowerUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:watt",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "watt",
          "enumValue": "watt",
          "displayName": "watt",
          "symbol": "W",
          "baseUnit": "watt"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:microwatt",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "microwatt",
          "enumValue": "microwatt",
          "displayName": "microwatt",
          "symbol": "µW",
          "baseUnit": "watt",
          "prefix": "micro"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:milliwatt",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "milliwatt",
          "enumValue": "milliwatt",
          "displayName": "milliwatt",
          "symbol": "mW",
          "baseUnit": "watt",
          "prefix": "milli"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilowatt",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "kilowatt",
          "enumValue": "kilowatt",
          "displayName": "kilowatt",
          "symbol": "kW",
          "baseUnit": "watt",
          "prefix": "kilo"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:megawatt",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "megawatt",
          "enumValue": "megawatt",
          "displayName": "megawatt",
          "symbol": "MW",
          "baseUnit": "watt",
          "prefix": "mega"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gigawatt",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "gigawatt",
          "enumValue": "gigawatt",
          "displayName": "gigawatt",
          "symbol": "GW",
          "baseUnit": "watt",
          "prefix": "giga"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:horsepower",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "horsepower",
          "enumValue": "horsepower",
          "displayName": "horsepower",
          "symbol": "hp"
        }
      ],
      "displayName": "PowerUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:PressureUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:pascal",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "pascal",
          "enumValue": "pascal",
          "displayName": "pascal",
          "symbol": "Pa",
          "baseUnit": "pascal"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:decapascal",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "decapascal",
          "enumValue": "decapascal",
          "displayName": "decapascal",
          "symbol": "daPa",
          "baseUnit": "pascal",
          "prefix": "deca"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:hectopascal",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "hectopascal",
          "enumValue": "hectopascal",
          "displayName": "hectopascal",
          "symbol": "hPa",
          "baseUnit": "pascal",
          "prefix": "hecto"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilopascal",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "kilopascal",
          "enumValue": "kilopascal",
          "displayName": "kilopascal",
          "symbol": "kPa",
          "baseUnit": "pascal",
          "prefix": "kilo"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:bar",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "bar",
          "enumValue": "bar",
          "displayName": "bar",
          "symbol": "bar",
          "baseUnit": "bar"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:millibar",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "millibar",
          "enumValue": "millibar",
          "displayName": "millibar",
          "symbol": "mbar",
          "baseUnit": "bar",
          "prefix": "milli"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:millimetresOfMercury",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "millimetresOfMercury",
          "enumValue": "millimetresOfMercury",
          "displayName": "millimetres of mercury",
          "symbol": "mmHg"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:poundPerSquareInch",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "RatioUnit"
          ],
          "name": "poundPerSquareInch",
          "enumValue": "poundPerSquareInch",
          "displayName": "pound per square inch",
          "symbol": "psi",
          "topUnit": "pound",
          "bottomUnit": "squareInch"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:inchesOfMercury",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "inchesOfMercury",
          "enumValue": "inchesOfMercury",
          "displayName": "inches of mercury",
          "symbol": "inHg"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:inchesOfWater",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "inchesOfWater",
          "enumValue": "inchesOfWater",
          "displayName": "inches of water",
          "symbol": "inH2O"
        }
      ],
      "displayName": "PressureUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:RadioactivityUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:becquerel",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "becquerel",
          "enumValue": "becquerel",
          "displayName": "becquerel",
          "symbol": "Bq",
          "baseUnit": "becquerel"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilobecquerel",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "kilobecquerel",
          "enumValue": "kilobecquerel",
          "displayName": "kilobecquerel",
          "symbol": "kBq",
          "baseUnit": "becquerel",
          "prefix": "kilo"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:megabecquerel",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "megabecquerel",
          "enumValue": "megabecquerel",
          "displayName": "megabecquerel",
          "symbol": "MBq",
          "baseUnit": "becquerel",
          "prefix": "mega"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gigabecquerel",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "gigabecquerel",
          "enumValue": "gigabecquerel",
          "displayName": "gigabecquerel",
          "symbol": "GBq",
          "baseUnit": "becquerel",
          "prefix": "giga"
        }
      ],
      "displayName": "RadioactivityUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:ReactiveEnergyUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:voltAmpereReactiveHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "voltAmpereReactiveHour",
          "enumValue": "voltAmpereReactiveHour",
          "displayName": "volt-ampere-reactive-hour",
          "symbol": "varh",
          "baseUnit": "voltAmpereReactiveHour"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilovoltAmpereReactiveHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "kilovoltAmpereReactiveHour",
          "enumValue": "kilovoltAmpereReactiveHour",
          "displayName": "kilovolt-ampere-reactive-hour",
          "symbol": "kvarh",
          "baseUnit": "voltAmpereReactiveHour",
          "prefix": "kilo"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:megavoltAmpereReactiveHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "megavoltAmpereReactiveHour",
          "enumValue": "megavoltAmpereReactiveHour",
          "displayName": "megavolt-ampere-reactive-hour",
          "symbol": "Mvarh",
          "baseUnit": "voltAmpereReactiveHour",
          "prefix": "mega"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gigavoltAmpereReactiveHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "gigavoltAmpereReactiveHour",
          "enumValue": "gigavoltAmpereReactiveHour",
          "displayName": "gigavolt-ampere-reactive-hour",
          "symbol": "Gvarh",
          "baseUnit": "voltAmpereReactiveHour",
          "prefix": "giga"
        }
      ],
      "displayName": "ReactiveEnergyUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:ReactivePowerUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:voltAmpereReactive",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "voltAmpereReactive",
          "enumValue": "voltAmpereReactive",
          "displayName": "volt-ampere reactive",
          "symbol": "var",
          "baseUnit": "voltAmpereReactive"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:millivoltAmpereReactive",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "millivoltAmpereReactive",
          "enumValue": "millivoltAmpereReactive",
          "displayName": "millivolt-ampere reactive",
          "symbol": "mvar",
          "baseUnit": "voltAmpereReactive",
          "prefix": "milli"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilovoltAmpereReactive",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "kilovoltAmpereReactive",
          "enumValue": "kilovoltAmpereReactive",
          "displayName": "kilovolt-ampere reactive",
          "symbol": "kvar",
          "baseUnit": "voltAmpereReactive",
          "prefix": "kilo"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:megavoltAmpereReactive",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "megavoltAmpereReactive",
          "enumValue": "megavoltAmpereReactive",
          "displayName": "megavolt-ampere reactive",
          "symbol": "Mvar",
          "baseUnit": "voltAmpereReactive",
          "prefix": "mega"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gigavoltAmpereReactive",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "gigavoltAmpereReactive",
          "enumValue": "gigavoltAmpereReactive",
          "displayName": "gigavolt-ampere reactive",
          "symbol": "Gvar",
          "baseUnit": "voltAmpereReactive",
          "prefix": "giga"
        }
      ],
      "displayName": "ReactivePowerUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:ResistanceUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:ohm",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "ohm",
          "enumValue": "ohm",
          "displayName": "ohm",
          "symbol": "Ω",
          "baseUnit": "ohm"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:milliohm",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "milliohm",
          "enumValue": "milliohm",
          "displayName": "milliohm",
          "symbol": "mΩ",
          "baseUnit": "ohm",
          "prefix": "milli"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kiloohm",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "kiloohm",
          "enumValue": "kiloohm",
          "displayName": "kiloohm",
          "symbol": "kΩ",
          "baseUnit": "ohm",
          "prefix": "kilo"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:megaohm",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "megaohm",
          "enumValue": "megaohm",
          "displayName": "megaohm",
          "symbol": "MΩ",
          "baseUnit": "ohm",
          "prefix": "mega"
        }
      ],
      "displayName": "ResistanceUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:SoundPressureUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:decibel",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "decibel",
          "enumValue": "decibel",
          "displayName": "decibel",
          "symbol": "dB",
          "baseUnit": "bel",
          "prefix": "deci"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:bel",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "bel",
          "enumValue": "bel",
          "displayName": "bel",
          "symbol": "B",
          "baseUnit": "bel"
        }
      ],
      "displayName": "SoundPressureUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:TemperatureUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kelvin",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "kelvin",
          "enumValue": "kelvin",
          "displayName": "kelvin",
          "symbol": "K"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:degreeCelsius",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "degreeCelsius",
          "enumValue": "degreeCelsius",
          "displayName": "degree celsius",
          "symbol": "°C"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:degreeFahrenheit",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "degreeFahrenheit",
          "enumValue": "degreeFahrenheit",
          "displayName": "degree fahrenheit",
          "symbol": "°F"
        }
      ],
      "displayName": "TemperatureUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:TimeUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:second",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "second",
          "enumValue": "second",
          "displayName": "second",
          "symbol": "s",
          "baseUnit": "second"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:millisecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "millisecond",
          "enumValue": "millisecond",
          "displayName": "millisecond",
          "symbol": "ms",
          "baseUnit": "second",
          "prefix": "milli"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:microsecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "microsecond",
          "enumValue": "microsecond",
          "displayName": "microsecond",
          "symbol": "µs",
          "baseUnit": "second",
          "prefix": "micro"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:nanosecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "nanosecond",
          "enumValue": "nanosecond",
          "displayName": "nanosecond",
          "symbol": "ns",
          "baseUnit": "second",
          "prefix": "nano"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:minute",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "minute",
          "enumValue": "minute",
          "displayName": "minute",
          "symbol": "m"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:hour",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "hour",
          "enumValue": "hour",
          "displayName": "hour",
          "symbol": "h"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:day",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "day",
          "enumValue": "day",
          "displayName": "day",
          "symbol": "d"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:year",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "year",
          "enumValue": "year",
          "displayName": "year",
          "symbol": "yr"
        }
      ],
      "displayName": "TimeUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:TorqueUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:newtonMetre",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "newtonMetre",
          "enumValue": "newtonMetre",
          "displayName": "newton-metre",
          "symbol": "N m",
          "baseUnit": "newtonMetre"
        }
      ],
      "displayName": "TorqueUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:Unitless",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:unity",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "unity",
          "enumValue": "unity",
          "displayName": "",
          "symbol": ""
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:percent",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "percent",
          "enumValue": "percent",
          "displayName": "percent",
          "symbol": "%"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:partsPerMillion",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "partsPerMillion",
          "enumValue": "partsPerMillion",
          "displayName": "partsPerMillion",
          "symbol": "ppm"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:partsPerBillion",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "partsPerBillion",
          "enumValue": "partsPerBillion",
          "displayName": "partsPerBillion",
          "symbol": "ppb"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:partsPerTrillion",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "partsPerTrillion",
          "enumValue": "partsPerTrillion",
          "displayName": "partsPerTrillion",
          "symbol": "ppt"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:partsPerQuadrillion",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "partsPerQuadrillion",
          "enumValue": "partsPerQuadrillion",
          "displayName": "partsPerQuadrillion",
          "symbol": "ppq"
        }
      ],
      "displayName": "Unitless"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:VelocityUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:metrePerSecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit",
            "RatioUnit"
          ],
          "name": "metrePerSecond",
          "enumValue": "metrePerSecond",
          "displayName": "metre per second",
          "symbol": "m/s",
          "baseUnit": "metrePerSecond",
          "topUnit": "metre",
          "bottomUnit": "second"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:centimetrePerSecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit",
            "RatioUnit"
          ],
          "name": "centimetrePerSecond",
          "enumValue": "centimetrePerSecond",
          "displayName": "centimetre per second",
          "symbol": "cm/s",
          "baseUnit": "metrePerSecond",
          "prefix": "centi",
          "topUnit": "centimetre",
          "bottomUnit": "second"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilometrePerSecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit",
            "RatioUnit"
          ],
          "name": "kilometrePerSecond",
          "enumValue": "kilometrePerSecond",
          "displayName": "kilometre per second",
          "symbol": "km/s",
          "baseUnit": "metrePerSecond",
          "prefix": "kilo",
          "topUnit": "kilometre",
          "bottomUnit": "second"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:metrePerHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit",
            "RatioUnit"
          ],
          "name": "metrePerHour",
          "enumValue": "metrePerHour",
          "displayName": "metre per hour",
          "symbol": "m/h",
          "baseUnit": "metrePerHour",
          "topUnit": "metre",
          "bottomUnit": "hour"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilometrePerHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit",
            "RatioUnit"
          ],
          "name": "kilometrePerHour",
          "enumValue": "kilometrePerHour",
          "displayName": "kilometre per hour",
          "symbol": "km/h",
          "baseUnit": "metrePerHour",
          "prefix": "kilo",
          "topUnit": "kilometre",
          "bottomUnit": "hour"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:milePerHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "RatioUnit"
          ],
          "name": "milePerHour",
          "enumValue": "milePerHour",
          "displayName": "mile per hour",
          "symbol": "mph",
          "topUnit": "mile",
          "bottomUnit": "hour"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:milePerSecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "RatioUnit"
          ],
          "name": "milePerSecond",
          "enumValue": "milePerSecond",
          "displayName": "mile per second",
          "symbol": "mi/s",
          "topUnit": "mile",
          "bottomUnit": "second"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:knot",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "knot",
          "enumValue": "knot",
          "displayName": "knot",
          "symbol": "kn"
        }
      ],
      "displayName": "VelocityUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:VoltageUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:volt",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "volt",
          "enumValue": "volt",
          "displayName": "volt",
          "symbol": "V",
          "baseUnit": "volt"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:millivolt",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "millivolt",
          "enumValue": "millivolt",
          "displayName": "millivolt",
          "symbol": "mV",
          "baseUnit": "volt",
          "prefix": "milli"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:microvolt",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "microvolt",
          "enumValue": "microvolt",
          "displayName": "microvolt",
          "symbol": "µV",
          "baseUnit": "volt",
          "prefix": "micro"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:kilovolt",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "kilovolt",
          "enumValue": "kilovolt",
          "displayName": "kilovolt",
          "symbol": "kV",
          "baseUnit": "volt",
          "prefix": "kilo"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:megavolt",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "megavolt",
          "enumValue": "megavolt",
          "displayName": "megavolt",
          "symbol": "MV",
          "baseUnit": "volt",
          "prefix": "mega"
        }
      ],
      "displayName": "VoltageUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:VolumeUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:cubicMetre",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "cubicMetre",
          "enumValue": "cubicMetre",
          "displayName": "cubic metre",
          "symbol": "m³"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:cubicCentimetre",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "cubicCentimetre",
          "enumValue": "cubicCentimetre",
          "displayName": "cubic centimetre",
          "symbol": "cm³"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:litre",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "litre",
          "enumValue": "litre",
          "displayName": "litre",
          "symbol": "l",
          "baseUnit": "litre"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:millilitre",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit"
          ],
          "name": "millilitre",
          "enumValue": "millilitre",
          "displayName": "millilitre",
          "symbol": "ml",
          "baseUnit": "litre",
          "prefix": "milli"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:cubicFoot",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "cubicFoot",
          "enumValue": "cubicFoot",
          "displayName": "cubic foot",
          "symbol": "ft³"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:cubicInch",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "cubicInch",
          "enumValue": "cubicInch",
          "displayName": "cubic inch",
          "symbol": "in³"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:fluidOunce",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "fluidOunce",
          "enumValue": "fluidOunce",
          "displayName": "fluid ounce",
          "symbol": "fl oz"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gallon",
          "@type": [
            "EnumValue",
            "SymbolicUnit"
          ],
          "name": "gallon",
          "enumValue": "gallon",
          "displayName": "gallon",
          "symbol": "gal"
        }
      ],
      "displayName": "VolumeUnit"
    },
    {
      "@context": [
        "dtmi:dtdl:context;3",
        "dtmi:dtdl:extension:quantitativeTypes;1"
      ],
      "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:enum:VolumeFlowRateUnit",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:litrePerSecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit",
            "RatioUnit"
          ],
          "name": "litrePerSecond",
          "enumValue": "litrePerSecond",
          "displayName": "litre per second",
          "symbol": "l/s",
          "baseUnit": "litrePerSecond",
          "topUnit": "litre",
          "bottomUnit": "second"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:millilitrePerSecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit",
            "RatioUnit"
          ],
          "name": "millilitrePerSecond",
          "enumValue": "millilitrePerSecond",
          "displayName": "millilitre per second",
          "symbol": "ml/s",
          "baseUnit": "litrePerSecond",
          "prefix": "milli",
          "topUnit": "millilitre",
          "bottomUnit": "second"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:litrePerHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit",
            "RatioUnit"
          ],
          "name": "litrePerHour",
          "enumValue": "litrePerHour",
          "displayName": "litre per hour",
          "symbol": "l/h",
          "baseUnit": "litrePerHour",
          "topUnit": "litre",
          "bottomUnit": "hour"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:millilitrePerHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "DecimalUnit",
            "RatioUnit"
          ],
          "name": "millilitrePerHour",
          "enumValue": "millilitrePerHour",
          "displayName": "millilitre per hour",
          "symbol": "ml/h",
          "baseUnit": "litrePerHour",
          "prefix": "milli",
          "topUnit": "millilitre",
          "bottomUnit": "hour"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gallonPerMinute",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "RatioUnit"
          ],
          "name": "gallonPerMinute",
          "enumValue": "gallonPerMinute",
          "displayName": "gallon per minute",
          "symbol": "gal/min",
          "topUnit": "gallon",
          "bottomUnit": "minute"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:gallonPerHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "RatioUnit"
          ],
          "name": "gallonPerHour",
          "enumValue": "gallonPerHour",
          "displayName": "gallon per hour",
          "symbol": "gal/h",
          "topUnit": "gallon",
          "bottomUnit": "hour"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:cubicFootPerMinute",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "RatioUnit"
          ],
          "name": "cubicFootPerMinute",
          "enumValue": "cubicFootPerMinute",
          "displayName": "cubic foot per minute",
          "symbol": "ft³/min",
          "topUnit": "cubicFoot",
          "bottomUnit": "minute"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:cubicMetrePerHour",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "RatioUnit"
          ],
          "name": "cubicMetrePerHour",
          "enumValue": "cubicMetrePerHour",
          "displayName": "cubic metre per hour",
          "symbol": "ft³/h",
          "topUnit": "cubicMetre",
          "bottomUnit": "hour"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:cubicMetrePerMinute",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "RatioUnit"
          ],
          "name": "cubicMetrePerMinute",
          "enumValue": "cubicMetrePerMinute",
          "displayName": "cubic metre per minute",
          "symbol": "ft³/min",
          "topUnit": "cubicMetre",
          "bottomUnit": "minute"
        },
        {
          "@id": "dtmi:dtdl:extension:quantitativeTypes:v1:unit:cubicMetrePerSecond",
          "@type": [
            "EnumValue",
            "SymbolicUnit",
            "RatioUnit"
          ],
          "name": "cubicMetrePerSecond",
          "enumValue": "cubicMetrePerSecond",
          "displayName": "cubic metre per second",
          "symbol": "ft³/s",
          "topUnit": "cubicMetre",
          "bottomUnit": "second"
        }
      ],
      "displayName": "VolumeFlowRateUnit"
    }
  ]
}
